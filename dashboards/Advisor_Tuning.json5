{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "datasource",
          "uid": "grafana"
        },
        "enable": true,
        "hide": false,
        "iconColor": "#e0752d",
        "limit": 100,
        "name": "SSM Annotations",
        "showIn": 0,
        "tags": [
          "ssm_annotation"
        ],
        "type": "tags"
      },
      {
        "builtIn": 1,
        "datasource": {
          "type": "datasource",
          "uid": "grafana"
        },
        "enable": true,
        "hide": true,
        "iconColor": "#6ed0e0",
        "limit": 100,
        "name": "Annotations & Alerts",
        "showIn": 0,
        "tags": [],
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 1,
  "id": null,
  "links": [
    {
      "icon": "dashboard",
      "includeVars": true,
      "keepTime": true,
      "tags": [
        "QAN"
      ],
      "targetBlank": false,
      "title": "Query Analytics",
      "type": "link",
      "url": "/graph/d/ssm-qan/ssm-query-analytics"
    },
    {
      "asDropdown": true,
      "includeVars": true,
      "keepTime": true,
      "tags": [
        "OS"
      ],
      "targetBlank": false,
      "title": "OS",
      "type": "dashboards"
    },
    {
      "asDropdown": true,
      "includeVars": true,
      "keepTime": true,
      "tags": [
        "MySQL"
      ],
      "targetBlank": false,
      "title": "MySQL",
      "type": "dashboards"
    },
    {
      "asDropdown": true,
      "includeVars": true,
      "keepTime": true,
      "tags": [
        "MongoDB"
      ],
      "targetBlank": false,
      "title": "MongoDB",
      "type": "dashboards"
    },
    {
      "asDropdown": true,
      "includeVars": true,
      "keepTime": true,
      "tags": [
        "PostgreSQL"
      ],
      "targetBlank": false,
      "title": "PostgreSQL",
      "type": "dashboards"
    },
    {
      "asDropdown": true,
      "includeVars": true,
      "keepTime": true,
      "tags": [
        "HA"
      ],
      "targetBlank": false,
      "title": "HA",
      "type": "dashboards"
    },
    {
      "asDropdown": true,
      "includeVars": true,
      "keepTime": true,
      "tags": [
        "Cloud"
      ],
      "targetBlank": false,
      "title": "Cloud",
      "type": "dashboards"
    },
    {
      "asDropdown": true,
      "includeVars": true,
      "keepTime": true,
      "tags": [
        "Insight"
      ],
      "targetBlank": false,
      "title": "Insight",
      "type": "dashboards"
    },
    {
      "asDropdown": true,
      "includeVars": true,
      "keepTime": true,
      "tags": [
        "SSM"
      ],
      "targetBlank": false,
      "title": "SSM",
      "type": "dashboards"
    }
  ],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 69,
      "targets": [
        {
          "datasource": {
            "type": "prometheus"
          },
          "refId": "A"
        }
      ],
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 1
      },
      "id": 67,
      "links": [],
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "",
        "mode": "html"
      },
      "pluginVersion": "9.5.7",
      "targets": [
        {
          "datasource": {
            "type": "prometheus"
          },
          "refId": "A"
        }
      ],
      "type": "text",
      "title": "Tuning advice on this dashboard is unlikely to be reliable until at least 24 hours of telemetry data has accumulated and you zoom out to at least 24 hours."
    },
    {
      "collapsed": false,
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 2
      },
      "panels": [],
      "targets": [
        {
          "datasource": {
            "type": "prometheus"
          },
          "refId": "A"
        }
      ],
      "title": "table_definition_cache",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 20,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 3
      },
      "links": [],
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "9.5.7",
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_info_schema_table_count{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "intervalFactor": 1,
          "legendFormat": "Count",
          "metric": "",
          "refId": "A",
          "step": 300
        }
      ],
      "title": "Table Count",
      "description": "Note: If these graphs are empty, check that you have: ``info_schema.tables.databases = *`` and ``info_schema.tables = 1`` set in your mysqld_exporter.conf",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 12,
        "y": 3
      },
      "queryThresholds": "B",
      "colors": [
        "rgba(237, 129, 40, 0.89)",
        "rgba(36, 112, 33, 0.97)"
      ],
      "valueFontSize": "150%",
      "colorBackground": true,
      "exactThreshold": true,
      "hideTimeOverride": false,
      "interval": "$interval",
      "links": [],
      "maxDataPoints": 100,
      "pluginVersion": "9.5.7",
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_table_definition_cache{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "A",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
vector(400) and on() ( \n\
  mysql_info_schema_table_count{instance=~\"$host\"} < 400 \n\
) \n\
or on() clamp( \n\
  2^( \n\
    floor( \n\
      log2(mysql_info_schema_table_count{instance=~\"$host\"}) \n\
    )+1 \n\
  ), \n\
  400, \n\
  2097152 \n\
) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "B",
          "step": 300
        }
      ],
      "title": "Current",
      "description": "Note: If it's not working properly, check that you have: ``info_schema.tables.databases = *`` and ``info_schema.tables = 1`` set in your mysqld_exporter.conf",
      "type": "ssm-singlestat-panel"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 0,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "rgba(161, 18, 18, 0.9)",
                "value": null
              },
              {
                "color": "rgba(237, 129, 40, 0.89)",
                "value": 0.5
              },
              {
                "color": "rgba(36, 112, 33, 0.97)",
                "value": 1
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 18,
        "y": 3
      },
      "hideTimeOverride": false,
      "interval": "$interval",
      "links": [],
      "maxDataPoints": 100,
      "options": {
        "colorMode": "background_solid",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "value",
        "text": {
          "valueSize": 85
        }
      },
      "pluginVersion": "9.5.7",
      "queryThresholds": "A",
      "thresholdQuery": "B",
      "exactThreshold": true,
      "colors": [
        "rgba(237, 129, 40, 0.89)",
        "rgba(36, 112, 33, 0.97)"
      ],
      "valueFontSize": "150%",
      "colorBackground": true,
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
vector(400) and on() ( \n\
  mysql_info_schema_table_count{instance=~\"$host\"} < 400 \n\
) \n\
or on() clamp( \n\
  2^( \n\
    floor( \n\
      log2(mysql_info_schema_table_count{instance=~\"$host\"}) \n\
    )+1 \n\
  ), \n\
  400, \n\
  2097152 \n\
) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "A",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_table_definition_cache{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "B",
          "step": 300
        }
      ],
      "title": "Proposed",
      "description": "Note: If it's not working properly, check that you have: ``info_schema.tables.databases = *`` and ``info_schema.tables = 1`` set in your mysqld_exporter.conf",
      "type": "ssm-singlestat-panel"
    },
    {
      "collapsed": false,
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 11
      },
      "panels": [],
      "targets": [
        {
          "datasource": {
            "type": "prometheus"
          },
          "refId": "A"
        }
      ],
      "title": "table_open_cache",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 20,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 12
      },
      "links": [],
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "9.5.7",
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_table_open_cache{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "intervalFactor": 1,
          "legendFormat": "Table Open Cache",
          "metric": "",
          "refId": "A",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_status_open_tables{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "intervalFactor": 1,
          "legendFormat": "Open Tables",
          "metric": "",
          "refId": "B",
          "step": 300
        }
      ],
      "title": "Table Open Cache & Open Tables",
      "description": "Note: If you do not see any metric, try setting: ``collect.global_status = 1`` and ``collect.global_variables = 1`` in the mysqld_exporter config file.",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 12,
        "y": 12
      },
      "hideTimeOverride": false,
      "interval": "$interval",
      "links": [],
      "maxDataPoints": 100,
      "pluginVersion": "9.5.7",
      "queryThresholds": "B",
      "exactThreshold": true,
      "colors": [
        "rgba(237, 129, 40, 0.89)",
        "rgba(36, 112, 33, 0.97)"
      ],
      "valueFontSize": "150%",
      "colorBackground": true,
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_table_open_cache{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "A",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
clamp( \n\
  ( \n\
    2^( \n\
      floor( \n\
        log2(mysql_global_variables_table_open_cache{instance=~\"$host\"}) \n\
      ) + 1 \n\
    ) \n\
    and \n\
    ( \n\
      mysql_global_status_open_tables{instance=~\"$host\"} \n\
      / \n\
      mysql_global_variables_table_open_cache{instance=~\"$host\"} \n\
      > 0.9 \n\
    ) \n\
  ) \n\
  or on() ( \n\
    ( \n\
      2^( \n\
        ceil( \n\
          log2(mysql_global_variables_table_open_cache{instance=~\"$host\"}) \n\
        ) - 1 \n\
      ) \n\
      and \n\
      ( \n\
        mysql_global_status_open_tables{instance=~\"$host\"} \n\
        / \n\
        mysql_global_variables_table_open_cache{instance=~\"$host\"} \n\
        < 0.4 \n\
      ) \n\
    ) \n\
    or on() ( \n\
      mysql_global_variables_table_open_cache{instance=~\"$host\"} \n\
    ) \n\
  ), \n\
  2000, \n\
  1048576 \n\
) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "B",
          "step": 300
        }
      ],
      "title": "Current",
      "description": "Note: If it's not working properly, make sure you have set: ``collect.global_status = 1`` and ``collect.global_variables = 1`` in the mysqld_exporter config file.",
      "type": "ssm-singlestat-panel"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 18,
        "y": 12
      },
      "hideTimeOverride": false,
      "interval": "$interval",
      "links": [],
      "maxDataPoints": 100,
      "pluginVersion": "9.5.7",
      "queryThresholds": "A",
      "thresholdQuery": "B",
      "exactThreshold": true,
      "colors": [
        "rgba(237, 129, 40, 0.89)",
        "rgba(36, 112, 33, 0.97)"
      ],
      "valueFontSize": "150%",
      "colorBackground": true,
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
clamp( \n\
  ( \n\
    2^( \n\
      floor( \n\
        log2(mysql_global_variables_table_open_cache{instance=~\"$host\"}) \n\
      ) + 1 \n\
    ) \n\
    and \n\
    ( \n\
      mysql_global_status_open_tables{instance=~\"$host\"} \n\
      / \n\
      mysql_global_variables_table_open_cache{instance=~\"$host\"} \n\
      > 0.9 \n\
    ) \n\
  ) \n\
  or on() ( \n\
    ( \n\
      2^( \n\
        ceil( \n\
          log2(mysql_global_variables_table_open_cache{instance=~\"$host\"}) \n\
        ) - 1 \n\
      ) \n\
      and \n\
      ( \n\
        mysql_global_status_open_tables{instance=~\"$host\"} \n\
        / \n\
        mysql_global_variables_table_open_cache{instance=~\"$host\"} \n\
        < 0.4 \n\
      ) \n\
    ) \n\
    or on() ( \n\
      mysql_global_variables_table_open_cache{instance=~\"$host\"} \n\
    ) \n\
  ), \n\
  2000, \n\
  1048576 \n\
) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "A",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_table_open_cache{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "B",
          "step": 300
        }
      ],
      "title": "Proposed",
      "description": "Note: If it's not working properly, make sure you have set: ``collect.global_status = 1`` and ``collect.global_variables = 1`` in the mysqld_exporter config file.",
      "type": "ssm-singlestat-panel"
    },
    {
      "collapsed": false,
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 20
      },
      "panels": [],
      "targets": [
        {
          "datasource": {
            "type": "prometheus"
          },
          "refId": "A"
        }
      ],
      "title": "innodb_log_buffer_size",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 21
      },
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": {
        "type": "prometheus"
      },
      "decimals": 2,
      "description": "The InnoDB Log Buffer Performance graph shows the efficiency of the InnoDB log buffer.  The InnoDB log buffer size is defined by the innodb_log_buffer_size parameter and illustrated on the graph by the Size metric.  Used is the amount of the buffer space that is used.  If Used is too high and gets close to Size, additional log writes will be required.\n\nNote: If you do not see any metric, try running: ``SET GLOBAL innodb_monitor_enable=all;`` in the MySQL client.",
      "editable": true,
      "error": false,
      "fill": 2,
      "fillGradient": 0,
      "grid": {
        "leftLogBase": 1,
        "leftMin": 0,
        "rightLogBase": 1,
        "rightMin": 0
      },
      "hiddenSeries": false,
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": false,
        "max": true,
        "min": true,
        "rightSide": false,
        "show": true,
        "sort": "avg",
        "sortDesc": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 2,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,
      "pluginVersion": "9.5.7",
      "pointradius": 1,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "(mysql_info_schema_innodb_metrics_recovery_log_lsn_current{instance=~\"$host\"} or mysql_info_schema_innodb_metrics_log_log_lsn_current{instance=~\"$host\"})*0 + on (instance) mysql_global_variables_innodb_log_buffer_size{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "intervalFactor": 1,
          "legendFormat": "Size",
          "metric": "",
          "refId": "B",
          "step": 300
        },
        {
          "datasource": {
            "type": "prometheus"
          },
          "expr": "(mysql_info_schema_innodb_metrics_recovery_log_lsn_current{instance=~\"$host\"} or mysql_info_schema_innodb_metrics_log_log_lsn_current{instance=~\"$host\"}) - (mysql_info_schema_innodb_metrics_recovery_log_lsn_last_flush{instance=~\"$host\"} or mysql_info_schema_innodb_metrics_log_log_lsn_last_flush{instance=~\"$host\"})",
          "format": "time_series",
          "interval": "$interval",
          "intervalFactor": 1,
          "legendFormat": "Used",
          "metric": "",
          "refId": "A",
          "step": 300
        }
      ],
      "thresholds": [],
      "timeRegions": [],
      "title": "InnoDB Log Buffer Performance",
      "tooltip": {
        "msResolution": false,
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "x-axis": true,
      "xaxis": {
        "mode": "time",
        "show": true,
        "values": []
      },
      "y-axis": true,
      "y_formats": [
        "bytes",
        "short"
      ],
      "yaxes": [
        {
          "format": "bytes",
          "logBase": 1,
          "min": 0,
          "show": true
        },
        {
          "format": "short",
          "logBase": 1,
          "show": true
        }
      ],
      "yaxis": {
        "align": false
      },
      "description": "Note: If you do not see any metric, try setting: ``innodb_monitor_enable = all`` in mysql."
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 12,
        "y": 21
      },
      "hideTimeOverride": false,
      "interval": "$interval",
      "links": [],
      "maxDataPoints": 100,
      "pluginVersion": "9.5.7",
      "queryThresholds": "B",
      "colors": [
        "rgba(237, 129, 40, 0.89)",
        "rgba(36, 112, 33, 0.97)"
      ],
      "valueFontSize": "150%",
      "colorBackground": true,
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_innodb_log_buffer_size{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "A",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
clamp( \n\
  ( \n\
    mysql_global_variables_innodb_log_buffer_size{instance=~\"$host\"} \n\
    and on() ( \n\
      max_over_time( \n\
        ( \n\
          ( \n\
            mysql_info_schema_innodb_metrics_recovery_log_lsn_current{instance=~\"$host\"} \n\
            or \n\
            mysql_info_schema_innodb_metrics_log_log_lsn_current{instance=~\"$host\"} \n\
          ) - ( \n\
            mysql_info_schema_innodb_metrics_recovery_log_lsn_last_flush{instance=~\"$host\"} \n\
            or \n\
            mysql_info_schema_innodb_metrics_log_log_lsn_last_flush{instance=~\"$host\"} \n\
          ) \n\
        )[1w:2m] \n\
      ) < mysql_global_variables_innodb_log_buffer_size{instance=~\"$host\"} * 0.75 \n\
    ) \n\
  ) \n\
  or on() ( \n\
    2^( \n\
      floor( \n\
        log2( \n\
          max_over_time( \n\
            ( \n\
              ( \n\
                mysql_info_schema_innodb_metrics_recovery_log_lsn_current{instance=~\"$host\"} \n\
                or \n\
                mysql_info_schema_innodb_metrics_log_log_lsn_current{instance=~\"$host\"} \n\
              ) - ( \n\
                mysql_info_schema_innodb_metrics_recovery_log_lsn_last_flush{instance=~\"$host\"} \n\
                or \n\
                mysql_info_schema_innodb_metrics_log_log_lsn_last_flush{instance=~\"$host\"} \n\
              ) \n\
            )[1w:2m] \n\
          ) \n\
        ) \n\
      ) + 1 \n\
    ) \n\
  ), \n\
  262144, \n\
  4294967295 \n\
) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "B",
          "step": 300
        }
      ],
      "title": "Current",
      "description": "Note: If it's not working properly, try setting: ``innodb_monitor_enable = all`` in mysql.",
      "type": "ssm-singlestat-panel",
      "format": "bytes"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 18,
        "y": 21
      },
      "hideTimeOverride": false,
      "interval": "$interval",
      "links": [],
      "maxDataPoints": 100,
      "pluginVersion": "9.5.7",
      "queryThresholds": "A",
      "colors": [
        "rgba(237, 129, 40, 0.89)",
        "rgba(36, 112, 33, 0.97)"
      ],
      "valueFontSize": "150%",
      "colorBackground": true,
      "thresholdQuery": "B",
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
clamp( \n\
  ( \n\
    mysql_global_variables_innodb_log_buffer_size{instance=~\"$host\"} \n\
    and on() ( \n\
      max_over_time( \n\
        ( \n\
          ( \n\
            mysql_info_schema_innodb_metrics_recovery_log_lsn_current{instance=~\"$host\"} \n\
            or \n\
            mysql_info_schema_innodb_metrics_log_log_lsn_current{instance=~\"$host\"} \n\
          ) - ( \n\
            mysql_info_schema_innodb_metrics_recovery_log_lsn_last_flush{instance=~\"$host\"} \n\
            or \n\
            mysql_info_schema_innodb_metrics_log_log_lsn_last_flush{instance=~\"$host\"} \n\
          ) \n\
        )[1w:2m] \n\
      ) < mysql_global_variables_innodb_log_buffer_size{instance=~\"$host\"} * 0.75 \n\
    ) \n\
  ) \n\
  or on() ( \n\
    2^( \n\
      floor( \n\
        log2( \n\
          max_over_time( \n\
            ( \n\
              ( \n\
                mysql_info_schema_innodb_metrics_recovery_log_lsn_current{instance=~\"$host\"} \n\
                or \n\
                mysql_info_schema_innodb_metrics_log_log_lsn_current{instance=~\"$host\"} \n\
              ) - ( \n\
                mysql_info_schema_innodb_metrics_recovery_log_lsn_last_flush{instance=~\"$host\"} \n\
                or \n\
                mysql_info_schema_innodb_metrics_log_log_lsn_last_flush{instance=~\"$host\"} \n\
              ) \n\
            )[1w:2m] \n\
          ) \n\
        ) \n\
      ) + 1 \n\
    ) \n\
  ), \n\
  262144, \n\
  4294967295 \n\
) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "A",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_innodb_log_buffer_size{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "B",
          "step": 300
        }
      ],
      "title": "Proposed",
      "description": "Note: If it's not working properly, try setting: ``innodb_monitor_enable = all`` in mysql.",
      "type": "ssm-singlestat-panel",
      "format": "bytes"
    },
    {
      "collapsed": false,
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 29
      },
      "panels": [],
      "targets": [
        {
          "datasource": {
            "type": "prometheus"
          },
          "refId": "A"
        }
      ],
      "title": "innodb_redo_log_capacity/innodb_log_file_size",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "decbytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 30
      },
      "links": [],
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "9.5.7",
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "max_over_time(mysql_global_status_innodb_checkpoint_age{instance=~\"$host\"}[$interval]) or \nmax_over_time(mysql_global_status_innodb_checkpoint_age{instance=~\"$host\"}[5m]) or\nmax_over_time(mysql_info_schema_innodb_metrics_recovery_log_lsn_checkpoint_age_total{instance=~\"$host\"}[$interval]) or\nmax_over_time(mysql_info_schema_innodb_metrics_recovery_log_lsn_checkpoint_age_total{instance=~\"$host\"}[5m]) or\nmax_over_time(mysql_info_schema_innodb_metrics_log_log_lsn_checkpoint_age{instance=~\"$host\"}[$interval]) or\nmax_over_time(mysql_info_schema_innodb_metrics_log_log_lsn_checkpoint_age{instance=~\"$host\"}[5m])",
          "format": "time_series",
          "interval": "$interval",
          "intervalFactor": 1,
          "legendFormat": "Uncheckpointed Bytes",
          "metric": "",
          "refId": "A",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "max_over_time(mysql_global_status_innodb_checkpoint_max_age{instance=~\"$host\"}[$interval]) or\nmax_over_time(mysql_global_status_innodb_checkpoint_max_age{instance=~\"$host\"}[5m]) or\nmax_over_time(mysql_info_schema_innodb_metrics_recovery_log_max_modified_age_async{instance=~\"$host\"}[$interval]) or\nmax_over_time(mysql_info_schema_innodb_metrics_recovery_log_max_modified_age_async{instance=~\"$host\"}[5m]) or\nmax_over_time(mysql_info_schema_innodb_metrics_log_log_max_modified_age_async{instance=~\"$host\"}[$interval]) or\nmax_over_time(mysql_info_schema_innodb_metrics_log_log_max_modified_age_async{instance=~\"$host\"}[5m])",
          "format": "time_series",
          "interval": "$interval",
          "intervalFactor": 1,
          "legendFormat": "Max Checkpoint Age",
          "metric": "",
          "refId": "B",
          "step": 300
        }
      ],
      "title": "InnoDB Checkpoint Age",
      "description": "Note: If you do not see any metric, try setting: ``innodb_monitor_enable = all`` in mysql.",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 12,
        "y": 30
      },
      "hideTimeOverride": false,
      "interval": "$interval",
      "links": [],
      "maxDataPoints": 100,
      "pluginVersion": "9.5.7",
      "queryThresholds": "A,B",
      "colors": [
        "rgb(24, 27, 31)",
        "rgba(237, 129, 40, 0.89)",
        "rgba(36, 112, 33, 0.97)"
      ],
      "valueFontSize": "150%",
      "colorBackground": true,
      "exactThreshold": true,
      "thresholdQuery": "C",
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
mysql_global_variables_innodb_redo_log_capacity{instance=~\"$host\"} \n\
or \n\
mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} * mysql_global_variables_innodb_log_files_in_group{instance=~\"$host\"} \n\
or \n\
mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "A",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
clamp( \n\
  ( \n\
    2^( \n\
      ceil( \n\
        log2( \n\
          mysql_global_variables_innodb_redo_log_capacity{instance=~\"$host\"} \n\
          or \n\
          mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} * mysql_global_variables_innodb_log_files_in_group{instance=~\"$host\"} \n\
          or \n\
          mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} \n\
        ) \n\
      ) - 1 \n\
    ) \n\
    and on() ( \n\
      max_over_time( \n\
        ( \n\
          max( \n\
            mysql_global_status_innodb_checkpoint_age{instance=~\"$host\"} \n\
            or \n\
            mysql_info_schema_innodb_metrics_recovery_log_lsn_checkpoint_age_total{instance=~\"$host\"} \n\
            or \n\
            mysql_info_schema_innodb_metrics_log_log_lsn_checkpoint_age{instance=~\"$host\"} \n\
          ) \n\
        )[1w:2m] \n\
      ) < ( \n\
        mysql_global_variables_innodb_redo_log_capacity{instance=~\"$host\"} \n\
        or \n\
        mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} * mysql_global_variables_innodb_log_files_in_group{instance=~\"$host\"} \n\
        or \n\
        mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} \n\
      ) * 0.4 \n\
      and \n\
      max_over_time( \n\
        ( \n\
          mysql_global_variables_innodb_redo_log_capacity{instance=~\"$host\"} \n\
          or \n\
          mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} * mysql_global_variables_innodb_log_files_in_group{instance=~\"$host\"} \n\
          or \n\
          mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} \n\
        )[1w:2m] \n\
      ) == min_over_time( \n\
        ( \n\
          mysql_global_variables_innodb_redo_log_capacity{instance=~\"$host\"} \n\
          or \n\
          mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} * mysql_global_variables_innodb_log_files_in_group{instance=~\"$host\"} \n\
          or \n\
          mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} \n\
        )[1w:2m]\n\
      ) \n\
    ) \n\
  ) or on() ( \n\
    ( \n\
      2^( \n\
        floor( \n\
          log2( \n\
            mysql_global_variables_innodb_redo_log_capacity{instance=~\"$host\"} \n\
            or \n\
            mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} * mysql_global_variables_innodb_log_files_in_group{instance=~\"$host\"} \n\
            or \n\
            mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} \n\
          ) \n\
        ) + 1 \n\
      ) \n\
      and on() ( \n\
        max_over_time( \n\
          ( \n\
            max( \n\
              mysql_global_status_innodb_checkpoint_age{instance=~\"$host\"} \n\
              or \n\
              mysql_info_schema_innodb_metrics_recovery_log_lsn_checkpoint_age_total{instance=~\"$host\"} \n\
              or \n\
              mysql_info_schema_innodb_metrics_log_log_lsn_checkpoint_age{instance=~\"$host\"} \n\
            ) \n\
          )[1w:2m] \n\
        ) > ( \n\
          mysql_global_variables_innodb_redo_log_capacity{instance=~\"$host\"} \n\
          or \n\
          mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} * mysql_global_variables_innodb_log_files_in_group{instance=~\"$host\"} \n\
          or \n\
          mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} \n\
        ) * 0.9 \n\
        and \n\
        max_over_time( \n\
          ( \n\
            mysql_global_variables_innodb_redo_log_capacity{instance=~\"$host\"} \n\
            or \n\
            mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} * mysql_global_variables_innodb_log_files_in_group{instance=~\"$host\"} \n\
            or \n\
            mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} \n\
          )[1w:2m] \n\
        ) == min_over_time( \n\
          ( \n\
            mysql_global_variables_innodb_redo_log_capacity{instance=~\"$host\"} \n\
            or \n\
            mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} * mysql_global_variables_innodb_log_files_in_group{instance=~\"$host\"} \n\
            or \n\
            mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} \n\
          )[1w:2m]\n\
        ) \n\
      ) \n\
    ) or on() ( \n\
      ( \n\
        mysql_global_variables_innodb_redo_log_capacity{instance=~\"$host\"} \n\
        or \n\
        mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} * mysql_global_variables_innodb_log_files_in_group{instance=~\"$host\"} \n\
        or \n\
        mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} \n\
      ) \n\
    ) \n\
  ), \n\
  100663296, \n\
  137438953472 \n\
) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "B",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
( \n\
  mysql_global_variables_innodb_redo_log_capacity{instance=~\"$host\"} \n\
  or \n\
  mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} * mysql_global_variables_innodb_log_files_in_group{instance=~\"$host\"} \n\
  or \n\
  mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} \n\
) \n\
and on() ( \n\
  max_over_time( \n\
    ( \n\
      mysql_global_variables_innodb_redo_log_capacity{instance=~\"$host\"} \n\
      or \n\
      mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} * mysql_global_variables_innodb_log_files_in_group{instance=~\"$host\"} \n\
      or \n\
      mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} \n\
    )[1w:1w] \n\
  ) == min_over_time( \n\
    ( \n\
      mysql_global_variables_innodb_redo_log_capacity{instance=~\"$host\"} \n\
      or \n\
      mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} * mysql_global_variables_innodb_log_files_in_group{instance=~\"$host\"} \n\
      or \n\
      mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} \n\
    )[1w:1w]\n\
  ) \n\
  and \n\
  max_over_time( \n\
    ( \n\
      mysql_global_variables_innodb_redo_log_capacity{instance=~\"$host\"} \n\
      or \n\
      mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} * mysql_global_variables_innodb_log_files_in_group{instance=~\"$host\"} \n\
      or \n\
      mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} \n\
    )[1w:2m] \n\
  ) == min_over_time( \n\
    ( \n\
      mysql_global_variables_innodb_redo_log_capacity{instance=~\"$host\"} \n\
      or \n\
      mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} * mysql_global_variables_innodb_log_files_in_group{instance=~\"$host\"} \n\
      or \n\
      mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} \n\
    )[1w:2m]\n\
  ) \n\
) \n\
or on() vector(0) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "C",
          "step": 300
        }
      ],
      "title": "Current",
      "description": "\
Note: If it's not working properly, try setting: ``innodb_monitor_enable = all`` in mysql.\n\
\n\
When tuning innodb_log_file_size, the value refers to total size of redo logs (innodb_log_file_size x innodb_log_files_in_group).\n\
\n\
This tuning takes 1 week of observation, if you have changed the value, please wait at least 1 week to check the new propose value.\
",
      "type": "ssm-singlestat-panel",
      "format": "bytes"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 18,
        "y": 30
      },
      "hideTimeOverride": false,
      "interval": "$interval",
      "links": [],
      "maxDataPoints": 100,
      "pluginVersion": "9.5.7",
      "queryThresholds": "B,A",
      "colors": [
        "rgb(24, 27, 31)",
        "rgba(237, 129, 40, 0.89)",
        "rgba(36, 112, 33, 0.97)"
      ],
      "valueFontSize": "150%",
      "colorBackground": true,
      "exactThreshold": true,
      "thresholdQuery": "C",
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "-1"
        }
      ],
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
clamp( \n\
  ( \n\
    2^( \n\
      ceil( \n\
        log2( \n\
          mysql_global_variables_innodb_redo_log_capacity{instance=~\"$host\"} \n\
          or \n\
          mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} * mysql_global_variables_innodb_log_files_in_group{instance=~\"$host\"} \n\
          or \n\
          mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} \n\
        ) \n\
      ) - 1 \n\
    ) \n\
    and on() ( \n\
      max_over_time( \n\
        ( \n\
          max( \n\
            mysql_global_status_innodb_checkpoint_age{instance=~\"$host\"} \n\
            or \n\
            mysql_info_schema_innodb_metrics_recovery_log_lsn_checkpoint_age_total{instance=~\"$host\"} \n\
            or \n\
            mysql_info_schema_innodb_metrics_log_log_lsn_checkpoint_age{instance=~\"$host\"} \n\
          ) \n\
        )[1w:2m] \n\
      ) < ( \n\
        mysql_global_variables_innodb_redo_log_capacity{instance=~\"$host\"} \n\
        or \n\
        mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} * mysql_global_variables_innodb_log_files_in_group{instance=~\"$host\"} \n\
        or \n\
        mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} \n\
      ) * 0.4 \n\
      and \n\
      max_over_time( \n\
        ( \n\
          mysql_global_variables_innodb_redo_log_capacity{instance=~\"$host\"} \n\
          or \n\
          mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} * mysql_global_variables_innodb_log_files_in_group{instance=~\"$host\"} \n\
          or \n\
          mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} \n\
        )[1w:2m] \n\
      ) == min_over_time( \n\
        ( \n\
          mysql_global_variables_innodb_redo_log_capacity{instance=~\"$host\"} \n\
          or \n\
          mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} * mysql_global_variables_innodb_log_files_in_group{instance=~\"$host\"} \n\
          or \n\
          mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} \n\
        )[1w:2m]\n\
      ) \n\
    ) \n\
  ) or on() ( \n\
    ( \n\
      2^( \n\
        floor( \n\
          log2( \n\
            mysql_global_variables_innodb_redo_log_capacity{instance=~\"$host\"} \n\
            or \n\
            mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} * mysql_global_variables_innodb_log_files_in_group{instance=~\"$host\"} \n\
            or \n\
            mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} \n\
          ) \n\
        ) + 1 \n\
      ) \n\
      and on() ( \n\
        max_over_time( \n\
          ( \n\
            max( \n\
              mysql_global_status_innodb_checkpoint_age{instance=~\"$host\"} \n\
              or \n\
              mysql_info_schema_innodb_metrics_recovery_log_lsn_checkpoint_age_total{instance=~\"$host\"} \n\
              or \n\
              mysql_info_schema_innodb_metrics_log_log_lsn_checkpoint_age{instance=~\"$host\"} \n\
            ) \n\
          )[1w:2m] \n\
        ) > ( \n\
          mysql_global_variables_innodb_redo_log_capacity{instance=~\"$host\"} \n\
          or \n\
          mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} * mysql_global_variables_innodb_log_files_in_group{instance=~\"$host\"} \n\
          or \n\
          mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} \n\
        ) * 0.9 \n\
        and \n\
        max_over_time( \n\
          ( \n\
            mysql_global_variables_innodb_redo_log_capacity{instance=~\"$host\"} \n\
            or \n\
            mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} * mysql_global_variables_innodb_log_files_in_group{instance=~\"$host\"} \n\
            or \n\
            mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} \n\
          )[1w:2m] \n\
        ) == min_over_time( \n\
          ( \n\
            mysql_global_variables_innodb_redo_log_capacity{instance=~\"$host\"} \n\
            or \n\
            mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} * mysql_global_variables_innodb_log_files_in_group{instance=~\"$host\"} \n\
            or \n\
            mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} \n\
          )[1w:2m]\n\
        ) \n\
      ) \n\
    ) or on() ( \n\
      ( \n\
        mysql_global_variables_innodb_redo_log_capacity{instance=~\"$host\"} \n\
        or \n\
        mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} * mysql_global_variables_innodb_log_files_in_group{instance=~\"$host\"} \n\
        or \n\
        mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} \n\
      ) \n\
    ) \n\
  ), \n\
  100663296, \n\
  137438953472 \n\
) \n\
and on() ( \n\
  max_over_time( \n\
    ( \n\
      mysql_global_variables_innodb_redo_log_capacity{instance=~\"$host\"} \n\
      or \n\
      mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} * mysql_global_variables_innodb_log_files_in_group{instance=~\"$host\"} \n\
      or \n\
      mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} \n\
    )[1w:1w] \n\
  ) == min_over_time( \n\
    ( \n\
      mysql_global_variables_innodb_redo_log_capacity{instance=~\"$host\"} \n\
      or \n\
      mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} * mysql_global_variables_innodb_log_files_in_group{instance=~\"$host\"} \n\
      or \n\
      mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} \n\
    )[1w:1w]\n\
  ) \n\
  and \n\
  max_over_time( \n\
    ( \n\
      mysql_global_variables_innodb_redo_log_capacity{instance=~\"$host\"} \n\
      or \n\
      mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} * mysql_global_variables_innodb_log_files_in_group{instance=~\"$host\"} \n\
      or \n\
      mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} \n\
    )[1w:2m] \n\
  ) == min_over_time( \n\
    ( \n\
      mysql_global_variables_innodb_redo_log_capacity{instance=~\"$host\"} \n\
      or \n\
      mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} * mysql_global_variables_innodb_log_files_in_group{instance=~\"$host\"} \n\
      or \n\
      mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} \n\
    )[1w:2m]\n\
  ) \n\
) \n\
or on() vector(-1) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "A",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
mysql_global_variables_innodb_redo_log_capacity{instance=~\"$host\"} \n\
or \n\
mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} * mysql_global_variables_innodb_log_files_in_group{instance=~\"$host\"} \n\
or \n\
mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "B",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
( \n\
  mysql_global_variables_innodb_redo_log_capacity{instance=~\"$host\"} \n\
  or \n\
  mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} * mysql_global_variables_innodb_log_files_in_group{instance=~\"$host\"} \n\
  or \n\
  mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} \n\
) \n\
and on() ( \n\
  max_over_time( \n\
    ( \n\
      mysql_global_variables_innodb_redo_log_capacity{instance=~\"$host\"} \n\
      or \n\
      mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} * mysql_global_variables_innodb_log_files_in_group{instance=~\"$host\"} \n\
      or \n\
      mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} \n\
    )[1w:1w] \n\
  ) == min_over_time( \n\
    ( \n\
      mysql_global_variables_innodb_redo_log_capacity{instance=~\"$host\"} \n\
      or \n\
      mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} * mysql_global_variables_innodb_log_files_in_group{instance=~\"$host\"} \n\
      or \n\
      mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} \n\
    )[1w:1w]\n\
  ) \n\
  and \n\
  max_over_time( \n\
    ( \n\
      mysql_global_variables_innodb_redo_log_capacity{instance=~\"$host\"} \n\
      or \n\
      mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} * mysql_global_variables_innodb_log_files_in_group{instance=~\"$host\"} \n\
      or \n\
      mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} \n\
    )[1w:2m] \n\
  ) == min_over_time( \n\
    ( \n\
      mysql_global_variables_innodb_redo_log_capacity{instance=~\"$host\"} \n\
      or \n\
      mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} * mysql_global_variables_innodb_log_files_in_group{instance=~\"$host\"} \n\
      or \n\
      mysql_global_variables_innodb_log_file_size{instance=~\"$host\"} \n\
    )[1w:2m]\n\
  ) \n\
) \n\
or on() vector(0) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "C",
          "step": 300
        }
      ],
      "title": "Proposed",
      "description": "\
Note: If it's not working properly, try setting: ``innodb_monitor_enable = all`` in mysql.\n\
\n\
When tuning innodb_log_file_size, the value refers to total size of redo logs (innodb_log_file_size x innodb_log_files_in_group).\n\
\n\
This tuning takes 1 week of observation, if you have changed the value, please wait at least 1 week to check the new propose value.\
",
      "type": "ssm-singlestat-panel",
      "format": "bytes"
    },
    {
      "collapsed": false,
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 38
      },
      "panels": [],
      "targets": [
        {
          "datasource": {
            "type": "prometheus"
          },
          "refId": "A"
        }
      ],
      "title": "innodb_io_capacity/innodb_io_capacity_max",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 20,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Disk IO Utilization"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "unit",
                "value": "percentunit"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 39
      },
      "links": [],
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "9.5.7",
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
( \n\
  ( \n\
    max(rate(node_disk_reads_completed{instance=~\"$host\"}[$interval])) \n\
    or \n\
    max(rate(node_disk_reads_completed_total{instance=~\"$host\"}[$interval])) \n\
    or \n\
    max(irate(node_disk_reads_completed{instance=~\"$host\"}[5m])) \n\
    or \n\
    max(irate(node_disk_reads_completed_total{instance=~\"$host\"}[5m])) \n\
  ) \n\
  or \n\
  sum by (instance) ( \n\
    max_over_time(rdsosmetrics_diskIO_readIOsPS{instance=~\"$host\"}[$interval]) \n\
    or \n\
    max_over_time(rdsosmetrics_diskIO_readIOsPS{instance=~\"$host\"}[5m]) \n\
  ) \n\
) \n\
+ \n\
( \n\
  ( \n\
    max(rate(node_disk_writes_completed{instance=~\"$host\"}[$interval])) \n\
    or \n\
    max(rate(node_disk_writes_completed_total{instance=~\"$host\"}[$interval])) \n\
    or \n\
    max(irate(node_disk_writes_completed{instance=~\"$host\"}[5m])) \n\
    or \n\
    max(irate(node_disk_writes_completed_total{instance=~\"$host\"}[5m])) \n\
  ) \n\
  or \n\
  sum by (instance) ( \n\
    max_over_time(rdsosmetrics_diskIO_writeIOsPS{instance=~\"$host\"}[$interval]) \n\
    or \n\
    max_over_time(rdsosmetrics_diskIO_writeIOsPS{instance=~\"$host\"}[5m]) \n\
  ) \n\
) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "intervalFactor": 1,
          "legendFormat": "Disk I/Os per second",
          "metric": "",
          "refId": "A",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
max(rate(node_disk_io_time_ms{instance=~\"$host\"}[$interval])) / 1000 \n\
or \n\
max(rate(node_disk_io_time_ms_total{instance=~\"$host\"}[$interval])) / 1000 \n\
or \n\
max(irate(node_disk_io_time_ms{instance=~\"$host\"}[5m])) / 1000 \n\
or \n\
max(irate(node_disk_io_time_ms_total{instance=~\"$host\"}[5m])) / 1000 \n\
or \n\
max(rate(node_disk_io_time_seconds_total{instance=~\"$host\"}[$interval])) \n\
or \n\
max(irate(node_disk_io_time_seconds_total{instance=~\"$host\"}[5m])) \n\
or \n\
sum by (instance) ( \n\
  max_over_time(rdsosmetrics_diskIO_util{instance=~\"$host\"}[$interval]) \n\
  or \n\
  max_over_time(rdsosmetrics_diskIO_util{instance=~\"$host\"}[5m]) \n\
) / 100 \n\
",
          "format": "time_series",
          "interval": "$interval",
          "intervalFactor": 1,
          "legendFormat": "Disk IO Utilization",
          "metric": "",
          "refId": "B",
          "step": 300
        }
      ],
      "title": "Disk IO Utilization",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 4,
        "w": 6,
        "x": 12,
        "y": 39
      },
      "hideTimeOverride": false,
      "interval": "$interval",
      "links": [],
      "maxDataPoints": 100,
      "pluginVersion": "9.5.7",
      "queryThresholds": "B",
      "colors": [
        "rgba(237, 129, 40, 0.89)",
        "rgba(36, 112, 33, 0.97)"
      ],
      "valueFontSize": "150%",
      "colorBackground": true,
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_innodb_io_capacity_max{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "A",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
clamp( \n\
  ( \n\
    mysql_global_variables_innodb_io_capacity_max{instance=~\"$host\"} \n\
    and \n\
    on() ( \n\
      scalar(mysql_global_variables_innodb_io_capacity_max{instance=~\"$host\"}) == ( \n\
        floor( \n\
          avg_over_time( \n\
            ( \n\
              ( \n\
                ( \n\
                  ( \n\
                    ( \n\
                      max(rate(node_disk_reads_completed{instance=~\"$host\"}[$interval])) \n\
                      or \n\
                      max(rate(node_disk_reads_completed_total{instance=~\"$host\"}[$interval])) \n\
                      or \n\
                      max(irate(node_disk_reads_completed{instance=~\"$host\"}[5m])) \n\
                      or \n\
                      max(irate(node_disk_reads_completed_total{instance=~\"$host\"}[5m])) \n\
                    ) \n\
                    or \n\
                    ( \n\
                      max_over_time(rdsosmetrics_diskIO_readIOsPS{instance=~\"$host\"}[$interval]) \n\
                      or \n\
                      max_over_time(rdsosmetrics_diskIO_readIOsPS{instance=~\"$host\"}[5m]) \n\
                    ) \n\
                  ) + ( \n\
                    ( \n\
                      max(rate(node_disk_writes_completed{instance=~\"$host\"}[$interval])) \n\
                      or \n\
                      max(rate(node_disk_writes_completed_total{instance=~\"$host\"}[$interval])) \n\
                      or \n\
                      max(irate(node_disk_writes_completed{instance=~\"$host\"}[5m])) \n\
                      or \n\
                      max(irate(node_disk_writes_completed_total{instance=~\"$host\"}[5m])) \n\
                    ) \n\
                    or \n\
                    ( \n\
                      max_over_time(rdsosmetrics_diskIO_writeIOsPS{instance=~\"$host\"}[$interval]) \n\
                      or \n\
                      max_over_time(rdsosmetrics_diskIO_writeIOsPS{instance=~\"$host\"}[5m]) \n\
                    ) \n\
                  ) \n\
                ) / on() group_left() ( \n\
                  max(rate(node_disk_io_time_ms{instance=~\"$host\"}[$interval]))/1000 \n\
                  or \n\
                  max(rate(node_disk_io_time_ms_total{instance=~\"$host\"}[$interval]))/1000 \n\
                  or \n\
                  max(irate(node_disk_io_time_ms{instance=~\"$host\"}[5m]))/1000 \n\
                  or \n\
                  max(irate(node_disk_io_time_ms_total{instance=~\"$host\"}[5m]))/1000 \n\
                  or \n\
                  max(rate(node_disk_io_time_seconds_total{instance=~\"$host\"}[$interval])) \n\
                  or \n\
                  max(irate(node_disk_io_time_seconds_total{instance=~\"$host\"}[5m])) \n\
                  or \n\
                  sum by (instance) ( \n\
                    max_over_time(rdsosmetrics_diskIO_util{instance=~\"$host\"}[$interval]) \n\
                    or \n\
                    max_over_time(rdsosmetrics_diskIO_util{instance=~\"$host\"}[5m]) \n\
                  ) / 100 \n\
                ) < +Inf \n\
              ) * 0.75 >= 0 \n\
            )[1w:2m] \n\
          ) / 500 \n\
        ) * 500 \n\
      ) \n\
    ) \n\
  ) \n\
  or \n\
  on() ( \n\
    floor( \n\
      avg_over_time( \n\
        ( \n\
          ( \n\
            ( \n\
              ( \n\
                ( \n\
                  max(rate(node_disk_reads_completed{instance=~\"$host\"}[$interval])) \n\
                  or \n\
                  max(rate(node_disk_reads_completed_total{instance=~\"$host\"}[$interval])) \n\
                  or \n\
                  max(irate(node_disk_reads_completed{instance=~\"$host\"}[5m])) \n\
                  or \n\
                  max(irate(node_disk_reads_completed_total{instance=~\"$host\"}[5m])) \n\
                ) \n\
                or \n\
                ( \n\
                  max_over_time(rdsosmetrics_diskIO_readIOsPS{instance=~\"$host\"}[$interval]) \n\
                  or \n\
                  max_over_time(rdsosmetrics_diskIO_readIOsPS{instance=~\"$host\"}[5m]) \n\
                ) \n\
              ) + ( \n\
                ( \n\
                  max(rate(node_disk_writes_completed{instance=~\"$host\"}[$interval])) \n\
                  or \n\
                  max(rate(node_disk_writes_completed_total{instance=~\"$host\"}[$interval])) \n\
                  or \n\
                  max(irate(node_disk_writes_completed{instance=~\"$host\"}[5m])) \n\
                  or \n\
                  max(irate(node_disk_writes_completed_total{instance=~\"$host\"}[5m])) \n\
                ) \n\
                or \n\
                ( \n\
                  max_over_time(rdsosmetrics_diskIO_writeIOsPS{instance=~\"$host\"}[$interval]) \n\
                  or \n\
                  max_over_time(rdsosmetrics_diskIO_writeIOsPS{instance=~\"$host\"}[5m]) \n\
                ) \n\
              ) \n\
            ) / on() group_left() ( \n\
              max(rate(node_disk_io_time_ms{instance=~\"$host\"}[$interval]))/1000 \n\
              or \n\
              max(rate(node_disk_io_time_ms_total{instance=~\"$host\"}[$interval]))/1000 \n\
              or \n\
              max(irate(node_disk_io_time_ms{instance=~\"$host\"}[5m]))/1000 \n\
              or \n\
              max(irate(node_disk_io_time_ms_total{instance=~\"$host\"}[5m]))/1000 \n\
              or \n\
              max(rate(node_disk_io_time_seconds_total{instance=~\"$host\"}[$interval])) \n\
              or \n\
              max(irate(node_disk_io_time_seconds_total{instance=~\"$host\"}[5m])) \n\
              or \n\
              sum by (instance) ( \n\
                max_over_time(rdsosmetrics_diskIO_util{instance=~\"$host\"}[$interval]) \n\
                or \n\
                max_over_time(rdsosmetrics_diskIO_util{instance=~\"$host\"}[5m]) \n\
              ) / 100 \n\
            ) < +Inf \n\
          ) * 0.75 >= 0 \n\
        )[1w:2m] \n\
      ) / 500 \n\
    ) * 500 \n\
  ), \n\
  2000, \n\
  18446744073709551615 \n\
) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "B",
          "step": 300
        }
      ],
      "title": "Current (innodb_io_capacity_max)",
      "type": "ssm-singlestat-panel"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 4,
        "w": 6,
        "x": 18,
        "y": 39
      },
      "hideTimeOverride": false,
      "interval": "$interval",
      "links": [],
      "maxDataPoints": 100,
      "pluginVersion": "9.5.7",
      "queryThresholds": "A",
      "colors": [
        "rgba(237, 129, 40, 0.89)",
        "rgba(36, 112, 33, 0.97)"
      ],
      "valueFontSize": "150%",
      "colorBackground": true,
      "thresholdQuery": "B",
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
clamp( \n\
  ( \n\
    mysql_global_variables_innodb_io_capacity_max{instance=~\"$host\"} \n\
    and \n\
    on() ( \n\
      scalar(mysql_global_variables_innodb_io_capacity_max{instance=~\"$host\"}) == ( \n\
        floor( \n\
          avg_over_time( \n\
            ( \n\
              ( \n\
                ( \n\
                  ( \n\
                    ( \n\
                      max(rate(node_disk_reads_completed{instance=~\"$host\"}[$interval])) \n\
                      or \n\
                      max(rate(node_disk_reads_completed_total{instance=~\"$host\"}[$interval])) \n\
                      or \n\
                      max(irate(node_disk_reads_completed{instance=~\"$host\"}[5m])) \n\
                      or \n\
                      max(irate(node_disk_reads_completed_total{instance=~\"$host\"}[5m])) \n\
                    ) \n\
                    or \n\
                    ( \n\
                      max_over_time(rdsosmetrics_diskIO_readIOsPS{instance=~\"$host\"}[$interval]) \n\
                      or \n\
                      max_over_time(rdsosmetrics_diskIO_readIOsPS{instance=~\"$host\"}[5m]) \n\
                    ) \n\
                  ) + ( \n\
                    ( \n\
                      max(rate(node_disk_writes_completed{instance=~\"$host\"}[$interval])) \n\
                      or \n\
                      max(rate(node_disk_writes_completed_total{instance=~\"$host\"}[$interval])) \n\
                      or \n\
                      max(irate(node_disk_writes_completed{instance=~\"$host\"}[5m])) \n\
                      or \n\
                      max(irate(node_disk_writes_completed_total{instance=~\"$host\"}[5m])) \n\
                    ) \n\
                    or \n\
                    ( \n\
                      max_over_time(rdsosmetrics_diskIO_writeIOsPS{instance=~\"$host\"}[$interval]) \n\
                      or \n\
                      max_over_time(rdsosmetrics_diskIO_writeIOsPS{instance=~\"$host\"}[5m]) \n\
                    ) \n\
                  ) \n\
                ) / on() group_left() ( \n\
                  max(rate(node_disk_io_time_ms{instance=~\"$host\"}[$interval]))/1000 \n\
                  or \n\
                  max(rate(node_disk_io_time_ms_total{instance=~\"$host\"}[$interval]))/1000 \n\
                  or \n\
                  max(irate(node_disk_io_time_ms{instance=~\"$host\"}[5m]))/1000 \n\
                  or \n\
                  max(irate(node_disk_io_time_ms_total{instance=~\"$host\"}[5m]))/1000 \n\
                  or \n\
                  max(rate(node_disk_io_time_seconds_total{instance=~\"$host\"}[$interval])) \n\
                  or \n\
                  max(irate(node_disk_io_time_seconds_total{instance=~\"$host\"}[5m])) \n\
                  or \n\
                  sum by (instance) ( \n\
                    max_over_time(rdsosmetrics_diskIO_util{instance=~\"$host\"}[$interval]) \n\
                    or \n\
                    max_over_time(rdsosmetrics_diskIO_util{instance=~\"$host\"}[5m]) \n\
                  ) / 100 \n\
                ) < +Inf \n\
              ) * 0.75 >= 0 \n\
            )[1w:2m] \n\
          ) / 500 \n\
        ) * 500 \n\
      ) \n\
    ) \n\
  ) \n\
  or \n\
  on() ( \n\
    floor( \n\
      avg_over_time( \n\
        ( \n\
          ( \n\
            ( \n\
              ( \n\
                ( \n\
                  max(rate(node_disk_reads_completed{instance=~\"$host\"}[$interval])) \n\
                  or \n\
                  max(rate(node_disk_reads_completed_total{instance=~\"$host\"}[$interval])) \n\
                  or \n\
                  max(irate(node_disk_reads_completed{instance=~\"$host\"}[5m])) \n\
                  or \n\
                  max(irate(node_disk_reads_completed_total{instance=~\"$host\"}[5m])) \n\
                ) \n\
                or \n\
                ( \n\
                  max_over_time(rdsosmetrics_diskIO_readIOsPS{instance=~\"$host\"}[$interval]) \n\
                  or \n\
                  max_over_time(rdsosmetrics_diskIO_readIOsPS{instance=~\"$host\"}[5m]) \n\
                ) \n\
              ) + ( \n\
                ( \n\
                  max(rate(node_disk_writes_completed{instance=~\"$host\"}[$interval])) \n\
                  or \n\
                  max(rate(node_disk_writes_completed_total{instance=~\"$host\"}[$interval])) \n\
                  or \n\
                  max(irate(node_disk_writes_completed{instance=~\"$host\"}[5m])) \n\
                  or \n\
                  max(irate(node_disk_writes_completed_total{instance=~\"$host\"}[5m])) \n\
                ) \n\
                or \n\
                ( \n\
                  max_over_time(rdsosmetrics_diskIO_writeIOsPS{instance=~\"$host\"}[$interval]) \n\
                  or \n\
                  max_over_time(rdsosmetrics_diskIO_writeIOsPS{instance=~\"$host\"}[5m]) \n\
                ) \n\
              ) \n\
            ) / on() group_left() ( \n\
              max(rate(node_disk_io_time_ms{instance=~\"$host\"}[$interval]))/1000 \n\
              or \n\
              max(rate(node_disk_io_time_ms_total{instance=~\"$host\"}[$interval]))/1000 \n\
              or \n\
              max(irate(node_disk_io_time_ms{instance=~\"$host\"}[5m]))/1000 \n\
              or \n\
              max(irate(node_disk_io_time_ms_total{instance=~\"$host\"}[5m]))/1000 \n\
              or \n\
              max(rate(node_disk_io_time_seconds_total{instance=~\"$host\"}[$interval])) \n\
              or \n\
              max(irate(node_disk_io_time_seconds_total{instance=~\"$host\"}[5m])) \n\
              or \n\
              sum by (instance) ( \n\
                max_over_time(rdsosmetrics_diskIO_util{instance=~\"$host\"}[$interval]) \n\
                or \n\
                max_over_time(rdsosmetrics_diskIO_util{instance=~\"$host\"}[5m]) \n\
              ) / 100 \n\
            ) < +Inf \n\
          ) * 0.75 >= 0 \n\
        )[1w:2m] \n\
      ) / 500 \n\
    ) * 500 \n\
  ), \n\
  2000, \n\
  18446744073709551615 \n\
) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "A",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_innodb_io_capacity_max{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "B",
          "step": 300
        }
      ],
      "title": "Proposed (innodb_io_capacity_max)",
      "type": "ssm-singlestat-panel"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 4,
        "w": 6,
        "x": 12,
        "y": 43
      },
      "hideTimeOverride": false,
      "interval": "$interval",
      "links": [],
      "maxDataPoints": 100,
      "pluginVersion": "9.5.7",
      "queryThresholds": "B",
      "colors": [
        "rgba(237, 129, 40, 0.89)",
        "rgba(36, 112, 33, 0.97)"
      ],
      "valueFontSize": "150%",
      "colorBackground": true,
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_innodb_io_capacity{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "A",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
clamp( \n\
  ( \n\
    mysql_global_variables_innodb_io_capacity{instance=~\"$host\"} \n\
    and \n\
    on() ( \n\
      scalar(mysql_global_variables_innodb_io_capacity{instance=~\"$host\"}) == ( \n\
        floor( \n\
          avg_over_time( \n\
            ( \n\
              ( \n\
                ( \n\
                  ( \n\
                    ( \n\
                      max(rate(node_disk_reads_completed{instance=~\"$host\"}[$interval])) \n\
                      or \n\
                      max(rate(node_disk_reads_completed_total{instance=~\"$host\"}[$interval])) \n\
                      or \n\
                      max(irate(node_disk_reads_completed{instance=~\"$host\"}[5m])) \n\
                      or \n\
                      max(irate(node_disk_reads_completed_total{instance=~\"$host\"}[5m])) \n\
                    ) \n\
                    or \n\
                    ( \n\
                      max_over_time(rdsosmetrics_diskIO_readIOsPS{instance=~\"$host\"}[$interval]) \n\
                      or \n\
                      max_over_time(rdsosmetrics_diskIO_readIOsPS{instance=~\"$host\"}[5m]) \n\
                    ) \n\
                  ) + ( \n\
                    ( \n\
                      max(rate(node_disk_writes_completed{instance=~\"$host\"}[$interval])) \n\
                      or \n\
                      max(rate(node_disk_writes_completed_total{instance=~\"$host\"}[$interval])) \n\
                      or \n\
                      max(irate(node_disk_writes_completed{instance=~\"$host\"}[5m])) \n\
                      or \n\
                      max(irate(node_disk_writes_completed_total{instance=~\"$host\"}[5m])) \n\
                    ) \n\
                    or \n\
                    ( \n\
                      max_over_time(rdsosmetrics_diskIO_writeIOsPS{instance=~\"$host\"}[$interval]) \n\
                      or \n\
                      max_over_time(rdsosmetrics_diskIO_writeIOsPS{instance=~\"$host\"}[5m]) \n\
                    ) \n\
                  ) \n\
                ) / on() group_left() ( \n\
                  max(rate(node_disk_io_time_ms{instance=~\"$host\"}[$interval]))/1000 \n\
                  or \n\
                  max(rate(node_disk_io_time_ms_total{instance=~\"$host\"}[$interval]))/1000 \n\
                  or \n\
                  max(irate(node_disk_io_time_ms{instance=~\"$host\"}[5m]))/1000 \n\
                  or \n\
                  max(irate(node_disk_io_time_ms_total{instance=~\"$host\"}[5m]))/1000 \n\
                  or \n\
                  max(rate(node_disk_io_time_seconds_total{instance=~\"$host\"}[$interval])) \n\
                  or \n\
                  max(irate(node_disk_io_time_seconds_total{instance=~\"$host\"}[5m])) \n\
                  or \n\
                  sum by (instance) ( \n\
                    max_over_time(rdsosmetrics_diskIO_util{instance=~\"$host\"}[$interval]) \n\
                    or \n\
                    max_over_time(rdsosmetrics_diskIO_util{instance=~\"$host\"}[5m]) \n\
                  ) / 100 \n\
                ) < +Inf \n\
              ) * 0.5 >= 0 \n\
            )[1w:2m] \n\
          ) / 500 \n\
        ) * 500 \n\
      ) \n\
    ) \n\
  ) \n\
  or \n\
  on() ( \n\
    floor( \n\
      avg_over_time( \n\
        ( \n\
          ( \n\
            ( \n\
              ( \n\
                ( \n\
                  max(rate(node_disk_reads_completed{instance=~\"$host\"}[$interval])) \n\
                  or \n\
                  max(rate(node_disk_reads_completed_total{instance=~\"$host\"}[$interval])) \n\
                  or \n\
                  max(irate(node_disk_reads_completed{instance=~\"$host\"}[5m])) \n\
                  or \n\
                  max(irate(node_disk_reads_completed_total{instance=~\"$host\"}[5m])) \n\
                ) \n\
                or \n\
                ( \n\
                  max_over_time(rdsosmetrics_diskIO_readIOsPS{instance=~\"$host\"}[$interval]) \n\
                  or \n\
                  max_over_time(rdsosmetrics_diskIO_readIOsPS{instance=~\"$host\"}[5m]) \n\
                ) \n\
              ) + ( \n\
                ( \n\
                  max(rate(node_disk_writes_completed{instance=~\"$host\"}[$interval])) \n\
                  or \n\
                  max(rate(node_disk_writes_completed_total{instance=~\"$host\"}[$interval])) \n\
                  or \n\
                  max(irate(node_disk_writes_completed{instance=~\"$host\"}[5m])) \n\
                  or \n\
                  max(irate(node_disk_writes_completed_total{instance=~\"$host\"}[5m])) \n\
                ) \n\
                or \n\
                ( \n\
                  max_over_time(rdsosmetrics_diskIO_writeIOsPS{instance=~\"$host\"}[$interval]) \n\
                  or \n\
                  max_over_time(rdsosmetrics_diskIO_writeIOsPS{instance=~\"$host\"}[5m]) \n\
                ) \n\
              ) \n\
            ) / on() group_left() ( \n\
              max(rate(node_disk_io_time_ms{instance=~\"$host\"}[$interval]))/1000 \n\
              or \n\
              max(rate(node_disk_io_time_ms_total{instance=~\"$host\"}[$interval]))/1000 \n\
              or \n\
              max(irate(node_disk_io_time_ms{instance=~\"$host\"}[5m]))/1000 \n\
              or \n\
              max(irate(node_disk_io_time_ms_total{instance=~\"$host\"}[5m]))/1000 \n\
              or \n\
              max(rate(node_disk_io_time_seconds_total{instance=~\"$host\"}[$interval])) \n\
              or \n\
              max(irate(node_disk_io_time_seconds_total{instance=~\"$host\"}[5m])) \n\
              or \n\
              sum by (instance) ( \n\
                max_over_time(rdsosmetrics_diskIO_util{instance=~\"$host\"}[$interval]) \n\
                or \n\
                max_over_time(rdsosmetrics_diskIO_util{instance=~\"$host\"}[5m]) \n\
              ) / 100 \n\
            ) < +Inf \n\
          ) * 0.5 >= 0 \n\
        )[1w:2m] \n\
      ) / 500 \n\
    ) * 500 \n\
  ), \n\
  200, \n\
  18446744073709551615 \n\
) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "B",
          "step": 300
        }
      ],
      "title": "Current (innodb_io_capacity)",
      "type": "ssm-singlestat-panel"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 4,
        "w": 6,
        "x": 18,
        "y": 43
      },
      "hideTimeOverride": false,
      "interval": "$interval",
      "links": [],
      "maxDataPoints": 100,
      "pluginVersion": "9.5.7",
      "queryThresholds": "A",
      "colors": [
        "rgba(237, 129, 40, 0.89)",
        "rgba(36, 112, 33, 0.97)"
      ],
      "valueFontSize": "150%",
      "colorBackground": true,
      "thresholdQuery": "B",
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
clamp( \n\
  ( \n\
    mysql_global_variables_innodb_io_capacity{instance=~\"$host\"} \n\
    and \n\
    on() ( \n\
      scalar(mysql_global_variables_innodb_io_capacity{instance=~\"$host\"}) == ( \n\
        floor( \n\
          avg_over_time( \n\
            ( \n\
              ( \n\
                ( \n\
                  ( \n\
                    ( \n\
                      max(rate(node_disk_reads_completed{instance=~\"$host\"}[$interval])) \n\
                      or \n\
                      max(rate(node_disk_reads_completed_total{instance=~\"$host\"}[$interval])) \n\
                      or \n\
                      max(irate(node_disk_reads_completed{instance=~\"$host\"}[5m])) \n\
                      or \n\
                      max(irate(node_disk_reads_completed_total{instance=~\"$host\"}[5m])) \n\
                    ) \n\
                    or \n\
                    ( \n\
                      max_over_time(rdsosmetrics_diskIO_readIOsPS{instance=~\"$host\"}[$interval]) \n\
                      or \n\
                      max_over_time(rdsosmetrics_diskIO_readIOsPS{instance=~\"$host\"}[5m]) \n\
                    ) \n\
                  ) + ( \n\
                    ( \n\
                      max(rate(node_disk_writes_completed{instance=~\"$host\"}[$interval])) \n\
                      or \n\
                      max(rate(node_disk_writes_completed_total{instance=~\"$host\"}[$interval])) \n\
                      or \n\
                      max(irate(node_disk_writes_completed{instance=~\"$host\"}[5m])) \n\
                      or \n\
                      max(irate(node_disk_writes_completed_total{instance=~\"$host\"}[5m])) \n\
                    ) \n\
                    or \n\
                    ( \n\
                      max_over_time(rdsosmetrics_diskIO_writeIOsPS{instance=~\"$host\"}[$interval]) \n\
                      or \n\
                      max_over_time(rdsosmetrics_diskIO_writeIOsPS{instance=~\"$host\"}[5m]) \n\
                    ) \n\
                  ) \n\
                ) / on() group_left() ( \n\
                  max(rate(node_disk_io_time_ms{instance=~\"$host\"}[$interval]))/1000 \n\
                  or \n\
                  max(rate(node_disk_io_time_ms_total{instance=~\"$host\"}[$interval]))/1000 \n\
                  or \n\
                  max(irate(node_disk_io_time_ms{instance=~\"$host\"}[5m]))/1000 \n\
                  or \n\
                  max(irate(node_disk_io_time_ms_total{instance=~\"$host\"}[5m]))/1000 \n\
                  or \n\
                  max(rate(node_disk_io_time_seconds_total{instance=~\"$host\"}[$interval])) \n\
                  or \n\
                  max(irate(node_disk_io_time_seconds_total{instance=~\"$host\"}[5m])) \n\
                  or \n\
                  sum by (instance) ( \n\
                    max_over_time(rdsosmetrics_diskIO_util{instance=~\"$host\"}[$interval]) \n\
                    or \n\
                    max_over_time(rdsosmetrics_diskIO_util{instance=~\"$host\"}[5m]) \n\
                  ) / 100 \n\
                ) < +Inf \n\
              ) * 0.5 >= 0 \n\
            )[1w:2m] \n\
          ) / 500 \n\
        ) * 500 \n\
      ) \n\
    ) \n\
  ) \n\
  or \n\
  on() ( \n\
    floor( \n\
      avg_over_time( \n\
        ( \n\
          ( \n\
            ( \n\
              ( \n\
                ( \n\
                  max(rate(node_disk_reads_completed{instance=~\"$host\"}[$interval])) \n\
                  or \n\
                  max(rate(node_disk_reads_completed_total{instance=~\"$host\"}[$interval])) \n\
                  or \n\
                  max(irate(node_disk_reads_completed{instance=~\"$host\"}[5m])) \n\
                  or \n\
                  max(irate(node_disk_reads_completed_total{instance=~\"$host\"}[5m])) \n\
                ) \n\
                or \n\
                ( \n\
                  max_over_time(rdsosmetrics_diskIO_readIOsPS{instance=~\"$host\"}[$interval]) \n\
                  or \n\
                  max_over_time(rdsosmetrics_diskIO_readIOsPS{instance=~\"$host\"}[5m]) \n\
                ) \n\
              ) + ( \n\
                ( \n\
                  max(rate(node_disk_writes_completed{instance=~\"$host\"}[$interval])) \n\
                  or \n\
                  max(rate(node_disk_writes_completed_total{instance=~\"$host\"}[$interval])) \n\
                  or \n\
                  max(irate(node_disk_writes_completed{instance=~\"$host\"}[5m])) \n\
                  or \n\
                  max(irate(node_disk_writes_completed_total{instance=~\"$host\"}[5m])) \n\
                ) \n\
                or \n\
                ( \n\
                  max_over_time(rdsosmetrics_diskIO_writeIOsPS{instance=~\"$host\"}[$interval]) \n\
                  or \n\
                  max_over_time(rdsosmetrics_diskIO_writeIOsPS{instance=~\"$host\"}[5m]) \n\
                ) \n\
              ) \n\
            ) / on() group_left() ( \n\
              max(rate(node_disk_io_time_ms{instance=~\"$host\"}[$interval]))/1000 \n\
              or \n\
              max(rate(node_disk_io_time_ms_total{instance=~\"$host\"}[$interval]))/1000 \n\
              or \n\
              max(irate(node_disk_io_time_ms{instance=~\"$host\"}[5m]))/1000 \n\
              or \n\
              max(irate(node_disk_io_time_ms_total{instance=~\"$host\"}[5m]))/1000 \n\
              or \n\
              max(rate(node_disk_io_time_seconds_total{instance=~\"$host\"}[$interval])) \n\
              or \n\
              max(irate(node_disk_io_time_seconds_total{instance=~\"$host\"}[5m])) \n\
              or \n\
              sum by (instance) ( \n\
                max_over_time(rdsosmetrics_diskIO_util{instance=~\"$host\"}[$interval]) \n\
                or \n\
                max_over_time(rdsosmetrics_diskIO_util{instance=~\"$host\"}[5m]) \n\
              ) / 100 \n\
            ) < +Inf \n\
          ) * 0.5 >= 0 \n\
        )[1w:2m] \n\
      ) / 500 \n\
    ) * 500 \n\
  ), \n\
  200, \n\
  18446744073709551615 \n\
) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "A",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_innodb_io_capacity{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "B",
          "step": 300
        }
      ],
      "title": "Proposed (innodb_io_capacity)",
      "type": "ssm-singlestat-panel"
    },
    {
      "collapsed": false,
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 47
      },
      "panels": [],
      "targets": [
        {
          "datasource": {
            "type": "prometheus"
          },
          "refId": "A"
        }
      ],
      "title": "innodb_read_io_threads",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 20,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Disk IO Utilization"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "unit",
                "value": "percentunit"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 48
      },
      "links": [],
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "9.5.7",
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "max_over_time(mysql_engine_innodb_pending_reads{instance=~\"$host\"}[$interval]) or max_over_time(mysql_engine_innodb_pending_reads{instance=~\"$host\"}[5m])",
          "format": "time_series",
          "interval": "$interval",
          "intervalFactor": 1,
          "legendFormat": "InnoDB Pending Reads",
          "metric": "",
          "refId": "A",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
max(rate(node_disk_io_time_ms{instance=~\"$host\"}[$interval])) / 1000 \n\
or \n\
max(rate(node_disk_io_time_ms_total{instance=~\"$host\"}[$interval])) / 1000 \n\
or \n\
max(irate(node_disk_io_time_ms{instance=~\"$host\"}[5m])) / 1000 \n\
or \n\
max(irate(node_disk_io_time_ms_total{instance=~\"$host\"}[5m])) / 1000 \n\
or \n\
max(rate(node_disk_io_time_seconds_total{instance=~\"$host\"}[$interval])) \n\
or \n\
max(irate(node_disk_io_time_seconds_total{instance=~\"$host\"}[5m])) \n\
or \n\
sum by (instance) ( \n\
  max_over_time(rdsosmetrics_diskIO_util{instance=~\"$host\"}[$interval]) \n\
  or \n\
  max_over_time(rdsosmetrics_diskIO_util{instance=~\"$host\"}[5m]) \n\
) / 100 \n\
",
          "format": "time_series",
          "interval": "$interval",
          "intervalFactor": 1,
          "legendFormat": "Disk IO Utilization",
          "metric": "",
          "refId": "B",
          "step": 300
        }
      ],
      "title": "InnoDB Pending Reads & Disk IO Utilization",
      "description": "Note: If you do not see 'InnoDB Pending Reads' metric, try setting: ``collect.engine_innodb_status = 1`` in the mysqld_exporter config file.",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 12,
        "y": 48
      },
      "hideTimeOverride": false,
      "interval": "$interval",
      "links": [],
      "maxDataPoints": 100,
      "pluginVersion": "9.5.7",
      "queryThresholds": "B",
      "colors": [
        "rgba(237, 129, 40, 0.89)",
        "rgba(36, 112, 33, 0.97)"
      ],
      "valueFontSize": "150%",
      "colorBackground": true,
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_innodb_read_io_threads{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "A",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
clamp( \n\
  ( \n\
    mysql_global_variables_innodb_read_io_threads{instance=~\"$host\"} \n\
    and \n\
    on() ( \n\
      max_over_time( \n\
        mysql_engine_innodb_pending_reads{instance=~\"$host\"}[1w] \n\
      ) < ( \n\
        mysql_global_variables_innodb_read_io_threads{instance=~\"$host\"} / 2 \n\
      ) \n\
      or \n\
      ( \n\
        max_over_time( \n\
          mysql_engine_innodb_pending_reads{instance=~\"$host\"}[1w] \n\
        ) >= ( \n\
          mysql_global_variables_innodb_read_io_threads{instance=~\"$host\"} / 2 \n\
        ) \n\
        and \n\
        ( \n\
          max(rate(node_disk_io_time_ms{instance=~\"$host\"}[$interval])) / 1000 \n\
          or \n\
          max(rate(node_disk_io_time_ms_total{instance=~\"$host\"}[$interval])) / 1000 \n\
          or \n\
          max(irate(node_disk_io_time_ms{instance=~\"$host\"}[5m])) / 1000 \n\
          or \n\
          max(irate(node_disk_io_time_ms_total{instance=~\"$host\"}[5m])) / 1000 \n\
          or \n\
          max(rate(node_disk_io_time_seconds_total{instance=~\"$host\"}[$interval])) \n\
          or \n\
          max(irate(node_disk_io_time_seconds_total{instance=~\"$host\"}[5m])) \n\
          or \n\
          sum by (instance) ( \n\
            max_over_time(rdsosmetrics_diskIO_util{instance=~\"$host\"}[$interval]) \n\
            or \n\
            max_over_time(rdsosmetrics_diskIO_util{instance=~\"$host\"}[5m]) \n\
          ) / 100 \n\
        ) < 0.75 \n\
      ) \n\
    ) \n\
  ) \n\
  or \n\
  on() ( \n\
    mysql_global_variables_innodb_read_io_threads{instance=~\"$host\"} \n\
    and \n\
    on() ( \n\
      max_over_time( \n\
        mysql_global_variables_innodb_read_io_threads{instance=~\"$host\"}[1w] \n\
      ) != min_over_time( \n\
        mysql_global_variables_innodb_read_io_threads{instance=~\"$host\"}[1w] \n\
      ) \n\
    ) \n\
  ) \n\
  or \n\
  on() ( \n\
    2^( \n\
      floor( \n\
        log2(mysql_global_variables_innodb_read_io_threads{instance=~\"$host\"}) \n\
      )+1 \n\
    ) \n\
  ), \n\
  1, \n\
  scalar( \n\
    ( \n\
      count( \n\
        (node_cpu{instance=~\"$host\",mode=~\"user\"} or node_cpu_seconds_total{instance=~\"$host\",mode=~\"user\"}) \n\
      ) \n\
      or \n\
      ( \n\
        1 - absent( \n\
          (node_cpu{instance=~\"$host\",mode=~\"user\"} or node_cpu_seconds_total{instance=~\"$host\",mode=~\"user\"}) \n\
        ) \n\
      ) \n\
      or \n\
      sum(rdsosmetrics_General_numVCPUs{instance=~\"$host\"}) \n\
      or \n\
      count(hrProcessorLoad{instance=~\"$host\"}) \n\
    ) \n\
    or \n\
    vector(32) \n\
  ) \n\
) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "B",
          "step": 300
        }
      ],
      "title": "Current",
      "description": "\
Note: If it's not working properly, make sure you have set: ``collect.engine_innodb_status = 1`` in the mysqld_exporter config file.\n\
\n\
This tuning takes 1 week of observation, if you have changed the value, please wait at least 1 week to check the new propose value.\
",
      "type": "ssm-singlestat-panel"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 18,
        "y": 48
      },
      "hideTimeOverride": false,
      "interval": "$interval",
      "links": [],
      "maxDataPoints": 100,
      "pluginVersion": "9.5.7",
      "queryThresholds": "A",
      "colors": [
        "rgba(237, 129, 40, 0.89)",
        "rgba(36, 112, 33, 0.97)"
      ],
      "valueFontSize": "150%",
      "colorBackground": true,
      "thresholdQuery": "B",
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
clamp( \n\
  ( \n\
    mysql_global_variables_innodb_read_io_threads{instance=~\"$host\"} \n\
    and \n\
    on() ( \n\
      max_over_time( \n\
        mysql_engine_innodb_pending_reads{instance=~\"$host\"}[1w] \n\
      ) < ( \n\
        mysql_global_variables_innodb_read_io_threads{instance=~\"$host\"} / 2 \n\
      ) \n\
      or \n\
      ( \n\
        max_over_time( \n\
          mysql_engine_innodb_pending_reads{instance=~\"$host\"}[1w] \n\
        ) >= ( \n\
          mysql_global_variables_innodb_read_io_threads{instance=~\"$host\"} / 2 \n\
        ) \n\
        and \n\
        ( \n\
          max(rate(node_disk_io_time_ms{instance=~\"$host\"}[$interval])) / 1000 \n\
          or \n\
          max(rate(node_disk_io_time_ms_total{instance=~\"$host\"}[$interval])) / 1000 \n\
          or \n\
          max(irate(node_disk_io_time_ms{instance=~\"$host\"}[5m])) / 1000 \n\
          or \n\
          max(irate(node_disk_io_time_ms_total{instance=~\"$host\"}[5m])) / 1000 \n\
          or \n\
          max(rate(node_disk_io_time_seconds_total{instance=~\"$host\"}[$interval])) \n\
          or \n\
          max(irate(node_disk_io_time_seconds_total{instance=~\"$host\"}[5m])) \n\
          or \n\
          sum by (instance) ( \n\
            max_over_time(rdsosmetrics_diskIO_util{instance=~\"$host\"}[$interval]) \n\
            or \n\
            max_over_time(rdsosmetrics_diskIO_util{instance=~\"$host\"}[5m]) \n\
          ) / 100 \n\
        ) < 0.75 \n\
      ) \n\
    ) \n\
  ) \n\
  or \n\
  on() ( \n\
    mysql_global_variables_innodb_read_io_threads{instance=~\"$host\"} \n\
    and \n\
    on() ( \n\
      max_over_time( \n\
        mysql_global_variables_innodb_read_io_threads{instance=~\"$host\"}[1w] \n\
      ) != min_over_time( \n\
        mysql_global_variables_innodb_read_io_threads{instance=~\"$host\"}[1w] \n\
      ) \n\
    ) \n\
  ) \n\
  or \n\
  on() ( \n\
    2^( \n\
      floor( \n\
        log2(mysql_global_variables_innodb_read_io_threads{instance=~\"$host\"}) \n\
      )+1 \n\
    ) \n\
  ), \n\
  1, \n\
  scalar( \n\
    ( \n\
      count( \n\
        (node_cpu{instance=~\"$host\",mode=~\"user\"} or node_cpu_seconds_total{instance=~\"$host\",mode=~\"user\"}) \n\
      ) \n\
      or \n\
      ( \n\
        1 - absent( \n\
          (node_cpu{instance=~\"$host\",mode=~\"user\"} or node_cpu_seconds_total{instance=~\"$host\",mode=~\"user\"}) \n\
        ) \n\
      ) \n\
      or \n\
      sum(rdsosmetrics_General_numVCPUs{instance=~\"$host\"}) \n\
      or \n\
      count(hrProcessorLoad{instance=~\"$host\"}) \n\
    ) \n\
    or \n\
    vector(32) \n\
  ) \n\
) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "A",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_innodb_read_io_threads{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "B",
          "step": 300
        }
      ],
      "title": "Proposed",
      "description": "\
Note: If it's not working properly, make sure you have set: ``collect.engine_innodb_status = 1`` in the mysqld_exporter config file.\n\
\n\
This tuning takes 1 week of observation, if you have changed the value, please wait at least 1 week to check the new propose value.\
",
      "type": "ssm-singlestat-panel"
    },
    {
      "collapsed": false,
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 56
      },
      "panels": [],
      "targets": [
        {
          "datasource": {
            "type": "prometheus"
          },
          "refId": "A"
        }
      ],
      "title": "innodb_write_io_threads",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 20,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Disk IO Utilization"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "unit",
                "value": "percentunit"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 57
      },
      "links": [],
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "9.5.7",
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "max_over_time(mysql_engine_innodb_pending_writes{instance=~\"$host\"}[$interval]) or max_over_time(mysql_engine_innodb_pending_writes{instance=~\"$host\"}[5m])",
          "format": "time_series",
          "interval": "$interval",
          "intervalFactor": 1,
          "legendFormat": "InnoDB Pending Writes",
          "metric": "",
          "refId": "A",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
max(rate(node_disk_io_time_ms{instance=~\"$host\"}[$interval]))/1000 \n\
or \n\
max(rate(node_disk_io_time_ms_total{instance=~\"$host\"}[$interval]))/1000 \n\
or \n\
max(irate(node_disk_io_time_ms{instance=~\"$host\"}[5m]))/1000 \n\
or \n\
max(irate(node_disk_io_time_ms_total{instance=~\"$host\"}[5m]))/1000 \n\
or \n\
max(rate(node_disk_io_time_seconds_total{instance=~\"$host\"}[$interval])) \n\
or \n\
max(irate(node_disk_io_time_seconds_total{instance=~\"$host\"}[5m])) \n\
or \n\
sum by (instance) ( \n\
  max_over_time(rdsosmetrics_diskIO_util{instance=~\"$host\"}[$interval]) \n\
  or \n\
  max_over_time(rdsosmetrics_diskIO_util{instance=~\"$host\"}[5m]) \n\
)/100 \n\
",
          "format": "time_series",
          "interval": "$interval",
          "intervalFactor": 1,
          "legendFormat": "Disk IO Utilization",
          "metric": "",
          "refId": "B",
          "step": 300
        }
      ],
      "title": "InnoDB Pending Writes & Disk IO Utilization",
      "description": "Note: If you do not see 'InnoDB Pending Writes' metric, try setting: ``collect.engine_innodb_status = 1`` in the mysqld_exporter config file.",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 12,
        "y": 57
      },
      "hideTimeOverride": false,
      "interval": "$interval",
      "links": [],
      "maxDataPoints": 100,
      "pluginVersion": "9.5.7",
      "queryThresholds": "B",
      "colors": [
        "rgba(237, 129, 40, 0.89)",
        "rgba(36, 112, 33, 0.97)"
      ],
      "valueFontSize": "150%",
      "colorBackground": true,
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_innodb_write_io_threads{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "A",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
clamp( \n\
  ( \n\
    mysql_global_variables_innodb_write_io_threads{instance=~\"$host\"} \n\
    and \n\
    on() ( \n\
      max_over_time( \n\
        mysql_engine_innodb_pending_writes{instance=~\"$host\"}[1w] \n\
      ) < ( \n\
        mysql_global_variables_innodb_write_io_threads{instance=~\"$host\"} / 2 \n\
      ) \n\
      or \n\
      ( \n\
        max_over_time( \n\
          mysql_engine_innodb_pending_writes{instance=~\"$host\"}[1w] \n\
        ) >= ( \n\
          mysql_global_variables_innodb_write_io_threads{instance=~\"$host\"} / 2 \n\
        ) \n\
        and \n\
        ( \n\
          max(rate(node_disk_io_time_ms{instance=~\"$host\"}[$interval])) / 1000 \n\
          or \n\
          max(rate(node_disk_io_time_ms_total{instance=~\"$host\"}[$interval])) / 1000 \n\
          or \n\
          max(irate(node_disk_io_time_ms{instance=~\"$host\"}[5m])) / 1000 \n\
          or \n\
          max(irate(node_disk_io_time_ms_total{instance=~\"$host\"}[5m])) / 1000 \n\
          or \n\
          max(rate(node_disk_io_time_seconds_total{instance=~\"$host\"}[$interval])) \n\
          or \n\
          max(irate(node_disk_io_time_seconds_total{instance=~\"$host\"}[5m])) \n\
          or \n\
          sum by (instance) ( \n\
            max_over_time(rdsosmetrics_diskIO_util{instance=~\"$host\"}[$interval]) \n\
            or \n\
            max_over_time(rdsosmetrics_diskIO_util{instance=~\"$host\"}[5m]) \n\
          ) / 100 \n\
        ) < 0.75 \n\
      ) \n\
    ) \n\
  ) \n\
  or \n\
  on() ( \n\
    mysql_global_variables_innodb_write_io_threads{instance=~\"$host\"} \n\
    and \n\
    on() ( \n\
      max_over_time( \n\
        mysql_global_variables_innodb_write_io_threads{instance=~\"$host\"}[1w] \n\
      ) != min_over_time( \n\
        mysql_global_variables_innodb_write_io_threads{instance=~\"$host\"}[1w] \n\
      ) \n\
    ) \n\
  ) \n\
  or \n\
  on() ( \n\
    2^( \n\
      floor( \n\
        log2(mysql_global_variables_innodb_write_io_threads{instance=~\"$host\"}) \n\
      )+1 \n\
    ) \n\
  ), \n\
  1, \n\
  scalar( \n\
    ( \n\
      count( \n\
        (node_cpu{instance=~\"$host\",mode=~\"user\"} or node_cpu_seconds_total{instance=~\"$host\",mode=~\"user\"}) \n\
      ) \n\
      or \n\
      ( \n\
        1 - absent( \n\
          (node_cpu{instance=~\"$host\",mode=~\"user\"} or node_cpu_seconds_total{instance=~\"$host\",mode=~\"user\"}) \n\
        ) \n\
      ) \n\
      or \n\
      sum(rdsosmetrics_General_numVCPUs{instance=~\"$host\"}) \n\
      or \n\
      count(hrProcessorLoad{instance=~\"$host\"}) \n\
    ) \n\
    or \n\
    vector(32) \n\
  ) \n\
) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "B",
          "step": 300
        }
      ],
      "title": "Current",
      "description": "\
Note: If it's not working properly, make sure you have set: ``collect.engine_innodb_status = 1`` in the mysqld_exporter config file.\n\
\n\
This tuning takes 1 week of observation, if you have changed the value, please wait at least 1 week to check the new propose value.\
",
      "type": "ssm-singlestat-panel"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 18,
        "y": 57
      },
      "hideTimeOverride": false,
      "interval": "$interval",
      "links": [],
      "maxDataPoints": 100,
      "pluginVersion": "9.5.7",
      "queryThresholds": "A",
      "colors": [
        "rgba(237, 129, 40, 0.89)",
        "rgba(36, 112, 33, 0.97)"
      ],
      "valueFontSize": "150%",
      "colorBackground": true,
      "thresholdQuery": "B",
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
clamp( \n\
  ( \n\
    mysql_global_variables_innodb_write_io_threads{instance=~\"$host\"} \n\
    and \n\
    on() ( \n\
      max_over_time( \n\
        mysql_engine_innodb_pending_writes{instance=~\"$host\"}[1w] \n\
      ) < ( \n\
        mysql_global_variables_innodb_write_io_threads{instance=~\"$host\"} / 2 \n\
      ) \n\
      or \n\
      ( \n\
        max_over_time( \n\
          mysql_engine_innodb_pending_writes{instance=~\"$host\"}[1w] \n\
        ) >= ( \n\
          mysql_global_variables_innodb_write_io_threads{instance=~\"$host\"} / 2 \n\
        ) \n\
        and \n\
        ( \n\
          max(rate(node_disk_io_time_ms{instance=~\"$host\"}[$interval])) / 1000 \n\
          or \n\
          max(rate(node_disk_io_time_ms_total{instance=~\"$host\"}[$interval])) / 1000 \n\
          or \n\
          max(irate(node_disk_io_time_ms{instance=~\"$host\"}[5m])) / 1000 \n\
          or \n\
          max(irate(node_disk_io_time_ms_total{instance=~\"$host\"}[5m])) / 1000 \n\
          or \n\
          max(rate(node_disk_io_time_seconds_total{instance=~\"$host\"}[$interval])) \n\
          or \n\
          max(irate(node_disk_io_time_seconds_total{instance=~\"$host\"}[5m])) \n\
          or \n\
          sum by (instance) ( \n\
            max_over_time(rdsosmetrics_diskIO_util{instance=~\"$host\"}[$interval]) \n\
            or \n\
            max_over_time(rdsosmetrics_diskIO_util{instance=~\"$host\"}[5m]) \n\
          ) / 100 \n\
        ) < 0.75 \n\
      ) \n\
    ) \n\
  ) \n\
  or \n\
  on() ( \n\
    mysql_global_variables_innodb_write_io_threads{instance=~\"$host\"} \n\
    and \n\
    on() ( \n\
      max_over_time( \n\
        mysql_global_variables_innodb_write_io_threads{instance=~\"$host\"}[1w] \n\
      ) != min_over_time( \n\
        mysql_global_variables_innodb_write_io_threads{instance=~\"$host\"}[1w] \n\
      ) \n\
    ) \n\
  ) \n\
  or \n\
  on() ( \n\
    2^( \n\
      floor( \n\
        log2(mysql_global_variables_innodb_write_io_threads{instance=~\"$host\"}) \n\
      )+1 \n\
    ) \n\
  ), \n\
  1, \n\
  scalar( \n\
    ( \n\
      count( \n\
        (node_cpu{instance=~\"$host\",mode=~\"user\"} or node_cpu_seconds_total{instance=~\"$host\",mode=~\"user\"}) \n\
      ) \n\
      or \n\
      ( \n\
        1 - absent( \n\
          (node_cpu{instance=~\"$host\",mode=~\"user\"} or node_cpu_seconds_total{instance=~\"$host\",mode=~\"user\"}) \n\
        ) \n\
      ) \n\
      or \n\
      sum(rdsosmetrics_General_numVCPUs{instance=~\"$host\"}) \n\
      or \n\
      count(hrProcessorLoad{instance=~\"$host\"}) \n\
    ) \n\
    or \n\
    vector(32) \n\
  ) \n\
) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "A",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_innodb_write_io_threads{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "B",
          "step": 300
        }
      ],
      "title": "Proposed",
      "description": "\
Note: If it's not working properly, make sure you have set: ``collect.engine_innodb_status = 1`` in the mysqld_exporter config file.\n\
\n\
This tuning takes 1 week of observation, if you have changed the value, please wait at least 1 week to check the new propose value.\
",
      "type": "ssm-singlestat-panel"
    },
    {
      "collapsed": false,
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 65
      },
      "panels": [],
      "targets": [
        {
          "datasource": {
            "type": "prometheus"
          },
          "refId": "A"
        }
      ],
      "title": "innodb_buffer_pool_size",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 20,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "min": 0,
          "unit": "decbytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 66
      },
      "links": [],
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "9.5.7",
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
sum( \n\
  mysql_info_schema_table_size{instance=~\"$host\", component=\"index_length\"} \n\
  and on (instance, schema, table) \n\
  mysql_info_schema_table_version{instance=~\"$host\", engine=\"InnoDB\"} \n\
) \n\
or \n\
vector(0) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "intervalFactor": 1,
          "legendFormat": "Index Size",
          "metric": "",
          "refId": "A",
          "step": 300
        }
      ],
      "title": "InnoDB Table Index Size",
      "description": "Note: If you do not see any metric, try setting: ``collect.info_schema.tables = 1`` in the mysqld_exporter config file.",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 12,
        "y": 66
      },
      "hideTimeOverride": false,
      "interval": "$interval",
      "links": [],
      "maxDataPoints": 100,
      "pluginVersion": "9.5.7",
      "queryThresholds": "B,C",
      "exactThreshold": true,
      "colors": [
        "rgba(237, 129, 40, 0.89)",
        "rgba(36, 112, 33, 0.97)",
        "rgba(161, 18, 18, 0.9)"
      ],
      "valueFontSize": "150%",
      "colorBackground": true,
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_innodb_buffer_pool_size{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "A",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
clamp( \n\
  ( \n\
    ( \n\
      ceil( \n\
        2^( \n\
          ceil( \n\
            log2( \n\
              mysql_global_variables_innodb_buffer_pool_size{instance=~\"$host\"} \n\
            ) \n\
          ) - 1 \n\
        ) / scalar( \n\
          ( \n\
            mysql_global_variables_innodb_buffer_pool_chunk_size{instance=~\"$host\"} \n\
            * \n\
            mysql_global_variables_innodb_buffer_pool_instances{instance=~\"$host\"} \n\
          ) \n\
          or \n\
          mysql_global_variables_innodb_buffer_pool_chunk_size{instance=~\"$host\"} \n\
        ) \n\
      ) * scalar( \n\
        ( \n\
          mysql_global_variables_innodb_buffer_pool_chunk_size{instance=~\"$host\"} \n\
          * \n\
          mysql_global_variables_innodb_buffer_pool_instances{instance=~\"$host\"} \n\
        ) \n\
        or \n\
        mysql_global_variables_innodb_buffer_pool_chunk_size{instance=~\"$host\"} \n\
      ) \n\
    ) and on() ( \n\
      sum( \n\
        mysql_info_schema_table_size{instance=~\"$host\", component=\"index_length\"} \n\
        and on (instance, schema, table) \n\
        mysql_info_schema_table_version{instance=~\"$host\", engine=\"InnoDB\"} \n\
      ) < scalar( \n\
        mysql_global_variables_innodb_buffer_pool_size{instance=~\"$host\"} * 0.4 \n\
      ) \n\
    ) \n\
  ) \n\
  or on() ( \n\
    ( \n\
      ( \n\
        ceil( \n\
          2^( \n\
            floor( \n\
              log2( \n\
                mysql_global_variables_innodb_buffer_pool_size{instance=~\"$host\"} \n\
              ) \n\
            ) + 1 \n\
          ) / scalar( \n\
            ( \n\
              mysql_global_variables_innodb_buffer_pool_chunk_size{instance=~\"$host\"} \n\
              * \n\
              mysql_global_variables_innodb_buffer_pool_instances{instance=~\"$host\"} \n\
            ) \n\
            or \n\
            mysql_global_variables_innodb_buffer_pool_chunk_size{instance=~\"$host\"} \n\
          ) \n\
        ) * scalar( \n\
          ( \n\
            mysql_global_variables_innodb_buffer_pool_chunk_size{instance=~\"$host\"} \n\
            * \n\
            mysql_global_variables_innodb_buffer_pool_instances{instance=~\"$host\"} \n\
          ) \n\
          or \n\
          mysql_global_variables_innodb_buffer_pool_chunk_size{instance=~\"$host\"} \n\
        ) \n\
      ) and on() ( \n\
        sum( \n\
          mysql_info_schema_table_size{instance=~\"$host\", component=\"index_length\"} \n\
          and on (instance, schema, table) \n\
          mysql_info_schema_table_version{instance=~\"$host\", engine=\"InnoDB\"} \n\
        ) > scalar( \n\
          mysql_global_variables_innodb_buffer_pool_size{instance=~\"$host\"} * 0.9 \n\
        ) \n\
      ) \n\
    ) or on() ( \n\
      mysql_global_variables_innodb_buffer_pool_size{instance=~\"$host\"} \n\
    ) \n\
  ), \n\
  134217728, \n\
  scalar( \n\
    clamp_min( \n\
      floor( \n\
        ( \n\
          node_memory_MemTotal{instance=\"$host\"} \n\
          or \n\
          node_memory_MemTotal_bytes{instance=\"$host\"} \n\
        ) * 0.75 / scalar( \n\
          ( \n\
            mysql_global_variables_innodb_buffer_pool_chunk_size{instance=~\"$host\"} \n\
            * \n\
            mysql_global_variables_innodb_buffer_pool_instances{instance=~\"$host\"} \n\
          ) \n\
          or \n\
          mysql_global_variables_innodb_buffer_pool_chunk_size{instance=~\"$host\"} \n\
        ) \n\
      ), \n\
      1 \n\
    ) * scalar( \n\
      ( \n\
        mysql_global_variables_innodb_buffer_pool_chunk_size{instance=~\"$host\"} \n\
        * \n\
        mysql_global_variables_innodb_buffer_pool_instances{instance=~\"$host\"} \n\
      ) \n\
      or \n\
      mysql_global_variables_innodb_buffer_pool_chunk_size{instance=~\"$host\"} \n\
    ) \n\
  ) \n\
) \n\
or \n\
( \n\
  ( \n\
    mysql_global_variables_innodb_buffer_pool_chunk_size{instance=~\"$host\"} \n\
    * \n\
    mysql_global_variables_innodb_buffer_pool_instances{instance=~\"$host\"} \n\
  ) \n\
  or \n\
  mysql_global_variables_innodb_buffer_pool_chunk_size{instance=~\"$host\"} \n\
) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "B",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
clamp_min( \n\
  floor( \n\
    ( \n\
      node_memory_MemTotal{instance=\"$host\"} \n\
      or \n\
      node_memory_MemTotal_bytes{instance=\"$host\"} \n\
    ) * 0.75 / scalar( \n\
      mysql_global_variables_innodb_buffer_pool_chunk_size{instance=~\"$host\"} * mysql_global_variables_innodb_buffer_pool_instances{instance=~\"$host\"} \n\
    ) \n\
  ), \n\
  1 \n\
) * scalar( \n\
  mysql_global_variables_innodb_buffer_pool_chunk_size{instance=~\"$host\"} * mysql_global_variables_innodb_buffer_pool_instances{instance=~\"$host\"} \n\
) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "C",
          "step": 300
        }
      ],
      "title": "Current",
      "description": "Note: If it's not working properly, make sure you have set: ``collect.global_variables = 1`` and ``collect.info_schema.tables = 1`` in the mysqld_exporter config file.",
      "type": "ssm-singlestat-panel",
      "format": "bytes"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 18,
        "y": 66
      },
      "hideTimeOverride": false,
      "interval": "$interval",
      "links": [],
      "maxDataPoints": 100,
      "pluginVersion": "9.5.7",
      "queryThresholds": "A,C",
      "exactThreshold": true,
      "colors": [
        "rgba(237, 129, 40, 0.89)",
        "rgba(36, 112, 33, 0.97)",
        "rgba(161, 18, 18, 0.9)"
      ],
      "valueFontSize": "150%",
      "colorBackground": true,
      "thresholdQuery": "B",
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
clamp( \n\
  ( \n\
    ( \n\
      ceil( \n\
        2^( \n\
          ceil( \n\
            log2( \n\
              mysql_global_variables_innodb_buffer_pool_size{instance=~\"$host\"} \n\
            ) \n\
          ) - 1 \n\
        ) / scalar( \n\
          ( \n\
            mysql_global_variables_innodb_buffer_pool_chunk_size{instance=~\"$host\"} \n\
            * \n\
            mysql_global_variables_innodb_buffer_pool_instances{instance=~\"$host\"} \n\
          ) \n\
          or \n\
          mysql_global_variables_innodb_buffer_pool_chunk_size{instance=~\"$host\"} \n\
        ) \n\
      ) * scalar( \n\
        ( \n\
          mysql_global_variables_innodb_buffer_pool_chunk_size{instance=~\"$host\"} \n\
          * \n\
          mysql_global_variables_innodb_buffer_pool_instances{instance=~\"$host\"} \n\
        ) \n\
        or \n\
        mysql_global_variables_innodb_buffer_pool_chunk_size{instance=~\"$host\"} \n\
      ) \n\
    ) and on() ( \n\
      sum( \n\
        mysql_info_schema_table_size{instance=~\"$host\", component=\"index_length\"} \n\
        and on (instance, schema, table) \n\
        mysql_info_schema_table_version{instance=~\"$host\", engine=\"InnoDB\"} \n\
      ) < scalar( \n\
        mysql_global_variables_innodb_buffer_pool_size{instance=~\"$host\"} * 0.4 \n\
      ) \n\
    ) \n\
  ) \n\
  or on() ( \n\
    ( \n\
      ( \n\
        ceil( \n\
          2^( \n\
            floor( \n\
              log2( \n\
                mysql_global_variables_innodb_buffer_pool_size{instance=~\"$host\"} \n\
              ) \n\
            ) + 1 \n\
          ) / scalar( \n\
            ( \n\
              mysql_global_variables_innodb_buffer_pool_chunk_size{instance=~\"$host\"} \n\
              * \n\
              mysql_global_variables_innodb_buffer_pool_instances{instance=~\"$host\"} \n\
            ) \n\
            or \n\
            mysql_global_variables_innodb_buffer_pool_chunk_size{instance=~\"$host\"} \n\
          ) \n\
        ) * scalar( \n\
          ( \n\
            mysql_global_variables_innodb_buffer_pool_chunk_size{instance=~\"$host\"} \n\
            * \n\
            mysql_global_variables_innodb_buffer_pool_instances{instance=~\"$host\"} \n\
          ) \n\
          or \n\
          mysql_global_variables_innodb_buffer_pool_chunk_size{instance=~\"$host\"} \n\
        ) \n\
      ) and on() ( \n\
        sum( \n\
          mysql_info_schema_table_size{instance=~\"$host\", component=\"index_length\"} \n\
          and on (instance, schema, table) \n\
          mysql_info_schema_table_version{instance=~\"$host\", engine=\"InnoDB\"} \n\
        ) > scalar( \n\
          mysql_global_variables_innodb_buffer_pool_size{instance=~\"$host\"} * 0.9 \n\
        ) \n\
      ) \n\
    ) or on() ( \n\
      mysql_global_variables_innodb_buffer_pool_size{instance=~\"$host\"} \n\
    ) \n\
  ), \n\
  134217728, \n\
  scalar( \n\
    clamp_min( \n\
      floor( \n\
        ( \n\
          node_memory_MemTotal{instance=\"$host\"} \n\
          or \n\
          node_memory_MemTotal_bytes{instance=\"$host\"} \n\
        ) * 0.75 / scalar( \n\
          ( \n\
            mysql_global_variables_innodb_buffer_pool_chunk_size{instance=~\"$host\"} \n\
            * \n\
            mysql_global_variables_innodb_buffer_pool_instances{instance=~\"$host\"} \n\
          ) \n\
          or \n\
          mysql_global_variables_innodb_buffer_pool_chunk_size{instance=~\"$host\"} \n\
        ) \n\
      ), \n\
      1 \n\
    ) * scalar( \n\
      ( \n\
        mysql_global_variables_innodb_buffer_pool_chunk_size{instance=~\"$host\"} \n\
        * \n\
        mysql_global_variables_innodb_buffer_pool_instances{instance=~\"$host\"} \n\
      ) \n\
      or \n\
      mysql_global_variables_innodb_buffer_pool_chunk_size{instance=~\"$host\"} \n\
    ) \n\
  ) \n\
) \n\
or \n\
( \n\
  ( \n\
    mysql_global_variables_innodb_buffer_pool_chunk_size{instance=~\"$host\"} \n\
    * \n\
    mysql_global_variables_innodb_buffer_pool_instances{instance=~\"$host\"} \n\
  ) \n\
  or \n\
  mysql_global_variables_innodb_buffer_pool_chunk_size{instance=~\"$host\"} \n\
) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "A",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_innodb_buffer_pool_size{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "B",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
clamp_min( \n\
  floor( \n\
    ( \n\
      node_memory_MemTotal{instance=\"$host\"} \n\
      or \n\
      node_memory_MemTotal_bytes{instance=\"$host\"} \n\
    ) * 0.75 / scalar( \n\
      mysql_global_variables_innodb_buffer_pool_chunk_size{instance=~\"$host\"} * mysql_global_variables_innodb_buffer_pool_instances{instance=~\"$host\"} \n\
    ) \n\
  ), \n\
  1 \n\
) * scalar( \n\
  mysql_global_variables_innodb_buffer_pool_chunk_size{instance=~\"$host\"} * mysql_global_variables_innodb_buffer_pool_instances{instance=~\"$host\"} \n\
) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "C",
          "step": 300
        }
      ],
      "title": "Proposed",
      "description": "Note: If it's not working properly, make sure you have set: ``collect.global_variables = 1`` and ``collect.info_schema.tables = 1`` in the mysqld_exporter config file.",
      "type": "ssm-singlestat-panel",
      "format": "bytes"
    },
    {
      "collapsed": false,
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 74
      },
      "panels": [],
      "targets": [
        {
          "datasource": {
            "type": "prometheus"
          },
          "refId": "A"
        }
      ],
      "title": "key_buffer_size",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 20,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "min": 0,
          "unit": "decbytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 75
      },
      "links": [],
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "9.5.7",
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
sum( \n\
  mysql_info_schema_table_size{instance=~\"$host\", component=\"index_length\"} \n\
  and on (instance, schema, table) \n\
  mysql_info_schema_table_version{instance=~\"$host\", engine=\"MyISAM\"} \n\
) \n\
or \n\
vector(0) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "intervalFactor": 1,
          "legendFormat": "Index Size",
          "metric": "",
          "refId": "A",
          "step": 300
        }
      ],
      "title": "MyISAM Table Index Size",
      "description": "Note: If you do not see any metric, try setting: ``collect.info_schema.tables = 1`` in the mysqld_exporter config file.",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 12,
        "y": 75
      },
      "hideTimeOverride": false,
      "interval": "$interval",
      "links": [],
      "maxDataPoints": 100,
      "pluginVersion": "9.5.7",
      "queryThresholds": "B,C",
      "exactThreshold": true,
      "colors": [
        "rgba(237, 129, 40, 0.89)",
        "rgba(36, 112, 33, 0.97)",
        "rgba(161, 18, 18, 0.9)"
      ],
      "valueFontSize": "150%",
      "colorBackground": true,
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_key_buffer_size{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "A",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
clamp( \n\
  ( \n\
    mysql_global_variables_key_buffer_size{instance=~\"$host\"} \n\
    and on() ( \n\
      ( \n\
        ceil( \n\
          sum( \n\
            mysql_info_schema_table_size{instance=~\"$host\", component=\"index_length\"} \n\
            and on (instance, schema, table) \n\
            mysql_info_schema_table_version{instance=~\"$host\", engine=\"MyISAM\"} \n\
          ) / ( 1024 * 1024 ) \n\
        ) * ( 1024 * 1024 ) \n\
      ) == mysql_global_variables_key_buffer_size{instance=~\"$host\"} \n\
    ) \n\
  ) \n\
  or on() ( \n\
    ( \n\
      ceil( \n\
        sum( \n\
          mysql_info_schema_table_size{instance=~\"$host\", component=\"index_length\"} \n\
          and on (instance, schema, table) \n\
          mysql_info_schema_table_version{instance=~\"$host\", engine=\"MyISAM\"} \n\
        ) / ( 1024 * 1024 ) \n\
      ) * ( 1024 * 1024 ) \n\
    ) \n\
    or \n\
    vector(1024 * 1024) \n\
  ), \n\
  1024 * 1024, \n\
  scalar( \n\
    floor( \n\
      ( \n\
        ( \n\
          node_memory_MemTotal{instance=\"$host\"} \n\
          or \n\
          node_memory_MemTotal_bytes{instance=\"$host\"} \n\
        ) * 0.75 \n\
      ) / ( 1024 * 1024 ) \n\
    ) * ( 1024 * 1024 ) \n\
  ) \n\
) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "B",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
floor( \n\
  ( \n\
    ( \n\
      node_memory_MemTotal{instance=\"$host\"} \n\
      or \n\
      node_memory_MemTotal_bytes{instance=\"$host\"} \n\
    ) * 0.75 \n\
  ) / ( 1024 * 1024 ) \n\
) * ( 1024 * 1024 ) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "C",
          "step": 300
        }
      ],
      "title": "Current",
      "description": "Note: If it's not working properly, make sure you have set: ``collect.global_variables = 1`` and ``collect.info_schema.tables = 1`` in the mysqld_exporter config file.",
      "type": "ssm-singlestat-panel",
      "format": "bytes"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 18,
        "y": 75
      },
      "hideTimeOverride": false,
      "interval": "$interval",
      "links": [],
      "maxDataPoints": 100,
      "pluginVersion": "9.5.7",
      "queryThresholds": "A,C",
      "exactThreshold": true,
      "colors": [
        "rgba(237, 129, 40, 0.89)",
        "rgba(36, 112, 33, 0.97)",
        "rgba(161, 18, 18, 0.9)"
      ],
      "valueFontSize": "150%",
      "colorBackground": true,
      "thresholdQuery": "B",
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
clamp( \n\
  ( \n\
    mysql_global_variables_key_buffer_size{instance=~\"$host\"} \n\
    and on() ( \n\
      ( \n\
        ceil( \n\
          sum( \n\
            mysql_info_schema_table_size{instance=~\"$host\", component=\"index_length\"} \n\
            and on (instance, schema, table) \n\
            mysql_info_schema_table_version{instance=~\"$host\", engine=\"MyISAM\"} \n\
          ) / ( 1024 * 1024 ) \n\
        ) * ( 1024 * 1024 ) \n\
      ) == mysql_global_variables_key_buffer_size{instance=~\"$host\"} \n\
    ) \n\
  ) \n\
  or on() ( \n\
    ( \n\
      ceil( \n\
        sum( \n\
          mysql_info_schema_table_size{instance=~\"$host\", component=\"index_length\"} \n\
          and on (instance, schema, table) \n\
          mysql_info_schema_table_version{instance=~\"$host\", engine=\"MyISAM\"} \n\
        ) / ( 1024 * 1024 ) \n\
      ) * ( 1024 * 1024 ) \n\
    ) \n\
    or \n\
    vector(1024 * 1024) \n\
  ), \n\
  1024 * 1024, \n\
  scalar( \n\
    floor( \n\
      ( \n\
        ( \n\
          node_memory_MemTotal{instance=\"$host\"} \n\
          or \n\
          node_memory_MemTotal_bytes{instance=\"$host\"} \n\
        ) * 0.75 \n\
      ) / ( 1024 * 1024 ) \n\
    ) * ( 1024 * 1024 ) \n\
  ) \n\
) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "A",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_key_buffer_size{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "B",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
floor( \n\
  ( \n\
    ( \n\
      node_memory_MemTotal{instance=\"$host\"} \n\
      or \n\
      node_memory_MemTotal_bytes{instance=\"$host\"} \n\
    ) * 0.75 \n\
  ) / ( 1024 * 1024 ) \n\
) * ( 1024 * 1024 ) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "C",
          "step": 300
        }
      ],
      "title": "Proposed",
      "description": "Note: If it's not working properly, make sure you have set: ``collect.global_variables = 1`` and ``collect.info_schema.tables = 1`` in the mysqld_exporter config file.",
      "type": "ssm-singlestat-panel",
      "format": "bytes"
    },
    {
      "collapsed": false,
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 83
      },
      "panels": [],
      "targets": [
        {
          "datasource": {
            "type": "prometheus"
          },
          "refId": "A"
        }
      ],
      "title": "aria_pagecache_buffer_size",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 20,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "min": 0,
          "unit": "decbytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 84
      },
      "links": [],
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "9.5.7",
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
sum( \n\
  mysql_info_schema_table_size{instance=~\"$host\", component=\"index_length\"} \n\
  and on (instance, schema, table) \n\
  mysql_info_schema_table_version{instance=~\"$host\", engine=\"Aria\"} \n\
) \n\
or \n\
vector(0) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "intervalFactor": 1,
          "legendFormat": "Index Size",
          "metric": "",
          "refId": "A",
          "step": 300
        }
      ],
      "title": "Aria Table Index Size",
      "description": "Note: If you do not see any metric, try setting: ``collect.info_schema.tables = 1`` in the mysqld_exporter config file.",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 12,
        "y": 84
      },
      "hideTimeOverride": false,
      "interval": "$interval",
      "links": [],
      "maxDataPoints": 100,
      "pluginVersion": "9.5.7",
      "queryThresholds": "B,C",
      "exactThreshold": true,
      "colors": [
        "rgba(237, 129, 40, 0.89)",
        "rgba(36, 112, 33, 0.97)",
        "rgba(161, 18, 18, 0.9)"
      ],
      "valueFontSize": "150%",
      "colorBackground": true,
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_aria_pagecache_buffer_size{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "A",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
clamp( \n\
  ( \n\
    mysql_global_variables_aria_pagecache_buffer_size{instance=~\"$host\"} \n\
    and on() ( \n\
      ( \n\
        ceil( \n\
          sum( \n\
            mysql_info_schema_table_size{instance=~\"$host\", component=\"index_length\"} \n\
            and on (instance, schema, table) \n\
            mysql_info_schema_table_version{instance=~\"$host\", engine=\"Aria\"} \n\
          ) / ( 1024 * 1024 ) \n\
        ) * ( 1024 * 1024 ) \n\
      ) == mysql_global_variables_aria_pagecache_buffer_size{instance=~\"$host\"} \n\
    ) \n\
  ) \n\
  or on() ( \n\
    ( \n\
      ceil( \n\
        sum( \n\
          mysql_info_schema_table_size{instance=~\"$host\", component=\"index_length\"} \n\
          and on (instance, schema, table) \n\
          mysql_info_schema_table_version{instance=~\"$host\", engine=\"Aria\"} \n\
        ) / ( 1024 * 1024 ) \n\
      ) * ( 1024 * 1024 ) \n\
    ) \n\
    or \n\
    vector(1024 * 1024) \n\
  ), \n\
  1024 * 1024, \n\
  scalar( \n\
    floor( \n\
      ( \n\
        ( \n\
          node_memory_MemTotal{instance=\"$host\"} \n\
          or \n\
          node_memory_MemTotal_bytes{instance=\"$host\"} \n\
        ) * 0.75 \n\
      ) / ( 1024 * 1024 ) \n\
    ) * ( 1024 * 1024 ) \n\
  ) \n\
) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "B",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
floor( \n\
  ( \n\
    ( \n\
      node_memory_MemTotal{instance=\"$host\"} \n\
      or \n\
      node_memory_MemTotal_bytes{instance=\"$host\"} \n\
    ) * 0.75 \n\
  ) / ( 1024 * 1024 ) \n\
) * ( 1024 * 1024 ) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "C",
          "step": 300
        }
      ],
      "title": "Current",
      "description": "Note: If it's not working properly, make sure you have set: ``collect.global_variables = 1`` and ``collect.info_schema.tables = 1`` in the mysqld_exporter config file.",
      "type": "ssm-singlestat-panel",
      "format": "bytes"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 18,
        "y": 84
      },
      "hideTimeOverride": false,
      "interval": "$interval",
      "links": [],
      "maxDataPoints": 100,
      "pluginVersion": "9.5.7",
      "queryThresholds": "A,C",
      "exactThreshold": true,
      "colors": [
        "rgba(237, 129, 40, 0.89)",
        "rgba(36, 112, 33, 0.97)",
        "rgba(161, 18, 18, 0.9)"
      ],
      "valueFontSize": "150%",
      "colorBackground": true,
      "thresholdQuery": "B",
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
clamp( \n\
  ( \n\
    mysql_global_variables_aria_pagecache_buffer_size{instance=~\"$host\"} \n\
    and on() ( \n\
      ( \n\
        ceil( \n\
          sum( \n\
            mysql_info_schema_table_size{instance=~\"$host\", component=\"index_length\"} \n\
            and on (instance, schema, table) \n\
            mysql_info_schema_table_version{instance=~\"$host\", engine=\"Aria\"} \n\
          ) / ( 1024 * 1024 ) \n\
        ) * ( 1024 * 1024 ) \n\
      ) == mysql_global_variables_aria_pagecache_buffer_size{instance=~\"$host\"} \n\
    ) \n\
  ) \n\
  or on() ( \n\
    ( \n\
      ceil( \n\
        sum( \n\
          mysql_info_schema_table_size{instance=~\"$host\", component=\"index_length\"} \n\
          and on (instance, schema, table) \n\
          mysql_info_schema_table_version{instance=~\"$host\", engine=\"Aria\"} \n\
        ) / ( 1024 * 1024 ) \n\
      ) * ( 1024 * 1024 ) \n\
    ) \n\
    or \n\
    vector(1024 * 1024) \n\
  ), \n\
  1024 * 1024, \n\
  scalar( \n\
    floor( \n\
      ( \n\
        ( \n\
          node_memory_MemTotal{instance=\"$host\"} \n\
          or \n\
          node_memory_MemTotal_bytes{instance=\"$host\"} \n\
        ) * 0.75 \n\
      ) / ( 1024 * 1024 ) \n\
    ) * ( 1024 * 1024 ) \n\
  ) \n\
) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "A",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_aria_pagecache_buffer_size{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "B",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
floor( \n\
  ( \n\
    ( \n\
      node_memory_MemTotal{instance=\"$host\"} \n\
      or \n\
      node_memory_MemTotal_bytes{instance=\"$host\"} \n\
    ) * 0.75 \n\
  ) / ( 1024 * 1024 ) \n\
) * ( 1024 * 1024 ) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "C",
          "step": 300
        }
      ],
      "title": "Proposed",
      "description": "Note: If it's not working properly, make sure you have set: ``collect.global_variables = 1`` and ``collect.info_schema.tables = 1`` in the mysqld_exporter config file.",
      "type": "ssm-singlestat-panel",
      "format": "bytes"
    },
    {
      "collapsed": false,
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 92
      },
      "panels": [],
      "targets": [
        {
          "datasource": {
            "type": "prometheus"
          },
          "refId": "A"
        }
      ],
      "title": "binlog_cache_size",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 20,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "min": 0,
          "max": 1,
          "unit": "percentunit",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 93
      },
      "links": [],
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "9.5.7",
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
( \n\
  rate(mysql_global_status_binlog_cache_use{instance=~\"$host\"}[$interval]) \n\
  or \n\
  rate(mysql_global_status_binlog_cache_use_total{instance=~\"$host\"}[$interval]) \n\
) / ( \n\
  ( \n\
    rate(mysql_global_status_binlog_cache_use{instance=~\"$host\"}[$interval]) \n\
    or \n\
    rate(mysql_global_status_binlog_cache_use_total{instance=~\"$host\"}[$interval]) \n\
  ) + ( \n\
    rate(mysql_global_status_binlog_cache_disk_use{instance=~\"$host\"}[$interval]) \n\
    or \n\
    rate(mysql_global_status_binlog_cache_disk_use_total{instance=~\"$host\"}[$interval]) \n\
  ) \n\
) \n\
or \n\
( \n\
  irate(mysql_global_status_binlog_cache_use{instance=~\"$host\"}[5m]) \n\
  or \n\
  irate(mysql_global_status_binlog_cache_use_total{instance=~\"$host\"}[5m]) \n\
) / ( \n\
  ( \n\
    irate(mysql_global_status_binlog_cache_use{instance=~\"$host\"}[5m]) \n\
    or \n\
    irate(mysql_global_status_binlog_cache_use_total{instance=~\"$host\"}[5m]) \n\
  ) + ( \n\
    irate(mysql_global_status_binlog_cache_disk_use{instance=~\"$host\"}[5m]) \n\
    or \n\
    irate(mysql_global_status_binlog_cache_disk_use_total{instance=~\"$host\"}[5m]) \n\
  ) \n\
) \n\
or \n\
on() vector(0) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "intervalFactor": 1,
          "legendFormat": "Binlog Cache Hit Ratio",
          "metric": "",
          "refId": "A",
          "step": 300
        }
      ],
      "title": "Binlog Cache Hit Ratio",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 12,
        "y": 93
      },
      "hideTimeOverride": false,
      "interval": "$interval",
      "links": [],
      "maxDataPoints": 100,
      "pluginVersion": "9.5.7",
      "queryThresholds": "B",
      "colors": [
        "rgba(237, 129, 40, 0.89)",
        "rgba(36, 112, 33, 0.97)"
      ],
      "valueFontSize": "150%",
      "colorBackground": true,
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_binlog_cache_size{instance=~\"$host\"} or mysql_global_variables_binlog_cache_size_count{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "A",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
clamp( \n\
  ( \n\
    ( \n\
      mysql_global_variables_binlog_cache_size{instance=~\"$host\"} \n\
      or \n\
      mysql_global_variables_binlog_cache_size_count{instance=~\"$host\"} \n\
    ) \n\
    and on() ( \n\
      avg_over_time( \n\
        ( \n\
          ( \n\
            irate(mysql_global_status_binlog_cache_use{instance=~\"$host\"}[5m]) \n\
            or \n\
            irate(mysql_global_status_binlog_cache_use_total{instance=~\"$host\"}[5m]) \n\
          ) / ( \n\
            ( \n\
              irate(mysql_global_status_binlog_cache_use{instance=~\"$host\"}[5m]) \n\
              or \n\
              irate(mysql_global_status_binlog_cache_use_total{instance=~\"$host\"}[5m]) \n\
            ) + ( \n\
              irate(mysql_global_status_binlog_cache_disk_use{instance=~\"$host\"}[5m]) \n\
              or \n\
              irate(mysql_global_status_binlog_cache_disk_use_total{instance=~\"$host\"}[5m]) \n\
            ) \n\
          ) \n\
        )[1w:2m] \n\
      ) >= 0.95 \n\
      or \n\
      mysql_global_variables_log_bin{instance=~\"$host\"} < 1 \n\
      or \n\
      avg_over_time( \n\
        ( \n\
          irate(mysql_global_status_binlog_cache_use{instance=~\"$host\"}[5m]) \n\
          or \n\
          irate(mysql_global_status_binlog_cache_use_total{instance=~\"$host\"}[5m]) \n\
        )[1w:2m] \n\
      ) == 0 \n\
    ) \n\
  ) \n\
  or on() ( \n\
    ( \n\
      mysql_global_variables_binlog_cache_size{instance=~\"$host\"} \n\
      or \n\
      mysql_global_variables_binlog_cache_size_count{instance=~\"$host\"} \n\
    ) * 2 \n\
  ), \n\
  4096, \n\
  18446744073709547520 \n\
) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "B",
          "step": 300
        }
      ],
      "title": "Current",
      "type": "ssm-singlestat-panel"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 18,
        "y": 93
      },
      "hideTimeOverride": false,
      "interval": "$interval",
      "links": [],
      "maxDataPoints": 100,
      "pluginVersion": "9.5.7",
      "queryThresholds": "A",
      "colors": [
        "rgba(237, 129, 40, 0.89)",
        "rgba(36, 112, 33, 0.97)"
      ],
      "valueFontSize": "150%",
      "colorBackground": true,
      "thresholdQuery": "B",
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
clamp( \n\
  ( \n\
    ( \n\
      mysql_global_variables_binlog_cache_size{instance=~\"$host\"} \n\
      or \n\
      mysql_global_variables_binlog_cache_size_count{instance=~\"$host\"} \n\
    ) \n\
    and on() ( \n\
      avg_over_time( \n\
        ( \n\
          ( \n\
            irate(mysql_global_status_binlog_cache_use{instance=~\"$host\"}[5m]) \n\
            or \n\
            irate(mysql_global_status_binlog_cache_use_total{instance=~\"$host\"}[5m]) \n\
          ) / ( \n\
            ( \n\
              irate(mysql_global_status_binlog_cache_use{instance=~\"$host\"}[5m]) \n\
              or \n\
              irate(mysql_global_status_binlog_cache_use_total{instance=~\"$host\"}[5m]) \n\
            ) + ( \n\
              irate(mysql_global_status_binlog_cache_disk_use{instance=~\"$host\"}[5m]) \n\
              or \n\
              irate(mysql_global_status_binlog_cache_disk_use_total{instance=~\"$host\"}[5m]) \n\
            ) \n\
          ) \n\
        )[1w:2m] \n\
      ) >= 0.95 \n\
      or \n\
      mysql_global_variables_log_bin{instance=~\"$host\"} < 1 \n\
      or \n\
      avg_over_time( \n\
        ( \n\
          irate(mysql_global_status_binlog_cache_use{instance=~\"$host\"}[5m]) \n\
          or \n\
          irate(mysql_global_status_binlog_cache_use_total{instance=~\"$host\"}[5m]) \n\
        )[1w:2m] \n\
      ) == 0 \n\
    ) \n\
  ) \n\
  or on() ( \n\
    ( \n\
      mysql_global_variables_binlog_cache_size{instance=~\"$host\"} \n\
      or \n\
      mysql_global_variables_binlog_cache_size_count{instance=~\"$host\"} \n\
    ) * 2 \n\
  ), \n\
  4096, \n\
  18446744073709547520 \n\
) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "A",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_binlog_cache_size{instance=~\"$host\"} or mysql_global_variables_binlog_cache_size_count{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "B",
          "step": 300
        }
      ],
      "title": "Proposed",
      "type": "ssm-singlestat-panel"
    },
    {
      "collapsed": false,
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 101
      },
      "panels": [],
      "targets": [
        {
          "datasource": {
            "type": "prometheus"
          },
          "refId": "A"
        }
      ],
      "title": "binlog_stmt_cache_size",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 20,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "min": 0,
          "max": 1,
          "unit": "percentunit",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 102
      },
      "links": [],
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "9.5.7",
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
( \n\
  rate(mysql_global_status_binlog_stmt_cache_use{instance=~\"$host\"}[$interval]) \n\
  or \n\
  rate(mysql_global_status_binlog_stmt_cache_use_total{instance=~\"$host\"}[$interval]) \n\
) / ( \n\
  ( \n\
    rate(mysql_global_status_binlog_stmt_cache_use{instance=~\"$host\"}[$interval]) \n\
    or \n\
    rate(mysql_global_status_binlog_stmt_cache_use_total{instance=~\"$host\"}[$interval]) \n\
  ) + ( \n\
    rate(mysql_global_status_binlog_stmt_cache_disk_use{instance=~\"$host\"}[$interval]) \n\
    or \n\
    rate(mysql_global_status_binlog_stmt_cache_disk_use_total{instance=~\"$host\"}[$interval]) \n\
  ) \n\
) \n\
or \n\
( \n\
  irate(mysql_global_status_binlog_stmt_cache_use{instance=~\"$host\"}[5m]) \n\
  or \n\
  irate(mysql_global_status_binlog_stmt_cache_use_total{instance=~\"$host\"}[5m]) \n\
) / ( \n\
  ( \n\
    irate(mysql_global_status_binlog_stmt_cache_use{instance=~\"$host\"}[5m]) \n\
    or \n\
    irate(mysql_global_status_binlog_stmt_cache_use_total{instance=~\"$host\"}[5m]) \n\
  ) + ( \n\
    irate(mysql_global_status_binlog_stmt_cache_disk_use{instance=~\"$host\"}[5m]) \n\
    or \n\
    irate(mysql_global_status_binlog_stmt_cache_disk_use_total{instance=~\"$host\"}[5m]) \n\
  ) \n\
) \n\
or \n\
on() vector(0) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "intervalFactor": 1,
          "legendFormat": "Binlog Stmt Cache Hit Ratio",
          "metric": "",
          "refId": "A",
          "step": 300
        }
      ],
      "title": "Binlog Stmt Cache Hit Ratio",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 12,
        "y": 102
      },
      "hideTimeOverride": false,
      "interval": "$interval",
      "links": [],
      "maxDataPoints": 100,
      "pluginVersion": "9.5.7",
      "queryThresholds": "B",
      "colors": [
        "rgba(237, 129, 40, 0.89)",
        "rgba(36, 112, 33, 0.97)"
      ],
      "valueFontSize": "150%",
      "colorBackground": true,
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_binlog_stmt_cache_size{instance=~\"$host\"} or mysql_global_variables_binlog_stmt_cache_size_count{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "A",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
clamp( \n\
  ( \n\
    ( \n\
      mysql_global_variables_binlog_stmt_cache_size{instance=~\"$host\"} \n\
      or \n\
      mysql_global_variables_binlog_stmt_cache_size_count{instance=~\"$host\"} \n\
    ) \n\
    and \n\
    on() ( \n\
      avg_over_time( \n\
        ( \n\
          ( \n\
            irate(mysql_global_status_binlog_stmt_cache_use{instance=~\"$host\"}[5m]) \n\
            or \n\
            irate(mysql_global_status_binlog_stmt_cache_use_total{instance=~\"$host\"}[5m]) \n\
          ) / ( \n\
            ( \n\
              irate(mysql_global_status_binlog_stmt_cache_use{instance=~\"$host\"}[5m]) \n\
              or \n\
              irate(mysql_global_status_binlog_stmt_cache_use_total{instance=~\"$host\"}[5m]) \n\
            ) + ( \n\
              irate(mysql_global_status_binlog_stmt_cache_disk_use{instance=~\"$host\"}[5m]) \n\
              or \n\
              irate(mysql_global_status_binlog_stmt_cache_disk_use_total{instance=~\"$host\"}[5m]) \n\
            ) \n\
          ) \n\
        )[1w:2m] \n\
      ) >= 0.95 \n\
      or \n\
      mysql_global_variables_log_bin{instance=~\"$host\"} < 1 \n\
      or \n\
      avg_over_time( \n\
        ( \n\
          irate(mysql_global_status_binlog_stmt_cache_use{instance=~\"$host\"}[5m]) \n\
          or \n\
          irate(mysql_global_status_binlog_stmt_cache_use_total{instance=~\"$host\"}[5m]) \n\
        )[1w:2m] \n\
      ) == 0 \n\
    ) \n\
  ) \n\
  or on() ( \n\
    ( \n\
      mysql_global_variables_binlog_stmt_cache_size{instance=~\"$host\"} \n\
      or \n\
      mysql_global_variables_binlog_stmt_cache_size_count{instance=~\"$host\"} \n\
    ) * 2 \n\
  ), \n\
  4096, \n\
  18446744073709547520 \n\
) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "B",
          "step": 300
        }
      ],
      "title": "Current",
      "type": "ssm-singlestat-panel"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 18,
        "y": 102
      },
      "hideTimeOverride": false,
      "interval": "$interval",
      "links": [],
      "maxDataPoints": 100,
      "pluginVersion": "9.5.7",
      "queryThresholds": "A",
      "colors": [
        "rgba(237, 129, 40, 0.89)",
        "rgba(36, 112, 33, 0.97)"
      ],
      "valueFontSize": "150%",
      "colorBackground": true,
      "thresholdQuery": "B",
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
clamp( \n\
  ( \n\
    ( \n\
      mysql_global_variables_binlog_stmt_cache_size{instance=~\"$host\"} \n\
      or \n\
      mysql_global_variables_binlog_stmt_cache_size_count{instance=~\"$host\"} \n\
    ) \n\
    and \n\
    on() ( \n\
      avg_over_time( \n\
        ( \n\
          ( \n\
            irate(mysql_global_status_binlog_stmt_cache_use{instance=~\"$host\"}[5m]) \n\
            or \n\
            irate(mysql_global_status_binlog_stmt_cache_use_total{instance=~\"$host\"}[5m]) \n\
          ) / ( \n\
            ( \n\
              irate(mysql_global_status_binlog_stmt_cache_use{instance=~\"$host\"}[5m]) \n\
              or \n\
              irate(mysql_global_status_binlog_stmt_cache_use_total{instance=~\"$host\"}[5m]) \n\
            ) + ( \n\
              irate(mysql_global_status_binlog_stmt_cache_disk_use{instance=~\"$host\"}[5m]) \n\
              or \n\
              irate(mysql_global_status_binlog_stmt_cache_disk_use_total{instance=~\"$host\"}[5m]) \n\
            ) \n\
          ) \n\
        )[1w:2m] \n\
      ) >= 0.95 \n\
      or \n\
      mysql_global_variables_log_bin{instance=~\"$host\"} < 1 \n\
      or \n\
      avg_over_time( \n\
        ( \n\
          irate(mysql_global_status_binlog_stmt_cache_use{instance=~\"$host\"}[5m]) \n\
          or \n\
          irate(mysql_global_status_binlog_stmt_cache_use_total{instance=~\"$host\"}[5m]) \n\
        )[1w:2m] \n\
      ) == 0 \n\
    ) \n\
  ) \n\
  or on() ( \n\
    ( \n\
      mysql_global_variables_binlog_stmt_cache_size{instance=~\"$host\"} \n\
      or \n\
      mysql_global_variables_binlog_stmt_cache_size_count{instance=~\"$host\"} \n\
    ) * 2 \n\
  ), \n\
  4096, \n\
  18446744073709547520 \n\
) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "A",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_binlog_stmt_cache_size{instance=~\"$host\"} or mysql_global_variables_binlog_stmt_cache_size_count{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "B",
          "step": 300
        }
      ],
      "title": "Proposed",
      "type": "ssm-singlestat-panel"
    },
    {
      "collapsed": false,
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 110
      },
      "panels": [],
      "targets": [
        {
          "datasource": {
            "type": "prometheus"
          },
          "refId": "A"
        }
      ],
      "title": "tmp_table_size",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 20,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "min": 0,
          "max": 1,
          "unit": "percentunit",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 111
      },
      "links": [],
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "9.5.7",
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
( \n\
  1 - ( \n\
    mysql_global_status_created_tmp_disk_tables{instance=\"$host\"} \n\
    or \n\
    mysql_global_status_created_tmp_disk_tables_total{instance=\"$host\"} \n\
  ) / ( \n\
    mysql_global_status_created_tmp_tables{instance=\"$host\"} \n\
    or \n\
    mysql_global_status_created_tmp_tables_total{instance=\"$host\"} \n\
  ) \n\
) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "intervalFactor": 1,
          "legendFormat": "Temporary Table Memory Fit Rate",
          "metric": "",
          "refId": "A",
          "step": 300
        }
      ],
      "title": "Temporary Table Memory Fit Rate",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 12,
        "y": 111
      },
      "hideTimeOverride": false,
      "interval": "$interval",
      "links": [],
      "maxDataPoints": 100,
      "pluginVersion": "9.5.7",
      "queryThresholds": "B",
      "colors": [
        "rgba(237, 129, 40, 0.89)",
        "rgba(36, 112, 33, 0.97)"
      ],
      "valueFontSize": "150%",
      "colorBackground": true,
      "exactThreshold": true,
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_tmp_table_size{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "A",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
clamp( \n\
  2^( \n\
    floor( \n\
      log2( \n\
        max_over_time( \n\
          ( \n\
            mysql_global_variables_tmp_table_size{instance=\"$host\"} \n\
            / \n\
            ( \n\
              1 - ( \n\
                mysql_global_status_created_tmp_disk_tables{instance=\"$host\"} \n\
                or \n\
                mysql_global_status_created_tmp_disk_tables_total{instance=\"$host\"} \n\
              ) / ( \n\
                mysql_global_status_created_tmp_tables{instance=\"$host\"} \n\
                or \n\
                mysql_global_status_created_tmp_tables_total{instance=\"$host\"} \n\
              ) \n\
            ) \n\
          )[1w:2m] \n\
        ) \n\
      ) \n\
    ) \n\
  ) \n\
  or \n\
  2^( \n\
    floor( \n\
      log2(mysql_global_variables_tmp_table_size{instance=\"$host\"}) \n\
    ) + 1 \n\
  ), \n\
  16777216, \n\
  scalar( \n\
    ( \n\
      ( \n\
        node_memory_MemTotal{instance=\"$host\"} \n\
        or \n\
        node_memory_MemTotal_bytes{instance=\"$host\"} \n\
      ) * 0.01 \n\
      and on() ( \n\
        ( \n\
          node_memory_MemTotal{instance=\"$host\"} \n\
          or \n\
          node_memory_MemTotal_bytes{instance=\"$host\"} \n\
        ) * 0.01 > 16777216 \n\
      ) \n\
    ) \n\
    or on() vector(18446744073709551615) \n\
  ) \n\
) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "B",
          "step": 300
        }
      ],
      "title": "Current",
      "type": "ssm-singlestat-panel",
      "format": "bytes"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 18,
        "y": 111
      },
      "hideTimeOverride": false,
      "interval": "$interval",
      "links": [],
      "maxDataPoints": 100,
      "pluginVersion": "9.5.7",
      "queryThresholds": "A",
      "colors": [
        "rgba(237, 129, 40, 0.89)",
        "rgba(36, 112, 33, 0.97)"
      ],
      "valueFontSize": "150%",
      "colorBackground": true,
      "thresholdQuery": "B",
      "exactThreshold": true,
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
clamp( \n\
  2^( \n\
    floor( \n\
      log2( \n\
        max_over_time( \n\
          ( \n\
            mysql_global_variables_tmp_table_size{instance=\"$host\"} \n\
            / \n\
            ( \n\
              1 - ( \n\
                mysql_global_status_created_tmp_disk_tables{instance=\"$host\"} \n\
                or \n\
                mysql_global_status_created_tmp_disk_tables_total{instance=\"$host\"} \n\
              ) / ( \n\
                mysql_global_status_created_tmp_tables{instance=\"$host\"} \n\
                or \n\
                mysql_global_status_created_tmp_tables_total{instance=\"$host\"} \n\
              ) \n\
            ) \n\
          )[1w:2m] \n\
        ) \n\
      ) \n\
    ) \n\
  ) \n\
  or \n\
  2^( \n\
    floor( \n\
      log2(mysql_global_variables_tmp_table_size{instance=\"$host\"}) \n\
    ) + 1 \n\
  ), \n\
  16777216, \n\
  scalar( \n\
    ( \n\
      ( \n\
        node_memory_MemTotal{instance=\"$host\"} \n\
        or \n\
        node_memory_MemTotal_bytes{instance=\"$host\"} \n\
      ) * 0.01 \n\
      and on() ( \n\
        ( \n\
          node_memory_MemTotal{instance=\"$host\"} \n\
          or \n\
          node_memory_MemTotal_bytes{instance=\"$host\"} \n\
        ) * 0.01 > 16777216 \n\
      ) \n\
    ) \n\
    or on() vector(18446744073709551615) \n\
  ) \n\
) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "A",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_tmp_table_size{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "B",
          "step": 300
        }
      ],
      "title": "Proposed",
      "type": "ssm-singlestat-panel",
      "format": "bytes"
    },
    {
      "collapsed": false,
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 119
      },
      "panels": [],
      "targets": [
        {
          "datasource": {
            "type": "prometheus"
          },
          "refId": "A"
        }
      ],
      "title": "innodb_adaptive_hash_index",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 20,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "min": 0,
          "max": 1,
          "unit": "percentunit",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 120
      },
      "links": [],
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "9.5.7",
      "targets": [
        {
          "datasource": {
            "type": "prometheus"
          },
          "expr": "\
( \n\
  rate(mysql_info_schema_innodb_metrics_adaptive_hash_index_adaptive_hash_searches_total{instance=~\"$host\"}[$interval]) \n\
  or \n\
  irate(mysql_info_schema_innodb_metrics_adaptive_hash_index_adaptive_hash_searches_total{instance=~\"$host\"}[5m]) \n\
) / ( \n\
  ( \n\
    rate(mysql_info_schema_innodb_metrics_adaptive_hash_index_adaptive_hash_pages_added_total{instance=~\"$host\"}[$interval]) \n\
    + \n\
    rate(mysql_info_schema_innodb_metrics_adaptive_hash_index_adaptive_hash_pages_removed_total{instance=~\"$host\"}[$interval]) \n\
    + \n\
    rate(mysql_info_schema_innodb_metrics_adaptive_hash_index_adaptive_hash_rows_added_total{instance=~\"$host\"}[$interval]) \n\
    + \n\
    rate(mysql_info_schema_innodb_metrics_adaptive_hash_index_adaptive_hash_rows_removed_total{instance=~\"$host\"}[$interval]) \n\
    + \n\
    rate(mysql_info_schema_innodb_metrics_adaptive_hash_index_adaptive_hash_rows_updated_total{instance=~\"$host\"}[$interval]) \n\
    + \n\
    rate(mysql_info_schema_innodb_metrics_adaptive_hash_index_adaptive_hash_searches_total{instance=~\"$host\"}[$interval]) \n\
  ) \n\
  or \n\
  ( \n\
    irate(mysql_info_schema_innodb_metrics_adaptive_hash_index_adaptive_hash_pages_added_total{instance=~\"$host\"}[5m]) \n\
    + \n\
    irate(mysql_info_schema_innodb_metrics_adaptive_hash_index_adaptive_hash_pages_removed_total{instance=~\"$host\"}[5m]) \n\
    + \n\
    irate(mysql_info_schema_innodb_metrics_adaptive_hash_index_adaptive_hash_rows_added_total{instance=~\"$host\"}[5m]) \n\
    + \n\
    irate(mysql_info_schema_innodb_metrics_adaptive_hash_index_adaptive_hash_rows_removed_total{instance=~\"$host\"}[5m]) \n\
    + \n\
    irate(mysql_info_schema_innodb_metrics_adaptive_hash_index_adaptive_hash_rows_updated_total{instance=~\"$host\"}[5m]) \n\
    + \n\
    irate(mysql_info_schema_innodb_metrics_adaptive_hash_index_adaptive_hash_searches_total{instance=~\"$host\"}[5m]) \n\
  ) \n\
) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "intervalFactor": 1,
          "legendFormat": "AHI Efficiency",
          "refId": "A",
          "step": 300
        }
      ],
      "transformations": [
        {
          "id": "convertFieldType",
          "options": {
            "conversions": [
              {
                "destinationType": "number",
                "targetField": "AHI Efficiency"
              }
            ],
            "fields": {}
          }
        }
      ],
      "title": "AHI Efficiency",
      "type": "timeseries",
      "description": "Note: If you do not see any metric, try setting: ``innodb_adaptive_hash_index = ON`` in mysql."
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 12,
        "y": 120
      },
      "hideTimeOverride": false,
      "interval": "$interval",
      "links": [],
      "maxDataPoints": 100,
      "pluginVersion": "9.5.7",
      "queryThresholds": "C,B",
      "colors": [
        "rgb(24, 27, 31)",
        "rgba(237, 129, 40, 0.89)",
        "rgba(36, 112, 33, 0.97)"
      ],
      "valueFontSize": "150%",
      "colorBackground": true,
      "exactThreshold": true,
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_innodb_adaptive_hash_index{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "A",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
( \n\
  vector(0) \n\
  and on() ( \n\
    avg_over_time( \n\
      ( \n\
        irate(mysql_info_schema_innodb_metrics_adaptive_hash_index_adaptive_hash_searches_total{instance=~\"$host\"}[5m]) \n\
        / \n\
        ( \n\
          irate(mysql_info_schema_innodb_metrics_adaptive_hash_index_adaptive_hash_pages_added_total{instance=~\"$host\"}[5m]) \n\
          + \n\
          irate(mysql_info_schema_innodb_metrics_adaptive_hash_index_adaptive_hash_pages_removed_total{instance=~\"$host\"}[5m]) \n\
          + \n\
          irate(mysql_info_schema_innodb_metrics_adaptive_hash_index_adaptive_hash_rows_added_total{instance=~\"$host\"}[5m]) \n\
          + \n\
          irate(mysql_info_schema_innodb_metrics_adaptive_hash_index_adaptive_hash_rows_removed_total{instance=~\"$host\"}[5m]) \n\
          + \n\
          irate(mysql_info_schema_innodb_metrics_adaptive_hash_index_adaptive_hash_rows_updated_total{instance=~\"$host\"}[5m]) \n\
          + \n\
          irate(mysql_info_schema_innodb_metrics_adaptive_hash_index_adaptive_hash_searches_total{instance=~\"$host\"}[5m]) \n\
        ) >= 0 \n\
      )[1w:2m] \n\
    ) < 0.5 \n\
    and mysql_global_variables_innodb_adaptive_hash_index{instance=~\"$host\"} > 0 \n\
  ) \n\
) \n\
or on() ( \n\
  ( \n\
    mysql_global_variables_innodb_adaptive_hash_index{instance=~\"$host\"} \n\
    and on() ( \n\
      mysql_global_variables_innodb_adaptive_hash_index{instance=~\"$host\"} > 0 \n\
    ) \n\
  ) \n\
  or on() vector(-1) \n\
) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "B",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "(mysql_global_variables_innodb_adaptive_hash_index{instance=~\"$host\"} and on() (mysql_global_variables_innodb_adaptive_hash_index{instance=~\"$host\"} > 0)) or on() vector(0.5)",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "C",
          "step": 300
        }
      ],
      "title": "Current",
      "type": "ssm-singlestat-panel",
      "format": "bool_on_off",
      "description": "Note: the ``innodb_adaptive_hash_index`` MySQL/MariaDB setting needs to be enabled for a period to give the advisor some data to work with."
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 18,
        "y": 120
      },
      "hideTimeOverride": false,
      "interval": "$interval",
      "links": [],
      "maxDataPoints": 100,
      "pluginVersion": "9.5.7",
      "queryThresholds": "C,A",
      "colors": [
        "rgb(24, 27, 31)",
        "rgba(237, 129, 40, 0.89)",
        "rgba(36, 112, 33, 0.97)"
      ],
      "valueFontSize": "150%",
      "colorBackground": true,
      "thresholdQuery": "B",
      "exactThreshold": true,
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "-1"
        }
      ],
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
( \n\
  vector(0) \n\
  and on() ( \n\
    avg_over_time( \n\
      ( \n\
        irate(mysql_info_schema_innodb_metrics_adaptive_hash_index_adaptive_hash_searches_total{instance=~\"$host\"}[5m]) \n\
        / \n\
        ( \n\
          irate(mysql_info_schema_innodb_metrics_adaptive_hash_index_adaptive_hash_pages_added_total{instance=~\"$host\"}[5m]) \n\
          + \n\
          irate(mysql_info_schema_innodb_metrics_adaptive_hash_index_adaptive_hash_pages_removed_total{instance=~\"$host\"}[5m]) \n\
          + \n\
          irate(mysql_info_schema_innodb_metrics_adaptive_hash_index_adaptive_hash_rows_added_total{instance=~\"$host\"}[5m]) \n\
          + \n\
          irate(mysql_info_schema_innodb_metrics_adaptive_hash_index_adaptive_hash_rows_removed_total{instance=~\"$host\"}[5m]) \n\
          + \n\
          irate(mysql_info_schema_innodb_metrics_adaptive_hash_index_adaptive_hash_rows_updated_total{instance=~\"$host\"}[5m]) \n\
          + \n\
          irate(mysql_info_schema_innodb_metrics_adaptive_hash_index_adaptive_hash_searches_total{instance=~\"$host\"}[5m]) \n\
        ) >= 0 \n\
      )[1w:2m] \n\
    ) < 0.5 \n\
    and mysql_global_variables_innodb_adaptive_hash_index{instance=~\"$host\"} > 0 \n\
  ) \n\
) \n\
or on() ( \n\
  ( \n\
    mysql_global_variables_innodb_adaptive_hash_index{instance=~\"$host\"} \n\
    and on() ( \n\
      mysql_global_variables_innodb_adaptive_hash_index{instance=~\"$host\"} > 0 \n\
    ) \n\
  ) \n\
  or on() vector(-1) \n\
) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "A",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_innodb_adaptive_hash_index{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "B",
          "step": 300
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "(mysql_global_variables_innodb_adaptive_hash_index{instance=~\"$host\"} and on() (mysql_global_variables_innodb_adaptive_hash_index{instance=~\"$host\"} > 0)) or on() vector(0.5)",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "C",
          "step": 300
        }
      ],
      "title": "Proposed",
      "type": "ssm-singlestat-panel",
      "format": "bool_on_off",
      "description": "Note: the ``innodb_adaptive_hash_index`` MySQL/MariaDB setting needs to be enabled for a period to give the advisor some data to work with."
    },
    {
      "collapsed": false,
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 128
      },
      "panels": [],
      "targets": [
        {
          "datasource": {
            "type": "prometheus"
          },
          "refId": "A"
        }
      ],
      "title": "Theoretical Memory Usage",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 129
      },
      "hideTimeOverride": false,
      "interval": "$interval",
      "links": [],
      "maxDataPoints": 100,
      "pluginVersion": "9.5.7",
      "queryThresholds": "C,D",
      "thresholdQuery": "A",
      "colors": [
        "rgba(36, 112, 33, 0.97)",
        "rgba(237, 129, 40, 0.89)",
        "rgba(161, 18, 18, 0.9)"
      ],
      "valueFontSize": "150%",
      "colorBackground": true,
      "showTip": true,
      "tipSeries": "B",
      "tipPostfix": "% of total RAM",
      "targets": [
        {
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
mysql_global_variables_max_connections{instance=~\"$host\"} * ( \n\
  ( \n\
    mysql_global_variables_binlog_cache_size{instance=~\"$host\"} \n\
    or \n\
    mysql_global_variables_binlog_cache_size_count{instance=~\"$host\"} \n\
  ) + ( \n\
    mysql_global_variables_binlog_stmt_cache_size{instance=~\"$host\"} \n\
    or \n\
    mysql_global_variables_binlog_stmt_cache_size_count{instance=~\"$host\"} \n\
  ) \n\
  + mysql_global_variables_bulk_insert_buffer_size{instance=~\"$host\"} \n\
  + mysql_global_variables_join_buffer_size{instance=~\"$host\"} \n\
  + mysql_global_variables_max_allowed_packet{instance=~\"$host\"} \n\
  + mysql_global_variables_read_buffer_size{instance=~\"$host\"} \n\
  + mysql_global_variables_read_rnd_buffer_size{instance=~\"$host\"} \n\
  + mysql_global_variables_sort_buffer_size{instance=~\"$host\"} \n\
  + mysql_global_variables_thread_stack{instance=~\"$host\"} \n\
  + mysql_global_variables_tmp_table_size{instance=~\"$host\"} \n\
) \n\
+ mysql_global_variables_slave_parallel_threads{instance=~\"$host\"} * mysql_global_variables_slave_parallel_max_queued{instance=~\"$host\"} \n\
+ mysql_global_variables_binlog_file_cache_size{instance=~\"$host\"} \n\
+ mysql_global_variables_innodb_buffer_pool_size{instance=~\"$host\"} \n\
+ mysql_global_variables_innodb_log_buffer_size{instance=~\"$host\"} \n\
+ mysql_global_variables_key_buffer_size{instance=~\"$host\"} \n\
+ mysql_global_variables_query_cache_size{instance=~\"$host\"} \n\
+ mysql_global_variables_open_files_limit{instance=~\"$host\"} * 1024 \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "A",
          "step": 300
        },
        {
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
clamp( \n\
  round( \n\
    ( \n\
      mysql_global_variables_max_connections{instance=~\"$host\"} * ( \n\
        ( \n\
          mysql_global_variables_binlog_cache_size{instance=~\"$host\"} \n\
          or \n\
          mysql_global_variables_binlog_cache_size_count{instance=~\"$host\"} \n\
        ) + ( \n\
          mysql_global_variables_binlog_stmt_cache_size{instance=~\"$host\"} \n\
          or \n\
          mysql_global_variables_binlog_stmt_cache_size_count{instance=~\"$host\"} \n\
        ) \n\
        + mysql_global_variables_bulk_insert_buffer_size{instance=~\"$host\"} \n\
        + mysql_global_variables_join_buffer_size{instance=~\"$host\"} \n\
        + mysql_global_variables_max_allowed_packet{instance=~\"$host\"} \n\
        + mysql_global_variables_read_buffer_size{instance=~\"$host\"} \n\
        + mysql_global_variables_read_rnd_buffer_size{instance=~\"$host\"} \n\
        + mysql_global_variables_sort_buffer_size{instance=~\"$host\"} \n\
        + mysql_global_variables_thread_stack{instance=~\"$host\"} \n\
        + mysql_global_variables_tmp_table_size{instance=~\"$host\"} \n\
      ) \n\
      + mysql_global_variables_slave_parallel_threads{instance=~\"$host\"} * mysql_global_variables_slave_parallel_max_queued{instance=~\"$host\"} \n\
      + mysql_global_variables_binlog_file_cache_size{instance=~\"$host\"} \n\
      + mysql_global_variables_innodb_buffer_pool_size{instance=~\"$host\"} \n\
      + mysql_global_variables_innodb_log_buffer_size{instance=~\"$host\"} \n\
      + mysql_global_variables_key_buffer_size{instance=~\"$host\"} \n\
      + mysql_global_variables_query_cache_size{instance=~\"$host\"} \n\
      + mysql_global_variables_open_files_limit{instance=~\"$host\"} * 1024 \n\
    ) / scalar( \n\
      ( \n\
        node_memory_MemTotal{instance=~\"$host\"} \n\
        or \n\
        node_memory_MemTotal_bytes{instance=~\"$host\"} \n\
      ) \n\
    )*100, \n\
    0.01 \n\
  ), \n\
  0, \n\
  100 \n\
) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "B",
          "step": 300
        },
        {
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
( \n\
  node_memory_MemTotal{instance=~\"$host\"} \n\
  or \n\
  node_memory_MemTotal_bytes{instance=~\"$host\"} \n\
) * 0.8 \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "C",
          "step": 300
        },
        {
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
( \n\
  node_memory_MemTotal{instance=~\"$host\"} \n\
  or \n\
  node_memory_MemTotal_bytes{instance=~\"$host\"} \n\
) * 0.9 \n\
",
          "format": "time_series",
          "interval": "$interval",
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "metric": "",
          "refId": "D",
          "step": 300
        }
      ],
      "title": "Total Memory Usage",
      "type": "ssm-singlestat-panel",
      "format": "bytes"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 20,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "min": 0,
          "max": 1,
          "unit": "percentunit",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Maximum Probable Connection Memory Usage"
            },
            "properties": [
              {
                "id": "unit",
                "value": "bytes"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Non-InnoDB Maximum Connection Memory Usage"
            },
            "properties": [
              {
                "id": "unit",
                "value": "bytes"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Theoretically Possible Other Connection Memory Usage"
            },
            "properties": [
              {
                "id": "unit",
                "value": "bytes"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Replication Memory Usage"
            },
            "properties": [
              {
                "id": "unit",
                "value": "bytes"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Maximum Global Memory Usage"
            },
            "properties": [
              {
                "id": "unit",
                "value": "bytes"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 129
      },
      "links": [],
      "options": {
        "displayLabels": [
          "value",
          "percent"
        ],
        "legend": {
          "displayMode": "list",
          "placement": "right",
          "showLegend": true
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "9.5.7",
      "targets": [
        {
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
mysql_global_variables_max_connections{instance=~\"$host\"} * ( \n\
  ( \n\
    mysql_global_variables_binlog_cache_size{instance=~\"$host\"} \n\
    or \n\
    mysql_global_variables_binlog_cache_size_count{instance=~\"$host\"} \n\
  ) + ( \n\
    mysql_global_variables_binlog_stmt_cache_size{instance=~\"$host\"} \n\
    or \n\
    mysql_global_variables_binlog_stmt_cache_size_count{instance=~\"$host\"} \n\
  ) \n\
  + mysql_global_variables_join_buffer_size{instance=~\"$host\"} \n\
  + mysql_global_variables_sort_buffer_size{instance=~\"$host\"} \n\
  + mysql_global_variables_thread_stack{instance=~\"$host\"} \n\
) \n\
",
          "interval": "$interval",
          "intervalFactor": 1,
          "metric": "",
          "refId": "A",
          "legendFormat": "Maximum Probable Connection Memory Usage",
          "instant": true
        },
        {
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
mysql_global_variables_max_connections{instance=~\"$host\"} * ( \n\
  + mysql_global_variables_bulk_insert_buffer_size{instance=~\"$host\"} \n\
  + mysql_global_variables_read_buffer_size{instance=~\"$host\"} \n\
  + mysql_global_variables_read_rnd_buffer_size{instance=~\"$host\"} \n\
) \n\
",
          "interval": "$interval",
          "intervalFactor": 1,
          "metric": "",
          "refId": "B",
          "legendFormat": "Non-InnoDB Maximum Connection Memory Usage",
          "instant": true
        },
        {
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
mysql_global_variables_max_connections{instance=~\"$host\"} * ( \n\
  + mysql_global_variables_max_allowed_packet{instance=~\"$host\"} \n\
  + mysql_global_variables_tmp_table_size{instance=~\"$host\"} \n\
) \n\
",
          "interval": "$interval",
          "intervalFactor": 1,
          "metric": "",
          "refId": "C",
          "legendFormat": "Theoretically Possible Other Connection Memory Usage",
          "instant": true
        },
        {
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_slave_parallel_threads{instance=~\"$host\"} * mysql_global_variables_slave_parallel_max_queued{instance=~\"$host\"}",
          "interval": "$interval",
          "intervalFactor": 1,
          "metric": "",
          "refId": "D",
          "legendFormat": "Replication Memory Usage",
          "instant": true
        },
        {
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_binlog_file_cache_size{instance=~\"$host\"} + mysql_global_variables_innodb_buffer_pool_size{instance=~\"$host\"} + mysql_global_variables_innodb_log_buffer_size{instance=~\"$host\"} + mysql_global_variables_key_buffer_size{instance=~\"$host\"} + mysql_global_variables_query_cache_size{instance=~\"$host\"} + mysql_global_variables_open_files_limit{instance=~\"$host\"} * 1024",
          "interval": "$interval",
          "intervalFactor": 1,
          "metric": "",
          "refId": "E",
          "legendFormat": "Maximum Global Memory Usage",
          "instant": true
        }
      ],
      "title": "Memory Usage Summary",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 20,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "min": 0,
          "max": 1,
          "unit": "percentunit",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 137
      },
      "links": [],
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "9.5.7",
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
mysql_global_variables_max_connections{instance=~\"$host\"} \n\
* ( \n\
  mysql_global_variables_binlog_cache_size{instance=~\"$host\"} \n\
  or \n\
  mysql_global_variables_binlog_cache_size_count{instance=~\"$host\"} \n\
) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "intervalFactor": 1,
          "metric": "",
          "refId": "A",
          "step": 300,
          "legendFormat": "binlog_cache_size"
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "\
mysql_global_variables_max_connections{instance=~\"$host\"} \n\
* ( \n\
  mysql_global_variables_binlog_stmt_cache_size{instance=~\"$host\"} \n\
  or \n\
  mysql_global_variables_binlog_stmt_cache_size_count{instance=~\"$host\"} \n\
) \n\
",
          "format": "time_series",
          "interval": "$interval",
          "intervalFactor": 1,
          "metric": "",
          "refId": "B",
          "step": 300,
          "legendFormat": "binlog_stmt_cache_size"
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_max_connections{instance=~\"$host\"} * mysql_global_variables_join_buffer_size{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "intervalFactor": 1,
          "metric": "",
          "refId": "C",
          "step": 300,
          "legendFormat": "join_buffer_size"
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_max_connections{instance=~\"$host\"} * mysql_global_variables_sort_buffer_size{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "intervalFactor": 1,
          "metric": "",
          "refId": "D",
          "step": 300,
          "legendFormat": "sort_buffer_size"
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_max_connections{instance=~\"$host\"} * mysql_global_variables_thread_stack{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "intervalFactor": 1,
          "metric": "",
          "refId": "E",
          "step": 300,
          "legendFormat": "thread_stack"
        }
      ],
      "title": "Maximum Probable Connection Memory Usage",
      "type": "ssm-blockmap-panel",
      "format": "bytes"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 20,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "min": 0,
          "max": 1,
          "unit": "percentunit",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 145
      },
      "links": [],
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "9.5.7",
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_max_connections{instance=~\"$host\"} * mysql_global_variables_bulk_insert_buffer_size{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "intervalFactor": 1,
          "metric": "",
          "refId": "A",
          "step": 300,
          "legendFormat": "bulk_insert_buffer_size"
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_max_connections{instance=~\"$host\"} * mysql_global_variables_read_buffer_size{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "intervalFactor": 1,
          "metric": "",
          "refId": "B",
          "step": 300,
          "legendFormat": "read_buffer_size"
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_max_connections{instance=~\"$host\"} * mysql_global_variables_read_rnd_buffer_size{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "intervalFactor": 1,
          "metric": "",
          "refId": "C",
          "step": 300,
          "legendFormat": "read_rnd_buffer_size"
        }
      ],
      "title": "Non-InnoDB Maximum Connection Memory Usage",
      "type": "ssm-blockmap-panel",
      "format": "bytes"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 20,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "min": 0,
          "max": 1,
          "unit": "percentunit",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 153
      },
      "links": [],
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "9.5.7",
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_max_connections{instance=~\"$host\"} * mysql_global_variables_max_allowed_packet{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "intervalFactor": 1,
          "metric": "",
          "refId": "A",
          "step": 300,
          "legendFormat": "max_allowed_packet"
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_max_connections{instance=~\"$host\"} * mysql_global_variables_tmp_table_size{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "intervalFactor": 1,
          "metric": "",
          "refId": "B",
          "step": 300,
          "legendFormat": "tmp_table_size"
        }
      ],
      "title": "Theoretically Possible Other Connection Memory Usage",
      "type": "ssm-blockmap-panel",
      "format": "bytes"
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 20,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "min": 0,
          "max": 1,
          "unit": "percentunit",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 161
      },
      "links": [],
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "9.5.7",
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_slave_parallel_threads{instance=~\"$host\"} * mysql_global_variables_slave_parallel_max_queued{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "intervalFactor": 1,
          "metric": "",
          "refId": "A",
          "step": 300,
          "legendFormat": "slave_parallel_max_queued"
        }
      ],
      "title": "Replication Memory Usage",
      "type": "ssm-blockmap-panel",
      "format": "bytes",
      "hideSeriesLines": true
    },
    {
      "datasource": {
        "type": "prometheus"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 20,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "min": 0,
          "max": 1,
          "unit": "percentunit",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 169
      },
      "links": [],
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "9.5.7",
      "targets": [
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_binlog_file_cache_size{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "intervalFactor": 1,
          "metric": "",
          "refId": "A",
          "step": 300,
          "legendFormat": "binlog_file_cache_size"
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_innodb_buffer_pool_size{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "intervalFactor": 1,
          "metric": "",
          "refId": "B",
          "step": 300,
          "legendFormat": "innodb_buffer_pool_size"
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_innodb_log_buffer_size{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "intervalFactor": 1,
          "metric": "",
          "refId": "C",
          "step": 300,
          "legendFormat": "innodb_log_buffer_size"
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_key_buffer_size{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "intervalFactor": 1,
          "metric": "",
          "refId": "D",
          "step": 300,
          "legendFormat": "key_buffer_size"
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "mysql_global_variables_query_cache_size{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "intervalFactor": 1,
          "metric": "",
          "refId": "E",
          "step": 300,
          "legendFormat": "query_cache_size"
        },
        {
          "calculatedInterval": "2m",
          "datasource": {
            "type": "prometheus"
          },
          "datasourceErrors": {},
          "errors": {},
          "expr": "1024 * mysql_global_variables_open_files_limit{instance=~\"$host\"}",
          "format": "time_series",
          "interval": "$interval",
          "intervalFactor": 1,
          "metric": "",
          "refId": "F",
          "step": 300,
          "legendFormat": "open_files_limit"
        }
      ],
      "title": "Maximum Global Memory Usage",
      "type": "ssm-blockmap-panel",
      "format": "bytes"
    }
  ],
  "refresh": "1m",
  "schemaVersion": 38,
  "style": "dark",
  "tags": [
    "Silicon",
    "Insight"
  ],
  "templating": {
    "list": [
      {
        "allFormat": "glob",
        "auto": true,
        "auto_count": 200,
        "auto_min": "1s",
        "current": {
          "selected": false,
          "text": "auto",
          "value": "$__auto_interval_interval"
        },
        "datasource": "Prometheus",
        "hide": 0,
        "includeAll": false,
        "label": "Interval",
        "multi": false,
        "multiFormat": "glob",
        "name": "interval",
        "options": [
          {
            "selected": true,
            "text": "auto",
            "value": "$__auto_interval_interval"
          },
          {
            "selected": false,
            "text": "1s",
            "value": "1s"
          },
          {
            "selected": false,
            "text": "5s",
            "value": "5s"
          },
          {
            "selected": false,
            "text": "1m",
            "value": "1m"
          },
          {
            "selected": false,
            "text": "5m",
            "value": "5m"
          },
          {
            "selected": false,
            "text": "1h",
            "value": "1h"
          },
          {
            "selected": false,
            "text": "6h",
            "value": "6h"
          },
          {
            "selected": false,
            "text": "1d",
            "value": "1d"
          }
        ],
        "query": "1s,5s,1m,5m,1h,6h,1d",
        "refresh": 2,
        "skipUrlSync": false,
        "type": "interval"
      },
      {
        "allFormat": "glob",
        "current": {
          "selected": false,
          "text": "f3e9f51efb39",
          "value": "f3e9f51efb39"
        },
        "datasource": {
          "type": "prometheus"
        },
        "definition": "",
        "hide": 0,
        "includeAll": false,
        "label": "Host",
        "multi": false,
        "multiFormat": "regex values",
        "name": "host",
        "options": [],
        "query": "label_values(mysql_up, instance)",
        "refresh": 2,
        "refresh_on_load": false,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query",
        "useTags": false
      }
    ]
  },
  "time": {
    "from": "now-1w",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "browser",
  "title": "Advisor - Tuning",
  "uid": "ssm-advisor-tuning",
  "version": 2,
  "weekStart": ""
}