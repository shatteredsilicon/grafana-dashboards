{
    "annotations": {
      "list": [
        {
          "builtIn": 1,
          "datasource": {
            "type": "datasource",
            "uid": "grafana"
          },
          "enable": true,
          "hide": false,
          "iconColor": "#e0752d",
          "limit": 100,
          "name": "SSM Annotations",
          "showIn": 0,
          "tags": [
            "ssm_annotation"
          ],
          "type": "tags"
        },
        {
          "builtIn": 1,
          "datasource": {
            "type": "datasource",
            "uid": "grafana"
          },
          "enable": true,
          "hide": true,
          "iconColor": "#6ed0e0",
          "limit": 100,
          "name": "Annotations & Alerts",
          "showIn": 0,
          "tags": [],
          "type": "dashboard"
        }
      ]
    },
    "description": "",
    "editable": true,
    "fiscalYearStartMonth": 0,
    "gnetId": 3300,
    "graphTooltip": 1,
    "id": null,
    "links": [
      {
        "icon": "dashboard",
        "includeVars": true,
        "keepTime": true,
        "tags": [
          "QAN"
        ],
        "targetBlank": false,
        "title": "Query Analytics",
        "type": "link",
        "url": "/graph/d/ssm-qan/ssm-query-analytics"
      },
      {
        "asDropdown": true,
        "includeVars": true,
        "keepTime": true,
        "tags": [
          "OS"
        ],
        "targetBlank": false,
        "title": "OS",
        "type": "dashboards"
      },
      {
        "asDropdown": true,
        "includeVars": true,
        "keepTime": true,
        "tags": [
          "MySQL"
        ],
        "targetBlank": false,
        "title": "MySQL",
        "type": "dashboards"
      },
      {
        "asDropdown": true,
        "includeVars": true,
        "keepTime": true,
        "tags": [
          "MongoDB"
        ],
        "targetBlank": false,
        "title": "MongoDB",
        "type": "dashboards"
      },
      {
        "asDropdown": true,
        "includeVars": true,
        "keepTime": true,
        "tags": [
          "PostgreSQL"
        ],
        "targetBlank": false,
        "title": "PostgreSQL",
        "type": "dashboards"
      },
      {
        "asDropdown": true,
        "includeVars": true,
        "keepTime": true,
        "tags": [
          "HA"
        ],
        "targetBlank": false,
        "title": "HA",
        "type": "dashboards"
      },
      {
        "asDropdown": true,
        "includeVars": true,
        "keepTime": true,
        "tags": [
          "Cloud"
        ],
        "targetBlank": false,
        "title": "Cloud",
        "type": "dashboards"
      },
      {
        "asDropdown": true,
        "includeVars": true,
        "keepTime": true,
        "tags": [
          "Insight"
        ],
        "targetBlank": false,
        "title": "Insight",
        "type": "dashboards"
      },
      {
        "asDropdown": true,
        "includeVars": true,
        "keepTime": true,
        "tags": [
          "SSM"
        ],
        "targetBlank": false,
        "title": "SSM",
        "type": "dashboards"
      }
    ],
    "liveNow": false,
    "panels": [
      {
        "datasource": {
          "type": "prometheus"
        },
        "gridPos": {
          "h": 2,
          "w": 24,
          "x": 0,
          "y": 0
        },
        "id": 30,
        "links": [],
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "<h1><i><font color=#5991A7><b><center>Data for </font><font color=#e68a00>$host</font> <font color=#5991A7> with</font> </font><font color=#e68a00>$interval</font> <font color=#5991A7>resolution</center></b></font></i></h1><br>",
          "mode": "html"
        },
        "pluginVersion": "9.5.7",
        "targets": [
          {
            "datasource": {
              "type": "prometheus"
            },
            "refId": "A"
          }
        ],
        "type": "text"
      },
      {
        "datasource": {
          "type": "prometheus"
        },
        "description": "Reports whether SSM Server can connect to the PostgreSQL instance.",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [
              {
                "options": {
                  "0": {
                    "text": "NO"
                  },
                  "1": {
                    "text": "YES"
                  }
                },
                "type": "value"
              },
              {
                "options": {
                  "match": "null",
                  "result": {
                    "text": "N/A"
                  }
                },
                "type": "special"
              }
            ],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#d44a3a",
                  "value": null
                },
                {
                  "color": "rgba(237, 129, 40, 0.89)",
                  "value": 0
                },
                {
                  "color": "#299c46",
                  "value": 1
                }
              ]
            },
            "unit": "none"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 0,
          "y": 2
        },
        "id": 63,
        "links": [],
        "maxDataPoints": 100,
        "options": {
          "colorMode": "value",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [
              "mean"
            ],
            "fields": "",
            "values": false
          },
          "textMode": "value"
        },
        "pluginVersion": "9.5.7",
        "targets": [
          {
            "datasource": {
              "type": "prometheus"
            },
            "expr": "pg_up{instance=~\"$host\",job=\"postgresql\"}",
            "format": "time_series",
            "interval": "$interval",
            "intervalFactor": 1,
            "legendFormat": "",
            "refId": "A"
          }
        ],
        "title": "Connected",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "prometheus"
        },
        "description": "The version of the PostgreSQL instance.",
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 2,
          "y": 2
        },
        "id": 65,
        "links": [],
        "options": {
          "code": {
            "language": "plaintext",
            "showLineNumbers": false,
            "showMiniMap": false
          },
          "content": "<h1 style=\"height: 100%; display: flex; align-items: center; justify-content: center;\"><b><font color=#e68a00><center>$version</center></font></b></h1>",
          "mode": "html"
        },
        "pluginVersion": "9.5.7",
        "targets": [
          {
            "datasource": {
              "type": "prometheus"
            },
            "refId": "A"
          }
        ],
        "title": "Version",
        "type": "text"
      },
      {
        "datasource": {
          "type": "prometheus"
        },
        "description": "The maximum number of client connections allowed.  Change this value with care as there are some memory resources that are allocated on a per-client basis, so setting max_connections higher will generally increase overall PostgreSQL memory usage.",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 0,
            "mappings": [
              {
                "options": {
                  "match": "null",
                  "result": {
                    "text": "N/A"
                  }
                },
                "type": "special"
              }
            ],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "short"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 4,
          "y": 2
        },
        "id": 86,
        "links": [
          {
            "targetBlank": true,
            "title": "GUC-MAX-CONNECTIONS",
            "url": "https://www.postgresql.org/docs/current/static/runtime-config-connection.html#GUC-MAX-CONNECTIONS"
          }
        ],
        "maxDataPoints": 100,
        "options": {
          "colorMode": "none",
          "graphMode": "none",
          "justifyMode": "auto",
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "textMode": "value"
        },
        "pluginVersion": "9.5.7",
        "targets": [
          {
            "datasource": {
              "type": "prometheus"
            },
            "expr": "max_over_time(pg_settings_max_connections{instance=~\"$host\",datname=~\"$db\",datname!~\"template.*|postgres\"}[$interval]) or\nmax_over_time(pg_settings_max_connections{instance=~\"$host\",datname=~\"$db\",datname!~\"template.*|postgres\"}[5m])",
            "format": "time_series",
            "interval": "$interval",
            "intervalFactor": 1,
            "legendFormat": "",
            "refId": "A"
          }
        ],
        "title": "Max Connections",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "prometheus"
        },
        "description": "Defines the amount of memory the database server uses for shared memory buffers.  Default is 128MB.  Guidance on tuning is 25% of RAM, but generally doesn't exceed 40%.",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 2,
            "mappings": [
              {
                "options": {
                  "match": "null",
                  "result": {
                    "text": "N/A"
                  }
                },
                "type": "special"
              }
            ],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "bytes"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 4,
          "x": 7,
          "y": 2
        },
        "id": 67,
        "links": [
          {
            "targetBlank": true,
            "title": "GUC-SHARED-BUFFERS",
            "url": "https://www.postgresql.org/docs/current/static/runtime-config-resource.html#GUC-SHARED-BUFFERS"
          }
        ],
        "maxDataPoints": 100,
        "options": {
          "colorMode": "none",
          "graphMode": "none",
          "justifyMode": "auto",
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "textMode": "value"
        },
        "pluginVersion": "9.5.7",
        "targets": [
          {
            "datasource": {
              "type": "prometheus"
            },
            "expr": "max_over_time(pg_settings_shared_buffers_bytes{instance=~\"$host\",datname=~\"$db\",datname!~\"template.*|postgres\"}[$interval]) or\nmax_over_time(pg_settings_shared_buffers_bytes{instance=~\"$host\",datname=~\"$db\",datname!~\"template.*|postgres\"}[5m]) ",
            "format": "time_series",
            "interval": "$interval",
            "intervalFactor": 1,
            "refId": "A"
          }
        ],
        "title": "Shared Buffers",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "prometheus"
        },
        "description": "The setting wal_buffers defines how much memory is used for caching the write-ahead log entries. Generally this value is small (3% of shared_buffers value), but it may need to be modified for heavily loaded servers.",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 2,
            "mappings": [
              {
                "options": {
                  "match": "null",
                  "result": {
                    "text": "N/A"
                  }
                },
                "type": "special"
              }
            ],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "bytes"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 4,
          "x": 11,
          "y": 2
        },
        "id": 68,
        "links": [
          {
            "title": "GUC-WAL-BUFFERS",
            "url": "https://www.postgresql.org/docs/current/static/runtime-config-wal.html#GUC-WAL-BUFFERS"
          },
          {
            "targetBlank": true,
            "title": "GUC-SHARED-BUFFERS",
            "url": "https://www.postgresql.org/docs/current/static/runtime-config-resource.html#GUC-SHARED-BUFFERS"
          }
        ],
        "maxDataPoints": 100,
        "options": {
          "colorMode": "none",
          "graphMode": "none",
          "justifyMode": "auto",
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "textMode": "value"
        },
        "pluginVersion": "9.5.7",
        "targets": [
          {
            "datasource": {
              "type": "prometheus"
            },
            "expr": "max_over_time(pg_settings_wal_buffers_bytes{instance=~\"$host\",datname=~\"$db\",datname!~\"template.*|postgres\"}[$interval]) or\nmax_over_time(pg_settings_wal_buffers_bytes{instance=~\"$host\",datname=~\"$db\",datname!~\"template.*|postgres\"}[5m])",
            "format": "time_series",
            "interval": "$interval",
            "intervalFactor": 1,
            "refId": "A"
          }
        ],
        "title": "Disk-Page Buffers",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "prometheus"
        },
        "description": "The parameter work_mem defines the amount of memory assigned for internal sort operations and hash tables before writing to temporary disk files.  The default is 4MB.",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 2,
            "mappings": [
              {
                "options": {
                  "match": "null",
                  "result": {
                    "text": "N/A"
                  }
                },
                "type": "special"
              }
            ],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "bytes"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 4,
          "x": 15,
          "y": 2
        },
        "id": 69,
        "links": [
          {
            "targetBlank": true,
            "title": "GUC-WORK-MEM",
            "url": "https://www.postgresql.org/docs/current/static/runtime-config-resource.html#GUC-WORK-MEM"
          }
        ],
        "maxDataPoints": 100,
        "options": {
          "colorMode": "none",
          "graphMode": "none",
          "justifyMode": "auto",
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "textMode": "value"
        },
        "pluginVersion": "9.5.7",
        "targets": [
          {
            "datasource": {
              "type": "prometheus"
            },
            "expr": "max_over_time(pg_settings_work_mem_bytes{instance=~\"$host\",datname=~\"$db\",datname!~\"template.*|postgres\"}[$interval]) or\nmax_over_time(pg_settings_work_mem_bytes{instance=~\"$host\",datname=~\"$db\",datname!~\"template.*|postgres\"}[5m])",
            "format": "time_series",
            "intervalFactor": 1,
            "legendFormat": "",
            "refId": "A"
          }
        ],
        "title": "Memory Size for each Sort",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "prometheus"
        },
        "description": "PostgreSQL's effective_cache_size variable tunes how much RAM you expect to be available for disk caching.  Generally adding Linux free+cached will give you a good idea.  This value is used by the query planner whether plans will fit in memory, and when defined too low, can lead to some plans rejecting certain indexes.",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 2,
            "mappings": [
              {
                "options": {
                  "match": "null",
                  "result": {
                    "text": "N/A"
                  }
                },
                "type": "special"
              }
            ],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "bytes"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 3,
          "x": 19,
          "y": 2
        },
        "id": 70,
        "links": [
          {
            "targetBlank": true,
            "title": "GUC-EFFECTIVE-CACHE-SIZE",
            "url": "https://www.postgresql.org/docs/current/static/runtime-config-query.html#GUC-EFFECTIVE-CACHE-SIZE"
          }
        ],
        "maxDataPoints": 100,
        "options": {
          "colorMode": "none",
          "graphMode": "none",
          "justifyMode": "auto",
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "textMode": "value"
        },
        "pluginVersion": "9.5.7",
        "targets": [
          {
            "datasource": {
              "type": "prometheus"
            },
            "expr": "max_over_time(pg_settings_effective_cache_size_bytes{instance=~\"$host\",datname=~\"$db\",datname!~\"template.*|postgres\"}[$interval]) or\nmax_over_time(pg_settings_effective_cache_size_bytes{instance=~\"$host\",datname=~\"$db\",datname!~\"template.*|postgres\"}[5m])",
            "format": "time_series",
            "interval": "$interval",
            "intervalFactor": 1,
            "legendFormat": "",
            "refId": "A"
          }
        ],
        "title": "Disk Cache Size",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "prometheus"
        },
        "description": "Whether autovacuum process is enabled or not.  Generally the solution is to vacuum more often, not less.",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [
              {
                "options": {
                  "0": {
                    "text": "NO"
                  },
                  "1": {
                    "text": "YES"
                  }
                },
                "type": "value"
              },
              {
                "options": {
                  "match": "null",
                  "result": {
                    "text": "N/A"
                  }
                },
                "type": "special"
              }
            ],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "#d44a3a",
                  "value": null
                },
                {
                  "color": "rgba(237, 129, 40, 0.89)",
                  "value": 0
                },
                {
                  "color": "#299c46",
                  "value": 1
                }
              ]
            },
            "unit": "none"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 3,
          "w": 2,
          "x": 22,
          "y": 2
        },
        "id": 85,
        "links": [
          {
            "targetBlank": true,
            "title": "AUTOVACUUM",
            "url": "https://www.postgresql.org/docs/current/static/routine-vacuuming.html#AUTOVACUUM"
          }
        ],
        "maxDataPoints": 100,
        "options": {
          "colorMode": "value",
          "graphMode": "area",
          "justifyMode": "auto",
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "textMode": "value"
        },
        "pluginVersion": "9.5.7",
        "targets": [
          {
            "datasource": {
              "type": "prometheus"
            },
            "expr": "max_over_time(pg_settings_autovacuum{instance=~\"$host\",datname=~\"$db\",datname!~\"template.*|postgres\"}[$interval]) or\nmax_over_time(pg_settings_autovacuum{instance=~\"$host\",datname=~\"$db\",datname!~\"template.*|postgres\"}[5m])",
            "format": "time_series",
            "interval": "$interval",
            "intervalFactor": 1,
            "refId": "A"
          }
        ],
        "title": "Autovacuum",
        "type": "stat"
      },
      {
        "collapsed": false,
        "datasource": {
          "type": "prometheus"
        },
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 4
        },
        "id": 74,
        "panels": [],
        "targets": [
          {
            "datasource": {
              "type": "prometheus"
            },
            "refId": "A"
          }
        ],
        "title": "Connections",
        "type": "row"
      },
      {
        "aliasColors": {
          "Total ": "#bf1b00"
        },
        "bars": false,
        "dashLength": 10,
        "dashes": false,
        "datasource": {
          "type": "prometheus"
        },
        "decimals": 0,
        "fill": 2,
        "fillGradient": 0,
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 0,
          "y": 5
        },
        "hiddenSeries": false,
        "id": 23,
        "legend": {
          "alignAsTable": true,
          "avg": true,
          "current": false,
          "hideZero": false,
          "max": true,
          "min": true,
          "show": true,
          "sort": "avg",
          "sortDesc": true,
          "total": false,
          "values": true
        },
        "lines": true,
        "linewidth": 2,
        "links": [],
        "nullPointMode": "null",
        "options": {
          "alertThreshold": true
        },
        "percentage": false,
        "pluginVersion": "9.5.7",
        "pointradius": 5,
        "points": false,
        "renderer": "flot",
        "seriesOverrides": [
          {
            "alias": "Total",
            "color": "#bf1b00",
            "fill": 0
          }
        ],
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
          {
            "datasource": {
              "type": "prometheus"
            },
            "expr": "sum(max_over_time(pg_stat_activity_count{instance=~\"$host\",datname=~\"$db\"}[$interval]) or\nmax_over_time(pg_stat_activity_count{instance=~\"$host\",datname=~\"$db\"}[5m])) by (state)",
            "format": "time_series",
            "hide": false,
            "interval": "$interval",
            "intervalFactor": 1,
            "legendFormat": "{{state}}",
            "refId": "A"
          },
          {
            "datasource": {
              "type": "prometheus"
            },
            "expr": "sum(max_over_time(pg_stat_activity_count{instance=~\"$host\",datname=~\"$db\"}[$interval]) or\nmax_over_time(pg_stat_activity_count{instance=~\"$host\",datname=~\"$db\"}[5m]))",
            "format": "time_series",
            "hide": false,
            "interval": "$interval",
            "intervalFactor": 1,
            "legendFormat": "Total",
            "metric": "pg",
            "refId": "C",
            "step": 2
          }
        ],
        "thresholds": [],
        "timeRegions": [],
        "title": "PostgreSQL Connections",
        "tooltip": {
          "shared": true,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "mode": "time",
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "decimals": 0,
            "format": "short",
            "logBase": 1,
            "min": "0",
            "show": true
          },
          {
            "format": "short",
            "logBase": 1,
            "show": false
          }
        ],
        "yaxis": {
          "align": false
        }
      },
      {
        "aliasColors": {
          "Maximum commections": "#bf1b00"
        },
        "bars": false,
        "dashLength": 10,
        "dashes": false,
        "datasource": {
          "type": "prometheus"
        },
        "decimals": 0,
        "fill": 2,
        "fillGradient": 0,
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 12,
          "y": 5
        },
        "hiddenSeries": false,
        "id": 34,
        "legend": {
          "alignAsTable": true,
          "avg": true,
          "current": false,
          "max": true,
          "min": true,
          "show": true,
          "sort": "avg",
          "sortDesc": true,
          "total": false,
          "values": true
        },
        "lines": true,
        "linewidth": 2,
        "links": [],
        "nullPointMode": "null",
        "options": {
          "alertThreshold": true
        },
        "percentage": false,
        "pluginVersion": "9.5.7",
        "pointradius": 5,
        "points": false,
        "renderer": "flot",
        "seriesOverrides": [
          {
            "alias": "Maximum connections",
            "color": "#bf1b00",
            "fill": 0,
            "stack": false
          }
        ],
        "spaceLength": 10,
        "stack": true,
        "steppedLine": false,
        "targets": [
          {
            "datasource": {
              "type": "prometheus"
            },
            "expr": "max_over_time(pg_stat_database_numbackends{datname=~\"$db\",instance=~\"$host\"}[$interval]) or \nmax_over_time(pg_stat_database_numbackends{datname=~\"$db\",instance=~\"$host\"}[5m])",
            "format": "time_series",
            "hide": true,
            "interval": "$interval",
            "intervalFactor": 1,
            "legendFormat": "{{datname}}",
            "refId": "A"
          },
          {
            "datasource": {
              "type": "prometheus"
            },
            "expr": "max_over_time(pg_settings_max_connections{instance=~\"$host\"}[$interval]) or \nmax_over_time(pg_settings_max_connections{instance=~\"$host\"}[5m])",
            "format": "time_series",
            "hide": false,
            "interval": "$interval",
            "intervalFactor": 1,
            "legendFormat": "Maximum connections",
            "refId": "B"
          },
          {
            "datasource": {
              "type": "prometheus"
            },
            "expr": "max_over_time(pg_stat_activity_count{instance=~\"$host\",datname=~\"$db\",state='active'}[$interval]) or\nmax_over_time(pg_stat_activity_count{instance=~\"$host\",datname=~\"$db\",state='active'}[5m])",
            "format": "time_series",
            "hide": false,
            "interval": "$interval",
            "intervalFactor": 1,
            "legendFormat": "{{datname}}",
            "refId": "C"
          }
        ],
        "thresholds": [],
        "timeRegions": [],
        "title": "Active Connections",
        "tooltip": {
          "shared": true,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "mode": "time",
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "decimals": 0,
            "format": "short",
            "logBase": 2,
            "show": true
          },
          {
            "format": "short",
            "logBase": 1,
            "show": false
          }
        ],
        "yaxis": {
          "align": false
        }
      },
      {
        "collapsed": true,
        "datasource": {
          "type": "prometheus"
        },
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 13
        },
        "id": 76,
        "panels": [
          {
            "aliasColors": {},
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": {
              "type": "prometheus"
            },
            "fill": 2,
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 0,
              "y": 6
            },
            "id": 36,
            "legend": {
              "alignAsTable": true,
              "avg": true,
              "current": false,
              "max": true,
              "min": true,
              "show": true,
              "sort": "avg",
              "sortDesc": true,
              "total": false,
              "values": true
            },
            "lines": true,
            "linewidth": 2,
            "links": [],
            "nullPointMode": "null",
            "percentage": false,
            "pointradius": 5,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
              {
                "datasource": {
                  "type": "prometheus"
                },
                "expr": "\
sum( \n\
  rate(pg_stat_database_tup_fetched{datname=~\"$db\",instance=~\"$host\"}[$interval]) \n\
  or \n\
  rate(pg_stat_database_tup_fetched_total{datname=~\"$db\",instance=~\"$host\"}[$interval]) \n\
) \n\
or \n\
sum( \n\
  irate(pg_stat_database_tup_fetched{datname=~\"$db\",instance=~\"$host\"}[5m]) \n\
  or \n\
  irate(pg_stat_database_tup_fetched_total{datname=~\"$db\",instance=~\"$host\"}[5m]) \n\
) \n\
",
                "format": "time_series",
                "interval": "$interval",
                "intervalFactor": 1,
                "legendFormat": "Fetched",
                "refId": "A"
              },
              {
                "datasource": {
                  "type": "prometheus"
                },
                "expr": "\
sum( \n\
  rate(pg_stat_database_tup_returned{datname=~\"$db\",instance=~\"$host\"}[$interval]) \n\
  or \n\
  rate(pg_stat_database_tup_returned_total{datname=~\"$db\",instance=~\"$host\"}[$interval]) \n\
) \n\
or \n\
sum( \n\
  irate(pg_stat_database_tup_returned{datname=~\"$db\",instance=~\"$host\"}[5m]) \n\
  or \n\
  irate(pg_stat_database_tup_returned_total{datname=~\"$db\",instance=~\"$host\"}[5m]) \n\
) \n\
",
                "format": "time_series",
                "interval": "$interval",
                "intervalFactor": 1,
                "legendFormat": "Returned",
                "refId": "B"
              },
              {
                "datasource": {
                  "type": "prometheus"
                },
                "expr": "\
sum( \n\
  rate(pg_stat_database_tup_inserted{datname=~\"$db\",instance=~\"$host\"}[$interval]) \n\
  or \n\
  rate(pg_stat_database_tup_inserted_total{datname=~\"$db\",instance=~\"$host\"}[$interval]) \n\
) \n\
or \n\
sum( \n\
  irate(pg_stat_database_tup_inserted{datname=~\"$db\",instance=~\"$host\"}[5m]) \n\
  or \n\
  irate(pg_stat_database_tup_inserted_total{datname=~\"$db\",instance=~\"$host\"}[5m]) \n\
) \n\
",
                "format": "time_series",
                "interval": "$interval",
                "intervalFactor": 1,
                "legendFormat": "Inserted",
                "refId": "C"
              },
              {
                "datasource": {
                  "type": "prometheus"
                },
                "expr": "\
sum( \n\
  rate(pg_stat_database_tup_updated{datname=~\"$db\",instance=~\"$host\"}[$interval]) \n\
  or \n\
  rate(pg_stat_database_tup_updated_total{datname=~\"$db\",instance=~\"$host\"}[$interval]) \n\
) \n\
or \n\
sum( \n\
  irate(pg_stat_database_tup_updated{datname=~\"$db\",instance=~\"$host\"}[5m]) \n\
  or \n\
  irate(pg_stat_database_tup_updated_total{datname=~\"$db\",instance=~\"$host\"}[5m]) \n\
) \n\
",
                "format": "time_series",
                "interval": "$interval",
                "intervalFactor": 1,
                "legendFormat": "Updated",
                "refId": "D"
              },
              {
                "datasource": {
                  "type": "prometheus"
                },
                "expr": "\
sum( \n\
  rate(pg_stat_database_tup_deleted{datname=~\"$db\",instance=~\"$host\"}[$interval]) \n\
  or \n\
  rate(pg_stat_database_tup_deleted_total{datname=~\"$db\",instance=~\"$host\"}[$interval]) \n\
) \n\
or \n\
sum( \n\
  irate(pg_stat_database_tup_deleted{datname=~\"$db\",instance=~\"$host\"}[5m]) \n\
  or \n\
  irate(pg_stat_database_tup_deleted_total{datname=~\"$db\",instance=~\"$host\"}[5m]) \n\
) \n\
",
                "format": "time_series",
                "interval": "$interval",
                "intervalFactor": 1,
                "legendFormat": "Deleted",
                "refId": "E"
              }
            ],
            "thresholds": [],
            "timeRegions": [],
            "title": "Tuples",
            "tooltip": {
              "shared": true,
              "sort": 0,
              "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
              "mode": "time",
              "show": true,
              "values": []
            },
            "yaxes": [
              {
                "format": "short",
                "logBase": 1,
                "min": "0",
                "show": true
              },
              {
                "format": "short",
                "logBase": 1,
                "show": false
              }
            ],
            "yaxis": {
              "align": false
            }
          },
          {
            "aliasColors": {},
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": {
              "type": "prometheus"
            },
            "decimals": 2,
            "fill": 2,
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 12,
              "y": 6
            },
            "id": 24,
            "legend": {
              "alignAsTable": true,
              "avg": true,
              "current": false,
              "max": true,
              "min": true,
              "show": true,
              "sort": "avg",
              "sortDesc": true,
              "total": false,
              "values": true
            },
            "lines": true,
            "linewidth": 2,
            "links": [],
            "nullPointMode": "null",
            "percentage": false,
            "pointradius": 5,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
              {
                "datasource": {
                  "type": "prometheus"
                },
                "expr": "\
sum( \n\
  rate(pg_stat_database_tup_returned{instance=~\"$host\"}[$interval]) \n\
  or \n\
  rate(pg_stat_database_tup_returned_total{instance=~\"$host\"}[$interval]) \n\
) \n\
or \n\
sum( \n\
  irate(pg_stat_database_tup_returned{instance=~\"$host\"}[5m]) \n\
  or \n\
  irate(pg_stat_database_tup_returned_total{instance=~\"$host\"}[5m]) \n\
) \n\
",
                "format": "time_series",
                "hide": false,
                "interval": "$interval",
                "intervalFactor": 1,
                "legendFormat": "Rows returned by queries",
                "refId": "A",
                "step": 2
              },
              {
                "datasource": {
                  "type": "prometheus"
                },
                "expr": "\
sum( \n\
  rate(pg_stat_database_tup_fetched{instance=~\"$host\"}[$interval]) \n\
  or \n\
  rate(pg_stat_database_tup_fetched_total{instance=~\"$host\"}[$interval]) \n\
) \n\
or \n\
sum( \n\
  irate(pg_stat_database_tup_fetched{instance=~\"$host\"}[5m]) \n\
  or \n\
  irate(pg_stat_database_tup_fetched_total{instance=~\"$host\"}[5m]) \n\
) \n\
",
                "format": "time_series",
                "hide": false,
                "interval": "$interval",
                "intervalFactor": 1,
                "legendFormat": "Rows fetched by queries",
                "refId": "B",
                "step": 2
              }
            ],
            "thresholds": [],
            "timeRegions": [],
            "title": "Read Tuple Activity",
            "tooltip": {
              "shared": true,
              "sort": 0,
              "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
              "mode": "time",
              "show": true,
              "values": []
            },
            "yaxes": [
              {
                "format": "ops",
                "logBase": 1,
                "min": "0",
                "show": true
              },
              {
                "format": "short",
                "logBase": 1,
                "show": false
              }
            ],
            "yaxis": {
              "align": false
            }
          },
          {
            "aliasColors": {},
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": {
              "type": "prometheus"
            },
            "decimals": 2,
            "fill": 2,
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 0,
              "y": 14
            },
            "id": 25,
            "legend": {
              "alignAsTable": true,
              "avg": true,
              "current": false,
              "max": true,
              "min": true,
              "show": true,
              "sort": "avg",
              "sortDesc": true,
              "total": false,
              "values": true
            },
            "lines": true,
            "linewidth": 2,
            "links": [],
            "nullPointMode": "null",
            "percentage": false,
            "pointradius": 5,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
              {
                "datasource": {
                  "type": "prometheus"
                },
                "expr": "\
sum( \n\
  rate(pg_stat_database_tup_inserted{instance=~\"$host\"}[1m]) \n\
  or \n\
  rate(pg_stat_database_tup_inserted_total{instance=~\"$host\"}[1m]) \n\
) \n\
or \n\
sum( \n\
  irate(pg_stat_database_tup_inserted{instance=~\"$host\"}[5m]) \n\
  or \n\
  irate(pg_stat_database_tup_inserted_total{instance=~\"$host\"}[5m]) \n\
) \n\
",
                "format": "time_series",
                "interval": "$interval",
                "intervalFactor": 1,
                "legendFormat": "Rows inserted by queries",
                "metric": "pg_stat_database_tup",
                "refId": "C",
                "step": 2
              },
              {
                "datasource": {
                  "type": "prometheus"
                },
                "expr": "\
sum( \n\
  rate(pg_stat_database_tup_updated{instance=~\"$host\"}[$interval]) \n\
  or \n\
  rate(pg_stat_database_tup_updated_total{instance=~\"$host\"}[$interval]) \n\
) \n\
or \n\
sum( \n\
  irate(pg_stat_database_tup_updated{instance=~\"$host\"}[5m]) \n\
  or \n\
  irate(pg_stat_database_tup_updated_total{instance=~\"$host\"}[5m]) \n\
) \n\
",
                "format": "time_series",
                "interval": "$interval",
                "intervalFactor": 1,
                "legendFormat": "Rows updated by queries",
                "metric": "pg_stat_database_tup",
                "refId": "D",
                "step": 2
              },
              {
                "datasource": {
                  "type": "prometheus"
                },
                "expr": "\
sum( \n\
  rate(pg_stat_database_tup_deleted{instance=~\"$host\"}[$interval]) \n\
  or \n\
  rate(pg_stat_database_tup_deleted_total{instance=~\"$host\"}[$interval]) \n\
) \n\
or \n\
sum( \n\
  irate(pg_stat_database_tup_deleted{instance=~\"$host\"}[5m]) \n\
  or \n\
  irate(pg_stat_database_tup_deleted_total{instance=~\"$host\"}[5m]) \n\
) \n\
",
                "format": "time_series",
                "interval": "$interval",
                "intervalFactor": 1,
                "legendFormat": "Rows deleted by queries",
                "metric": "pg_stat_database_tup",
                "refId": "E",
                "step": 2
              }
            ],
            "thresholds": [],
            "timeRegions": [],
            "title": "Tuples Changed per $interval",
            "tooltip": {
              "shared": true,
              "sort": 0,
              "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
              "mode": "time",
              "show": true,
              "values": []
            },
            "yaxes": [
              {
                "format": "ops",
                "logBase": 1,
                "min": "0",
                "show": true
              },
              {
                "format": "short",
                "logBase": 1,
                "show": false
              }
            ],
            "yaxis": {
              "align": false
            }
          }
        ],
        "targets": [
          {
            "datasource": {
              "type": "prometheus"
            },
            "refId": "A"
          }
        ],
        "title": "Tuples",
        "type": "row"
      },
      {
        "collapsed": true,
        "datasource": {
          "type": "prometheus"
        },
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 14
        },
        "id": 78,
        "panels": [
          {
            "aliasColors": {},
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": {
              "type": "prometheus"
            },
            "decimals": 2,
            "fill": 2,
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 0,
              "y": 7
            },
            "id": 26,
            "legend": {
              "alignAsTable": true,
              "avg": true,
              "current": false,
              "max": true,
              "min": true,
              "show": true,
              "sort": "avg",
              "sortDesc": true,
              "total": false,
              "values": true
            },
            "lines": true,
            "linewidth": 2,
            "links": [],
            "nullPointMode": "null",
            "percentage": false,
            "pointradius": 5,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
              {
                "datasource": {
                  "type": "prometheus"
                },
                "expr": "\
sum( \n\
  rate(pg_stat_database_xact_commit{instance=~\"$host\"}[$interval]) \n\
  or \n\
  rate(pg_stat_database_xact_commit_total{instance=~\"$host\"}[$interval]) \n\
) \n\
or \n\
sum( \n\
  irate(pg_stat_database_xact_commit{instance=~\"$host\"}[5m]) \n\
  or \n\
  irate(pg_stat_database_xact_commit_total{instance=~\"$host\"}[5m]) \n\
) \n\
",
                "format": "time_series",
                "interval": "$interval",
                "intervalFactor": 1,
                "legendFormat": "Commits",
                "metric": "pg_stat_database_xact_commit or pg_stat_database_xact_commit_total",
                "refId": "A",
                "step": 2
              },
              {
                "datasource": {
                  "type": "prometheus"
                },
                "expr": "\
sum( \n\
  rate(pg_stat_database_xact_rollback{instance=~\"$host\"}[$interval]) \n\
  or \n\
  rate(pg_stat_database_xact_rollback_total{instance=~\"$host\"}[$interval]) \n\
) \n\
or \n\
sum( \n\
  irate(pg_stat_database_xact_rollback{instance=~\"$host\"}[5m]) \n\
  or \n\
  irate(pg_stat_database_xact_rollback_total{instance=~\"$host\"}[5m]) \n\
) \n\
",
                "format": "time_series",
                "interval": "$interval",
                "intervalFactor": 1,
                "legendFormat": "Rollbacks",
                "metric": "pg_stat_database_xact_commit or pg_stat_database_xact_commit_total",
                "refId": "B",
                "step": 2
              }
            ],
            "thresholds": [],
            "timeRegions": [],
            "title": "Transactions",
            "tooltip": {
              "shared": true,
              "sort": 0,
              "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
              "mode": "time",
              "show": true,
              "values": []
            },
            "yaxes": [
              {
                "format": "ops",
                "logBase": 1,
                "show": true
              },
              {
                "format": "short",
                "logBase": 1,
                "show": false
              }
            ],
            "yaxis": {
              "align": false
            }
          },
          {
            "aliasColors": {},
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": {
              "type": "prometheus"
            },
            "decimals": 2,
            "fill": 2,
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 12,
              "y": 7
            },
            "id": 18,
            "legend": {
              "alignAsTable": true,
              "avg": true,
              "current": false,
              "max": true,
              "min": true,
              "show": true,
              "sort": "avg",
              "sortDesc": true,
              "total": false,
              "values": true
            },
            "lines": true,
            "linewidth": 2,
            "links": [],
            "nullPointMode": "null",
            "percentage": false,
            "pointradius": 5,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
              {
                "datasource": {
                  "type": "prometheus"
                },
                "expr": "max_over_time(pg_stat_activity_max_tx_duration{instance='$host'}[$interval]) or\nmax_over_time(pg_stat_activity_max_tx_duration{instance='$host'}[5m])",
                "format": "time_series",
                "interval": "$interval",
                "intervalFactor": 1,
                "legendFormat": "{{state}}",
                "metric": "pg_stat_activity_max_tx_duration",
                "refId": "A",
                "step": 2
              }
            ],
            "thresholds": [],
            "timeRegions": [],
            "title": "Duration of Transactions",
            "tooltip": {
              "shared": true,
              "sort": 0,
              "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
              "mode": "time",
              "show": true,
              "values": []
            },
            "yaxes": [
              {
                "format": "s",
                "logBase": 1,
                "min": "0",
                "show": true
              },
              {
                "format": "s",
                "logBase": 1,
                "show": false
              }
            ],
            "yaxis": {
              "align": false
            }
          }
        ],
        "targets": [
          {
            "datasource": {
              "type": "prometheus"
            },
            "refId": "A"
          }
        ],
        "title": "Transactions",
        "type": "row"
      },
      {
        "collapsed": true,
        "datasource": {
          "type": "prometheus"
        },
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 15
        },
        "id": 80,
        "panels": [
          {
            "aliasColors": {},
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": {
              "type": "prometheus"
            },
            "decimals": 0,
            "fill": 1,
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 0,
              "y": 8
            },
            "id": 48,
            "legend": {
              "alignAsTable": true,
              "avg": true,
              "current": false,
              "max": true,
              "min": true,
              "show": true,
              "sort": "avg",
              "sortDesc": true,
              "total": false,
              "values": true
            },
            "lines": true,
            "linewidth": 1,
            "links": [],
            "nullPointMode": "null",
            "percentage": false,
            "pointradius": 5,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": true,
            "steppedLine": false,
            "targets": [
              {
                "datasource": {
                  "type": "prometheus"
                },
                "expr": "max_over_time(pg_stat_database_temp_files{instance=~\"$host\",datname!~\"template.*\"}[$interval]) or \nmax_over_time(pg_stat_database_temp_files{instance=~\"$host\",datname!~\"template.*\"}[5m])",
                "format": "time_series",
                "interval": "$interval",
                "intervalFactor": 1,
                "legendFormat": "{{datname}}",
                "refId": "A"
              }
            ],
            "thresholds": [],
            "timeRegions": [],
            "title": "Number of Temp Files",
            "tooltip": {
              "shared": true,
              "sort": 0,
              "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
              "mode": "time",
              "show": true,
              "values": []
            },
            "yaxes": [
              {
                "decimals": 0,
                "format": "short",
                "logBase": 1,
                "min": "0",
                "show": true
              },
              {
                "format": "short",
                "logBase": 1,
                "show": false
              }
            ],
            "yaxis": {
              "align": false
            }
          },
          {
            "aliasColors": {},
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": {
              "type": "prometheus"
            },
            "decimals": 2,
            "fill": 1,
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 12,
              "y": 8
            },
            "id": 49,
            "legend": {
              "alignAsTable": true,
              "avg": true,
              "current": false,
              "max": true,
              "min": true,
              "show": true,
              "sort": "avg",
              "sortDesc": true,
              "total": false,
              "values": true
            },
            "lines": true,
            "linewidth": 1,
            "links": [],
            "nullPointMode": "null",
            "percentage": false,
            "pointradius": 5,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [
              {
                "alias": "increase *",
                "bars": true,
                "lines": false
              }
            ],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
              {
                "datasource": {
                  "type": "prometheus"
                },
                "expr": "\
max_over_time(pg_stat_database_temp_bytes{instance=~\"$host\",datname!~\"template.*\"}[$interval]) \n\
or \n\
max_over_time(pg_stat_database_temp_bytes_total{instance=~\"$host\",datname!~\"template.*\"}[$interval]) \n\
or \n\
max_over_time(pg_stat_database_temp_bytes{instance=~\"$host\",datname!~\"template.*\"}[5m]) \n\
or \n\
max_over_time(pg_stat_database_temp_bytes_total{instance=~\"$host\",datname!~\"template.*\"}[5m]) \n\
",
                "format": "time_series",
                "hide": false,
                "interval": "$interval",
                "intervalFactor": 1,
                "legendFormat": "{{datname}}",
                "refId": "A"
              },
              {
                "datasource": {
                  "type": "prometheus"
                },
                "expr": "\
rate(pg_stat_database_temp_bytes{instance=~\"$host\",datname!~\"template.*\"}[$interval]) \n\
or \n\
rate(pg_stat_database_temp_bytes_total{instance=~\"$host\",datname!~\"template.*\"}[$interval]) \n\
or \n\
irate(pg_stat_database_temp_bytes{instance=~\"$host\",datname!~\"template.*\"}[5m]) \n\
or \n\
irate(pg_stat_database_temp_bytes_total{instance=~\"$host\",datname!~\"template.*\"}[5m]) \n\
",
                "format": "time_series",
                "hide": true,
                "interval": "$interval",
                "intervalFactor": 1,
                "legendFormat": "increase {{datname}}",
                "refId": "B"
              }
            ],
            "thresholds": [],
            "timeRegions": [],
            "title": "Size of Temp Files",
            "tooltip": {
              "shared": true,
              "sort": 0,
              "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
              "mode": "time",
              "show": true,
              "values": []
            },
            "yaxes": [
              {
                "decimals": 2,
                "format": "bytes",
                "logBase": 1,
                "min": "0",
                "show": true
              },
              {
                "format": "short",
                "logBase": 1,
                "show": false
              }
            ],
            "yaxis": {
              "align": false
            }
          }
        ],
        "targets": [
          {
            "datasource": {
              "type": "prometheus"
            },
            "refId": "A"
          }
        ],
        "title": "Temp Files",
        "type": "row"
      },
      {
        "collapsed": false,
        "datasource": {
          "type": "prometheus"
        },
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 16
        },
        "id": 82,
        "panels": [],
        "targets": [
          {
            "datasource": {
              "type": "prometheus"
            },
            "refId": "A"
          }
        ],
        "title": "Conflicts & Locks",
        "type": "row"
      },
      {
        "aliasColors": {},
        "bars": false,
        "dashLength": 10,
        "dashes": false,
        "datasource": {
          "type": "prometheus"
        },
        "decimals": 2,
        "editable": true,
        "error": false,
        "fill": 1,
        "grid": {},
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 0,
          "y": 17
        },
        "id": 3,
        "legend": {
          "alignAsTable": true,
          "avg": true,
          "current": false,
          "max": true,
          "min": true,
          "show": true,
          "sort": "avg",
          "sortDesc": true,
          "total": false,
          "values": true
        },
        "lines": true,
        "linewidth": 2,
        "links": [],
        "nullPointMode": "connected",
        "percentage": false,
        "pointradius": 5,
        "points": false,
        "renderer": "flot",
        "seriesOverrides": [],
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
          {
            "alias": "conflicts",
            "datasource": {
              "type": "prometheus"
            },
            "dsType": "prometheus",
            "expr": "\
sum( \n\
  rate(pg_stat_database_deadlocks{datname=~\"$db\",instance=~\"$host\"}[$interval]) \n\
  or \n\
  rate(pg_stat_database_deadlocks_total{datname=~\"$db\",instance=~\"$host\"}[$interval]) \n\
) \n\
or \n\
sum( \n\
  irate(pg_stat_database_deadlocks{datname=~\"$db\",instance=~\"$host\"}[5m]) \n\
  or \n\
  irate(pg_stat_database_deadlocks_total{datname=~\"$db\",instance=~\"$host\"}[5m]) \n\
) \n\
",
            "format": "time_series",
            "groupBy": [
              {
                "params": [
                  "$interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "interval": "$interval",
            "intervalFactor": 1,
            "legendFormat": "Deadlocks",
            "measurement": "postgresql",
            "policy": "default",
            "refId": "A",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "conflicts"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                },
                {
                  "params": [],
                  "type": "difference"
                }
              ]
            ],
            "step": 2,
            "tags": [
              {
                "key": "host",
                "operator": "=~",
                "value": "/^$host$/"
              }
            ]
          },
          {
            "alias": "deadlocks",
            "datasource": {
              "type": "prometheus"
            },
            "dsType": "prometheus",
            "expr": "\
sum( \n\
  rate(pg_stat_database_conflicts{datname=~\"$db\",instance=~\"$host\"}[$interval]) \n\
  or \n\
  rate(pg_stat_database_conflicts_total{datname=~\"$db\",instance=~\"$host\"}[$interval]) \n\
) \n\
or \n\
sum( \n\
  irate(pg_stat_database_conflicts{datname=~\"$db\",instance=~\"$host\"}[5m]) \n\
  or \n\
  irate(pg_stat_database_conflicts_total{datname=~\"$db\",instance=~\"$host\"}[5m]) \n\
) \n\
",
            "format": "time_series",
            "groupBy": [
              {
                "params": [
                  "$interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "interval": "$interval",
            "intervalFactor": 1,
            "legendFormat": "Conflicts",
            "measurement": "postgresql",
            "policy": "default",
            "refId": "B",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "deadlocks"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                },
                {
                  "params": [],
                  "type": "difference"
                }
              ]
            ],
            "step": 2,
            "tags": [
              {
                "key": "host",
                "operator": "=~",
                "value": "/^$host$/"
              }
            ]
          }
        ],
        "thresholds": [],
        "timeRegions": [],
        "title": "Conflicts/Deadlocks",
        "tooltip": {
          "msResolution": false,
          "shared": true,
          "sort": 0,
          "value_type": "cumulative"
        },
        "type": "graph",
        "xaxis": {
          "mode": "time",
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "format": "ops",
            "logBase": 1,
            "min": 0,
            "show": true
          },
          {
            "format": "short",
            "logBase": 1,
            "show": false
          }
        ],
        "yaxis": {
          "align": false
        }
      },
      {
        "aliasColors": {},
        "bars": false,
        "dashLength": 10,
        "dashes": false,
        "datasource": {
          "type": "prometheus"
        },
        "decimals": 0,
        "editable": true,
        "error": false,
        "fill": 2,
        "grid": {},
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 12,
          "y": 17
        },
        "id": 61,
        "legend": {
          "alignAsTable": true,
          "avg": true,
          "current": false,
          "max": true,
          "min": true,
          "show": true,
          "sort": "avg",
          "sortDesc": true,
          "total": false,
          "values": true
        },
        "lines": true,
        "linewidth": 2,
        "links": [],
        "nullPointMode": "connected",
        "percentage": false,
        "pointradius": 5,
        "points": false,
        "renderer": "flot",
        "seriesOverrides": [],
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
          {
            "alias": "conflicts",
            "datasource": {
              "type": "prometheus"
            },
            "dsType": "prometheus",
            "expr": "max_over_time(pg_locks_count{datname=~\"$db\",instance=~\"$host\",datname!~\"template.*\"}[$interval]) or\nmax_over_time(pg_locks_count{datname=~\"$db\",instance=~\"$host\",datname!~\"template.*\"}[5m])",
            "format": "time_series",
            "groupBy": [
              {
                "params": [
                  "$interval"
                ],
                "type": "time"
              },
              {
                "params": [
                  "null"
                ],
                "type": "fill"
              }
            ],
            "interval": "$interval",
            "intervalFactor": 1,
            "legendFormat": "{{mode}} - {{datname}}",
            "measurement": "postgresql",
            "policy": "default",
            "refId": "A",
            "resultFormat": "time_series",
            "select": [
              [
                {
                  "params": [
                    "conflicts"
                  ],
                  "type": "field"
                },
                {
                  "params": [],
                  "type": "mean"
                },
                {
                  "params": [],
                  "type": "difference"
                }
              ]
            ],
            "step": 2,
            "tags": [
              {
                "key": "host",
                "operator": "=~",
                "value": "/^$host$/"
              }
            ]
          }
        ],
        "thresholds": [],
        "timeRegions": [],
        "title": "Number of Locks",
        "tooltip": {
          "msResolution": false,
          "shared": true,
          "sort": 0,
          "value_type": "cumulative"
        },
        "type": "graph",
        "xaxis": {
          "mode": "time",
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "decimals": 0,
            "format": "short",
            "logBase": 1,
            "min": "0",
            "show": true
          },
          {
            "format": "short",
            "logBase": 1,
            "show": false
          }
        ],
        "yaxis": {
          "align": false
        }
      },
      {
        "collapsed": true,
        "datasource": {
          "type": "prometheus"
        },
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 25
        },
        "id": 84,
        "panels": [
          {
            "aliasColors": {},
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": {
              "type": "prometheus"
            },
            "decimals": 2,
            "fill": 2,
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 0,
              "y": 10
            },
            "id": 50,
            "legend": {
              "alignAsTable": true,
              "avg": true,
              "current": false,
              "max": true,
              "min": true,
              "show": true,
              "sort": "avg",
              "sortDesc": true,
              "total": false,
              "values": true
            },
            "lines": true,
            "linewidth": 2,
            "links": [],
            "nullPointMode": "null",
            "percentage": false,
            "pointradius": 5,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [
              {
                "alias": "/Write */",
                "yaxis": 2
              }
            ],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
              {
                "datasource": {
                  "type": "prometheus"
                },
                "expr": "\
rate(pg_stat_database_blk_read_time{datname=~\"$db\",instance=~\"$host\",datname!~\"template.*|postgres\"}[$interval]) \n\
or \n\
rate(pg_stat_database_blk_read_time_total{datname=~\"$db\",instance=~\"$host\",datname!~\"template.*|postgres\"}[$interval]) \n\
or \n\
irate(pg_stat_database_blk_read_time{datname=~\"$db\",instance=~\"$host\",datname!~\"template.*|postgres\"}[5m]) \n\
or \n\
irate(pg_stat_database_blk_read_time_total{datname=~\"$db\",instance=~\"$host\",datname!~\"template.*|postgres\"}[5m]) \n\
",
                "format": "time_series",
                "interval": "$interval",
                "intervalFactor": 1,
                "legendFormat": "Read {{datname}}",
                "refId": "A"
              },
              {
                "datasource": {
                  "type": "prometheus"
                },
                "expr": "\
rate(pg_stat_database_blk_write_time{datname=~\"$db\",instance=~\"$host\",datname!~\"template.*|postgres\"}[$interval]) \n\
or \n\
rate(pg_stat_database_blk_write_time_total{datname=~\"$db\",instance=~\"$host\",datname!~\"template.*|postgres\"}[$interval]) \n\
or \n\
irate(pg_stat_database_blk_write_time{datname=~\"$db\",instance=~\"$host\",datname!~\"template.*|postgres\"}[5m]) \n\
or \n\
irate(pg_stat_database_blk_write_time_total{datname=~\"$db\",instance=~\"$host\",datname!~\"template.*|postgres\"}[5m]) \n\
",
                "format": "time_series",
                "interval": "$interval",
                "intervalFactor": 1,
                "legendFormat": "Write {{datname}}",
                "refId": "B"
              }
            ],
            "thresholds": [],
            "timeRegions": [],
            "title": "Operations with Blocks",
            "tooltip": {
              "shared": true,
              "sort": 0,
              "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
              "mode": "time",
              "show": true,
              "values": []
            },
            "yaxes": [
              {
                "decimals": 0,
                "format": "rps",
                "label": "",
                "logBase": 1,
                "min": "0",
                "show": true
              },
              {
                "decimals": 0,
                "format": "wps",
                "logBase": 1,
                "min": "0",
                "show": true
              }
            ],
            "yaxis": {
              "align": false
            }
          },
          {
            "aliasColors": {},
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": {
              "type": "prometheus"
            },
            "decimals": 2,
            "editable": true,
            "error": false,
            "fill": 2,
            "grid": {},
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 12,
              "y": 10
            },
            "id": 2,
            "legend": {
              "alignAsTable": true,
              "avg": true,
              "current": false,
              "hideZero": false,
              "max": true,
              "min": true,
              "rightSide": false,
              "show": true,
              "sort": "avg",
              "sortDesc": true,
              "total": false,
              "values": true
            },
            "lines": true,
            "linewidth": 2,
            "links": [],
            "nullPointMode": "connected",
            "percentage": false,
            "pointradius": 5,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
              {
                "alias": "Buffers Allocated",
                "datasource": {
                  "type": "prometheus"
                },
                "dsType": "prometheus",
                "expr": "\
rate(pg_stat_bgwriter_buffers_alloc{instance='$host'}[$interval]) \n\
or \n\
rate(pg_stat_bgwriter_buffers_alloc_total{instance='$host'}[$interval]) \n\
or \n\
irate(pg_stat_bgwriter_buffers_alloc{instance='$host'}[5m]) \n\
or \n\
irate(pg_stat_bgwriter_buffers_alloc_total{instance='$host'}[5m]) \n\
",
                "format": "time_series",
                "groupBy": [
                  {
                    "params": [
                      "$interval"
                    ],
                    "type": "time"
                  },
                  {
                    "params": [
                      "null"
                    ],
                    "type": "fill"
                  }
                ],
                "interval": "$interval",
                "intervalFactor": 1,
                "legendFormat": "Allocated",
                "measurement": "postgresql",
                "policy": "default",
                "refId": "A",
                "resultFormat": "time_series",
                "select": [
                  [
                    {
                      "params": [
                        "buffers_alloc"
                      ],
                      "type": "field"
                    },
                    {
                      "params": [],
                      "type": "mean"
                    },
                    {
                      "params": [],
                      "type": "difference"
                    }
                  ]
                ],
                "step": 2,
                "tags": [
                  {
                    "key": "host",
                    "operator": "=~",
                    "value": "/^$host$/"
                  }
                ]
              },
              {
                "alias": "Buffers Allocated",
                "datasource": {
                  "type": "prometheus"
                },
                "dsType": "prometheus",
                "expr": "\
rate(pg_stat_bgwriter_buffers_backend_fsync{instance='$host'}[$interval]) \n\
or \n\
rate(pg_stat_bgwriter_buffers_backend_fsync_total{instance='$host'}[$interval]) \n\
or \n\
irate(pg_stat_bgwriter_buffers_backend_fsync{instance='$host'}[5m]) \n\
or \n\
irate(pg_stat_bgwriter_buffers_backend_fsync_total{instance='$host'}[5m]) \n\
",
                "format": "time_series",
                "groupBy": [
                  {
                    "params": [
                      "$interval"
                    ],
                    "type": "time"
                  },
                  {
                    "params": [
                      "null"
                    ],
                    "type": "fill"
                  }
                ],
                "interval": "$interval",
                "intervalFactor": 1,
                "legendFormat": "Fsync calls by a backend",
                "measurement": "postgresql",
                "policy": "default",
                "refId": "B",
                "resultFormat": "time_series",
                "select": [
                  [
                    {
                      "params": [
                        "buffers_alloc"
                      ],
                      "type": "field"
                    },
                    {
                      "params": [],
                      "type": "mean"
                    },
                    {
                      "params": [],
                      "type": "difference"
                    }
                  ]
                ],
                "step": 2,
                "tags": [
                  {
                    "key": "host",
                    "operator": "=~",
                    "value": "/^$host$/"
                  }
                ]
              },
              {
                "alias": "Buffers Allocated",
                "datasource": {
                  "type": "prometheus"
                },
                "dsType": "prometheus",
                "expr": "\
rate(pg_stat_bgwriter_buffers_backend{instance='$host'}[$interval]) \n\
or \n\
rate(pg_stat_bgwriter_buffers_backend_total{instance='$host'}[$interval]) \n\
or \n\
irate(pg_stat_bgwriter_buffers_backend{instance='$host'}[5m]) \n\
or \n\
irate(pg_stat_bgwriter_buffers_backend_total{instance='$host'}[5m]) \n\
",
                "format": "time_series",
                "groupBy": [
                  {
                    "params": [
                      "$interval"
                    ],
                    "type": "time"
                  },
                  {
                    "params": [
                      "null"
                    ],
                    "type": "fill"
                  }
                ],
                "interval": "$interval",
                "intervalFactor": 1,
                "legendFormat": "Written directly by a backend",
                "measurement": "postgresql",
                "policy": "default",
                "refId": "C",
                "resultFormat": "time_series",
                "select": [
                  [
                    {
                      "params": [
                        "buffers_alloc"
                      ],
                      "type": "field"
                    },
                    {
                      "params": [],
                      "type": "mean"
                    },
                    {
                      "params": [],
                      "type": "difference"
                    }
                  ]
                ],
                "step": 2,
                "tags": [
                  {
                    "key": "host",
                    "operator": "=~",
                    "value": "/^$host$/"
                  }
                ]
              },
              {
                "alias": "Buffers Allocated",
                "datasource": {
                  "type": "prometheus"
                },
                "dsType": "prometheus",
                "expr": "\
rate(pg_stat_bgwriter_buffers_clean{instance='$host'}[$interval]) \n\
or \n\
rate(pg_stat_bgwriter_buffers_clean_total{instance='$host'}[$interval]) \n\
or \n\
irate(pg_stat_bgwriter_buffers_clean{instance='$host'}[5m]) \n\
or \n\
irate(pg_stat_bgwriter_buffers_clean_total{instance='$host'}[5m]) \n\
",
                "format": "time_series",
                "groupBy": [
                  {
                    "params": [
                      "$interval"
                    ],
                    "type": "time"
                  },
                  {
                    "params": [
                      "null"
                    ],
                    "type": "fill"
                  }
                ],
                "interval": "$interval",
                "intervalFactor": 1,
                "legendFormat": "Written by the background writer",
                "measurement": "postgresql",
                "policy": "default",
                "refId": "D",
                "resultFormat": "time_series",
                "select": [
                  [
                    {
                      "params": [
                        "buffers_alloc"
                      ],
                      "type": "field"
                    },
                    {
                      "params": [],
                      "type": "mean"
                    },
                    {
                      "params": [],
                      "type": "difference"
                    }
                  ]
                ],
                "step": 2,
                "tags": [
                  {
                    "key": "host",
                    "operator": "=~",
                    "value": "/^$host$/"
                  }
                ]
              },
              {
                "alias": "Buffers Allocated",
                "datasource": {
                  "type": "prometheus"
                },
                "dsType": "prometheus",
                "expr": "\
rate(pg_stat_bgwriter_buffers_checkpoint{instance='$host'}[5m]) \n\
or \n\
rate(pg_stat_bgwriter_buffers_checkpoint_total{instance='$host'}[5m]) \n\
or \n\
irate(pg_stat_bgwriter_buffers_checkpoint{instance='$host'}[5m]) \n\
or \n\
irate(pg_stat_bgwriter_buffers_checkpoint_total{instance='$host'}[5m]) \n\
",
                "format": "time_series",
                "groupBy": [
                  {
                    "params": [
                      "$interval"
                    ],
                    "type": "time"
                  },
                  {
                    "params": [
                      "null"
                    ],
                    "type": "fill"
                  }
                ],
                "interval": "$interval",
                "intervalFactor": 1,
                "legendFormat": "Written during checkpoints",
                "measurement": "postgresql",
                "policy": "default",
                "refId": "E",
                "resultFormat": "time_series",
                "select": [
                  [
                    {
                      "params": [
                        "buffers_alloc"
                      ],
                      "type": "field"
                    },
                    {
                      "params": [],
                      "type": "mean"
                    },
                    {
                      "params": [],
                      "type": "difference"
                    }
                  ]
                ],
                "step": 2,
                "tags": [
                  {
                    "key": "host",
                    "operator": "=~",
                    "value": "/^$host$/"
                  }
                ]
              }
            ],
            "thresholds": [],
            "timeRegions": [],
            "title": "Buffers",
            "tooltip": {
              "msResolution": false,
              "shared": true,
              "sort": 0,
              "value_type": "cumulative"
            },
            "type": "graph",
            "xaxis": {
              "mode": "time",
              "show": true,
              "values": []
            },
            "yaxes": [
              {
                "format": "short",
                "logBase": 1,
                "min": 0,
                "show": true
              },
              {
                "format": "short",
                "logBase": 1,
                "show": false
              }
            ],
            "yaxis": {
              "align": false
            }
          }
        ],
        "targets": [
          {
            "datasource": {
              "type": "prometheus"
            },
            "refId": "A"
          }
        ],
        "title": "Buffers & Blocks Operations",
        "type": "row"
      },
      {
        "collapsed": true,
        "datasource": {
          "type": "prometheus"
        },
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 26
        },
        "id": 72,
        "panels": [
          {
            "aliasColors": {},
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": {
              "type": "prometheus"
            },
            "decimals": 0,
            "description": "Based on pg_stat_database_conflicts view",
            "fill": 2,
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 0,
              "y": 11
            },
            "id": 28,
            "legend": {
              "alignAsTable": true,
              "avg": true,
              "current": false,
              "max": true,
              "min": true,
              "show": true,
              "sort": "avg",
              "sortDesc": true,
              "total": false,
              "values": true
            },
            "lines": true,
            "linewidth": 2,
            "links": [],
            "nullPointMode": "null",
            "percentage": false,
            "pointradius": 5,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
              {
                "datasource": {
                  "type": "prometheus"
                },
                "expr": "\
sum( \n\
  rate(pg_stat_database_conflicts_confl_bufferpin{instance=~\"$host\"}[$interval]) \n\
  or \n\
  rate(pg_stat_database_conflicts_confl_bufferpin_total{instance=~\"$host\"}[$interval]) \n\
) \n\
or \n\
sum( \n\
  irate(pg_stat_database_conflicts_confl_bufferpin{instance=~\"$host\"}[5m]) \n\
  or \n\
  irate(pg_stat_database_conflicts_confl_bufferpin_total{instance=~\"$host\"}[5m]) \n\
) \n\
",
                "format": "time_series",
                "interval": "$interval",
                "intervalFactor": 1,
                "legendFormat": "Pinned buffers",
                "metric": "pg_stat_database_conflicts_confl_bufferpin or pg_stat_database_conflicts_confl_bufferpin_total",
                "refId": "A",
                "step": 2
              },
              {
                "datasource": {
                  "type": "prometheus"
                },
                "expr": "\
sum( \n\
  rate(pg_stat_database_conflicts_confl_deadlock{instance=~\"$host\"}[$interval]) \n\
  or \n\
  rate(pg_stat_database_conflicts_confl_deadlock_total{instance=~\"$host\"}[$interval]) \n\
) \n\
or \n\
sum( \n\
  irate(pg_stat_database_conflicts_confl_deadlock{instance=~\"$host\"}[5m]) \n\
  or \n\
  irate(pg_stat_database_conflicts_confl_deadlock_total{instance=~\"$host\"}[5m]) \n\
) \n\
",
                "format": "time_series",
                "interval": "$interval",
                "intervalFactor": 1,
                "legendFormat": "Deadlocks",
                "metric": "pg_stat_database_conflicts_confl_bufferpin or pg_stat_database_conflicts_confl_bufferpin_total",
                "refId": "B",
                "step": 2
              },
              {
                "datasource": {
                  "type": "prometheus"
                },
                "expr": "\
sum( \n\
  rate(pg_stat_database_conflicts_confl_lock{instance=~\"$host\"}[$interval]) \n\
  or \n\
  rate(pg_stat_database_conflicts_confl_lock_total{instance=~\"$host\"}[$interval]) \n\
) \n\
or \n\
sum( \n\
  irate(pg_stat_database_conflicts_confl_lock{instance=~\"$host\"}[5m]) \n\
  or \n\
  irate(pg_stat_database_conflicts_confl_lock_total{instance=~\"$host\"}[5m]) \n\
) \n\
",
                "format": "time_series",
                "interval": "$interval",
                "intervalFactor": 1,
                "legendFormat": "Lock timeouts",
                "metric": "pg_stat_database_conflicts_confl_bufferpin or pg_stat_database_conflicts_confl_bufferpin_total",
                "refId": "C",
                "step": 2
              },
              {
                "datasource": {
                  "type": "prometheus"
                },
                "expr": "\
sum( \n\
  rate(pg_stat_database_conflicts_confl_snapshot{instance=~\"$host\"}[$interval]) \n\
  or \n\
  rate(pg_stat_database_conflicts_confl_snapshot_total{instance=~\"$host\"}[$interval]) \n\
) \n\
or \n\
sum( \n\
  irate(pg_stat_database_conflicts_confl_snapshot{instance=~\"$host\"}[5m]) \n\
  or \n\
  irate(pg_stat_database_conflicts_confl_snapshot_total{instance=~\"$host\"}[5m]) \n\
) \n\
",
                "format": "time_series",
                "interval": "$interval",
                "intervalFactor": 1,
                "legendFormat": "Old snapshots",
                "metric": "pg_stat_database_conflicts_confl_bufferpin or pg_stat_database_conflicts_confl_bufferpin_total",
                "refId": "D",
                "step": 2
              },
              {
                "datasource": {
                  "type": "prometheus"
                },
                "expr": "\
sum( \n\
  rate(pg_stat_database_conflicts_confl_tablespace{instance=~\"$host\"}[$interval]) \n\
  or \n\
  rate(pg_stat_database_conflicts_confl_tablespace_total{instance=~\"$host\"}[$interval]) \n\
) \n\
or \n\
sum( \n\
  irate(pg_stat_database_conflicts_confl_tablespace{instance=~\"$host\"}[5m]) \n\
  or \n\
  irate(pg_stat_database_conflicts_confl_tablespace_total{instance=~\"$host\"}[5m]) \n\
) \n\
",
                "format": "time_series",
                "interval": "$interval",
                "intervalFactor": 1,
                "legendFormat": "Dropped tablespaces ",
                "metric": "pg_stat_database_conflicts_confl_bufferpin or pg_stat_database_conflicts_confl_bufferpin_total",
                "refId": "E",
                "step": 2
              }
            ],
            "thresholds": [],
            "timeRegions": [],
            "title": "Canceled Queries",
            "tooltip": {
              "shared": true,
              "sort": 0,
              "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
              "mode": "time",
              "show": true,
              "values": []
            },
            "yaxes": [
              {
                "decimals": 0,
                "format": "ops",
                "logBase": 1,
                "min": "0",
                "show": true
              },
              {
                "format": "short",
                "logBase": 1,
                "show": true
              }
            ],
            "yaxis": {
              "align": false
            }
          },
          {
            "aliasColors": {},
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": {
              "type": "prometheus"
            },
            "decimals": 2,
            "editable": true,
            "error": false,
            "fill": 2,
            "grid": {},
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 12,
              "y": 11
            },
            "id": 14,
            "legend": {
              "alignAsTable": true,
              "avg": true,
              "current": false,
              "max": true,
              "min": true,
              "show": true,
              "sort": "avg",
              "sortDesc": true,
              "total": false,
              "values": true
            },
            "lines": true,
            "linewidth": 2,
            "links": [],
            "maxPerRow": 6,
            "nullPointMode": "connected",
            "percentage": true,
            "pointradius": 1,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
              {
                "datasource": {
                  "type": "prometheus"
                },
                "expr": "sum(pg_stat_database_blks_hit{datname=~\"$db\",instance=~\"$host\",datname!~\"template.*\"}) by (datname) /\n(sum(pg_stat_database_blks_hit{datname=~\"$db\",instance=~\"$host\",datname!~\"template.*\"}) by (datname) + \nsum(pg_stat_database_blks_read{datname=~\"$db\",instance=~\"$host\",datname!~\"template.*\"}) by (datname))",
                "format": "time_series",
                "interval": "$interval",
                "intervalFactor": 1,
                "legendFormat": "Cache hit rate {{datname}}",
                "refId": "B"
              }
            ],
            "thresholds": [],
            "timeRegions": [],
            "title": "Cache Hit Ratio",
            "tooltip": {
              "msResolution": false,
              "shared": true,
              "sort": 0,
              "value_type": "cumulative"
            },
            "type": "graph",
            "xaxis": {
              "mode": "time",
              "show": true,
              "values": []
            },
            "yaxes": [
              {
                "format": "percentunit",
                "logBase": 1,
                "max": "1",
                "min": "0",
                "show": true
              },
              {
                "format": "percent",
                "label": "",
                "logBase": 1,
                "show": false
              }
            ],
            "yaxis": {
              "align": false
            }
          },
          {
            "aliasColors": {},
            "bars": false,
            "dashLength": 10,
            "dashes": false,
            "datasource": {
              "type": "prometheus"
            },
            "fill": 2,
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 0,
              "y": 19
            },
            "id": 22,
            "legend": {
              "alignAsTable": true,
              "avg": true,
              "current": false,
              "hideEmpty": false,
              "hideZero": false,
              "max": true,
              "min": true,
              "show": true,
              "sort": "avg",
              "sortDesc": true,
              "total": false,
              "values": true
            },
            "lines": true,
            "linewidth": 2,
            "links": [],
            "nullPointMode": "null",
            "percentage": false,
            "pointradius": 5,
            "points": false,
            "renderer": "flot",
            "seriesOverrides": [],
            "spaceLength": 10,
            "stack": false,
            "steppedLine": false,
            "targets": [
              {
                "datasource": {
                  "type": "prometheus"
                },
                "expr": "\
rate(pg_stat_bgwriter_checkpoint_sync_time{instance='$host'}[$interval]) \n\
or \n\
rate(pg_stat_bgwriter_checkpoint_sync_time_total{instance='$host'}[$interval]) \n\
or \n\
irate(pg_stat_bgwriter_checkpoint_sync_time{instance='$host'}[5m]) \n\
or \n\
irate(pg_stat_bgwriter_checkpoint_sync_time_total{instance='$host'}[5m]) \n\
",
                "format": "time_series",
                "hide": false,
                "interval": "$interval",
                "intervalFactor": 1,
                "legendFormat": "Files Synchronization to disk",
                "metric": "pg_stat_bgwriter_checkpoint_sync_time or pg_stat_bgwriter_checkpoint_sync_time_total",
                "refId": "A",
                "step": 2
              },
              {
                "datasource": {
                  "type": "prometheus"
                },
                "expr": "\
rate(pg_stat_bgwriter_checkpoint_write_time{instance='$host'}[$interval]) \n\
or \n\
rate(pg_stat_bgwriter_checkpoint_write_time_total{instance='$host'}[$interval]) \n\
or \n\
irate(pg_stat_bgwriter_checkpoint_write_time{instance='$host'}[5m]) \n\
or \n\
irate(pg_stat_bgwriter_checkpoint_write_time_total{instance='$host'}[5m]) \n\
",
                "format": "time_series",
                "hide": false,
                "interval": "$interval",
                "intervalFactor": 1,
                "legendFormat": "Written Files to disk",
                "metric": "pg_stat_bgwriter_checkpoint_write_time or pg_stat_bgwriter_checkpoint_write_time_total",
                "refId": "B",
                "step": 2
              }
            ],
            "thresholds": [],
            "timeRegions": [],
            "title": "Checkpoint stats",
            "tooltip": {
              "shared": true,
              "sort": 0,
              "value_type": "individual"
            },
            "type": "graph",
            "xaxis": {
              "mode": "time",
              "show": true,
              "values": []
            },
            "yaxes": [
              {
                "format": "ops",
                "logBase": 1,
                "min": "0",
                "show": true
              },
              {
                "format": "ms",
                "logBase": 1,
                "show": false
              }
            ],
            "yaxis": {
              "align": false
            }
          }
        ],
        "targets": [
          {
            "datasource": {
              "type": "prometheus"
            },
            "refId": "A"
          }
        ],
        "title": "Others",
        "type": "row"
      },
      {
        "collapsed": true,
        "datasource": {
          "type": "prometheus"
        },
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 27
        },
        "id": 60,
        "panels": [
          {
            "content": "<table style=\"width:100%; border: 2px solid grey;\">\n  <tr><td></td><td></td><td></td><td></td></tr>\n  <tr><td> The maximum number of concurrent connections </td><td>${max_connections}</td><td> Shared memory buffers (bytes) </td><td>${shared_buffers}</td></tr>\n  <tr><td> The maximum memory to be used for query workspaces (bytes)</td><td>${work_mem}</td><td> The number of disk-page buffers in shared memory for WAL (bytes)</td><td>${wal_buffers}</td></tr>\n  <tr><td> The number of pages per write ahead log segment (bytes) </td><td>${wal_segment_size}</td><td>The maximum memory to be used for query workspaces (bytes)</td><td>${maintenance_work_mem}</td></tr>\n  <tr><td> The block size in the write ahead log </td><td>${block_size}</td><td>The maximum distance in log segments between automatic WAL checkpoints</td><td>${checkpoint_segments}</td></tr>\n  <tr><td> Time spent flushing dirty buffers during checkpoint, as fraction of checkpoint interval </td><td>${checkpoint_timeout}</td><td>The maximum number of simultaneously running WAL sender processes</td><td>${max_wal_senders}</td></tr>\n  <tr><td> The minimum size to shrink the WAL to (bytes)</td><td>${min_wal_size}</td><td>The WAL size that triggers a checkpoint (bytes)</td><td>${max_wal_size}</td></tr>\n  <tr><td> Compresses full-page writes written in WAL file </td><td>${wal_compression}</td><td>Maximum number of concurrent worker processes</td><td>${max_worker_processes}</td></tr>\n  <tr><td> The maximum number of parallel processes per executor node </td><td>${max_parallel_workers_per_gather}</td><td>The maximum number of parallel processes per executor node</td><td>${max_parallel_workers}</td></tr>\n  <tr><td> The default statistics target </td><td>${default_statistics_target}</td><td>The planner's estimate of the cost of a sequentially fetched disk page </td><td>${seq_page_cost}</td></tr>\n  <tr><td> The planner's estimate of the cost of a nonsequentially fetched disk page </td><td>${random_page_cost}</td><td>The planner's assumption about the size of the disk cache</td><td>${effective_cache_size}</td></tr>\n  <tr><td> Number of simultaneous requests that can be handled efficiently by the disk subsystem </td><td>${effective_io_concurrency}</td><td>Forces synchronization of updates to disk </td><td>${fsync}</td></tr>\n  <tr><td> Starts the autovacuum subprocess </td><td>${autovacuum}</td><td>Number of tuple inserts, updates, or deletes prior to analyze as a fraction of reltuples</td><td>${autovacuum_analyze_scale_factor}</td></tr>\n  <tr><td> Minimum number of tuple inserts, updates, or deletes prior to analyze </td><td>${autovacuum_analyze_threshold}</td><td>Number of tuple updates or deletes prior to vacuum as a fraction of reltuples</td><td>${autovacuum_vacuum_scale_factor}</td></tr>\n  <tr><td> Minimum number of tuple updates or deletes prior to vacuum </td><td>${autovacuum_vacuum_threshold}</td><td>Vacuum cost amount available before napping, for autovacuum </td><td>${autovacuum_vacuum_cost_limit}</td></tr>\n  <tr><td> Vacuum cost delay in milliseconds, for autovacuum (seconds) </td><td>${autovacuum_vacuum_cost_delay}</td><td> The maximum number of simultaneously running autovacuum worker processes </td><td>${autovacuum_max_workers}</td></tr>\n  <tr><td> Time to sleep between autovacuum runs (seconds) </td><td>${autovacuum_naptime}</td><td>Age at which to autovacuum a table to prevent transaction ID wraparound </td><td>${autovacuum_freeze_max_age}</td></tr>\n  <tr><td> The maximum memory to be used by each autovacuum worker process (bytes)</td><td>${autovacuum_work_mem}</td><td>Multixact age at which to autovacuum a table to prevent multixact wraparound</td><td>${autovacuum_multixact_freeze_max_age}</td></tr>\n  <tr><td> Start a subprocess to capture stderr output and/or csvlogs into log files </td><td>${logging_collector}</td><td>Sets the minimum execution time above which statements will be logged (seconds) </td><td>${log_min_duration_statement}</td></tr>\n  <tr><td> Logs the duration of each completed SQL statement </td><td>${log_duration}</td><td>Logs long lock waits </td><td>${log_lock_waits}</td></tr>\n  <tr><td></td><td></td><td></td><td></td></tr>\n</table>\n\n",
            "gridPos": {
              "h": 18,
              "w": 24,
              "x": 0,
              "y": 13
            },
            "id": 58,
            "links": [],
            "mode": "html",
            "title": "PostgreSQL Settings",
            "type": "text"
          }
        ],
        "targets": [
          {
            "datasource": {
              "type": "prometheus"
            },
            "refId": "A"
          }
        ],
        "title": "Settings",
        "type": "row"
      },
      {
        "collapsed": false,
        "datasource": {
          "type": "prometheus"
        },
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 28
        },
        "id": 88,
        "panels": [],
        "targets": [
          {
            "datasource": {
              "type": "prometheus"
            },
            "refId": "A"
          }
        ],
        "title": "System Summary",
        "type": "row"
      },
      {
        "aliasColors": {},
        "bars": false,
        "dashLength": 10,
        "dashes": false,
        "datasource": {
          "type": "prometheus"
        },
        "decimals": 2,
        "fill": 5,
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 0,
          "y": 29
        },
        "id": 90,
        "legend": {
          "alignAsTable": true,
          "avg": true,
          "current": false,
          "hideEmpty": true,
          "hideZero": true,
          "max": true,
          "min": true,
          "show": true,
          "sort": "avg",
          "sortDesc": true,
          "total": false,
          "values": true
        },
        "lines": true,
        "linewidth": 1,
        "links": [],
        "nullPointMode": "null",
        "percentage": false,
        "pointradius": 5,
        "points": false,
        "renderer": "flot",
        "seriesOverrides": [],
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
          {
            "datasource": {
              "type": "prometheus"
            },
            "expr": "\
avg by () ( \n\
  ( \n\
    sum by (instance,cpu) ( \n\
      ( \n\
        clamp_max( \n\
          rate(node_cpu{instance=~\"$host\",mode!='idle',mode!=\"iowait\"}[$interval]) \n\
          or \n\
          rate(node_cpu_seconds_total{instance=~\"$host\",mode!='idle',mode!=\"iowait\"}[$interval]), \n\
          1 \n\
        ) \n\
      ) \n\
      or \n\
      ( \n\
        clamp_max( \n\
          irate(node_cpu{instance=~\"$host\",mode!='idle',mode!=\"iowait\"}[5m]) \n\
          or \n\
          irate(node_cpu_seconds_total{instance=~\"$host\",mode!='idle',mode!=\"iowait\"}[5m]), \n\
          1 \n\
        ) \n\
      ) \n\
    ) \n\
  ) * 100 \n\
  or \n\
  sum by () ( \n\
    avg_over_time(node_cpu_average{instance=~\"$host\",mode!=\"total\",mode!=\"idle\",mode!=\"\"}[$interval]) \n\
    or \n\
    avg_over_time(node_cpu_average{instance=~\"$host\",mode!=\"total\",mode!=\"idle\",mode!=\"\"}[5m]) \n\
  ) \n\
) \n\
",
            "format": "time_series",
            "interval": "$interval",
            "intervalFactor": 1,
            "legendFormat": "{{mode}}",
            "refId": "A"
          },
          {
            "datasource": {
              "type": "prometheus"
            },
            "expr": "",
            "format": "time_series",
            "intervalFactor": 1,
            "legendFormat": "",
            "refId": "B"
          }
        ],
        "thresholds": [],
        "timeRegions": [],
        "title": "CPU Usage",
        "tooltip": {
          "shared": true,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "mode": "time",
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "format": "percent",
            "logBase": 1,
            "max": "100",
            "min": "0",
            "show": true
          },
          {
            "format": "short",
            "logBase": 1,
            "show": false
          }
        ],
        "yaxis": {
          "align": false
        }
      },
      {
        "aliasColors": {
          "Max CPU Core Utilization": "#bf1b00"
        },
        "bars": false,
        "dashLength": 10,
        "dashes": false,
        "datasource": {
          "type": "prometheus"
        },
        "decimals": 2,
        "fill": 2,
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 12,
          "y": 29
        },
        "id": 92,
        "legend": {
          "alignAsTable": true,
          "avg": true,
          "current": false,
          "max": true,
          "min": true,
          "show": true,
          "sort": "avg",
          "sortDesc": true,
          "total": false,
          "values": true
        },
        "lines": true,
        "linewidth": 2,
        "links": [],
        "nullPointMode": "null",
        "percentage": false,
        "pointradius": 5,
        "points": false,
        "renderer": "flot",
        "seriesOverrides": [
          {
            "alias": "Max CPU Core Utilization",
            "lines": false,
            "pointradius": 1,
            "points": true,
            "yaxis": 2
          }
        ],
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
          {
            "datasource": {
              "type": "prometheus"
            },
            "expr": "(avg_over_time(node_procs_running{instance=~\"$host\"}[$interval])-1) / scalar(count((node_cpu{mode=\"user\", instance=~\"$host\"} or node_cpu_seconds_total{mode=\"user\", instance=~\"$host\"}))) or (avg_over_time(node_procs_running{instance=~\"$host\"}[5m])-1) / scalar(count((node_cpu{mode=\"user\", instance=~\"$host\"} or node_cpu_seconds_total{mode=\"user\", instance=~\"$host\"})))",
            "format": "time_series",
            "interval": "$interval",
            "intervalFactor": 1,
            "legendFormat": "Normalized CPU Load",
            "refId": "A"
          },
          {
            "datasource": {
              "type": "prometheus"
            },
            "expr": "\
clamp_max( \n\
  max by () ( \n\
    sum by (cpu) ( \n\
      ( \n\
        clamp_max( \n\
          rate(node_cpu{instance=~\"$host\",mode!=\"idle\",mode!=\"iowait\"}[$interval]) \n\
          or \n\
          rate(node_cpu_seconds_total{instance=~\"$host\",mode!=\"idle\",mode!=\"iowait\"}[$interval]), \n\
          1 \n\
        ) \n\
      ) \n\
      or \n\
      ( \n\
        clamp_max( \n\
          irate(node_cpu{instance=~\"$host\",mode!=\"idle\",mode!=\"iowait\"}[5m]) \n\
          or \n\
          irate(node_cpu_seconds_total{instance=~\"$host\",mode!=\"idle\",mode!=\"iowait\"}[5m]), \n\
          1 \n\
        ) \n\
      ) \n\
    ) \n\
  ), \n\
  1 \n\
) \n\
",
            "format": "time_series",
            "interval": "$interval",
            "intervalFactor": 1,
            "legendFormat": "Max CPU Core Utilization",
            "refId": "B"
          },
          {
            "datasource": {
              "type": "prometheus"
            },
            "expr": "avg_over_time(node_procs_blocked{instance=~\"$host\"}[$interval]) or avg_over_time(node_procs_blocked{instance=~\"$host\"}[5m])",
            "format": "time_series",
            "interval": "$interval",
            "intervalFactor": 1,
            "legendFormat": "IO Load",
            "refId": "C"
          }
        ],
        "thresholds": [],
        "timeRegions": [],
        "title": "Saturation and Max Core Usage",
        "tooltip": {
          "shared": true,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "mode": "time",
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "format": "short",
            "logBase": 1,
            "min": "0",
            "show": true
          },
          {
            "format": "percentunit",
            "logBase": 1,
            "max": "1",
            "min": "0",
            "show": true
          }
        ],
        "yaxis": {
          "align": false
        }
      },
      {
        "aliasColors": {},
        "bars": false,
        "dashLength": 10,
        "dashes": false,
        "datasource": {
          "type": "prometheus"
        },
        "decimals": 2,
        "fill": 2,
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 0,
          "y": 37
        },
        "id": 94,
        "legend": {
          "alignAsTable": true,
          "avg": true,
          "current": false,
          "max": true,
          "min": true,
          "show": true,
          "total": false,
          "values": true
        },
        "lines": true,
        "linewidth": 2,
        "links": [],
        "nullPointMode": "null",
        "percentage": false,
        "pointradius": 5,
        "points": false,
        "renderer": "flot",
        "seriesOverrides": [
          {
            "alias": "Disk Writes (Page Out)",
            "transform": "negative-Y"
          },
          {
            "alias": "Total",
            "legend": false,
            "lines": false
          },
          {
            "alias": "Swap Out (Writes)",
            "transform": "negative-Y"
          }
        ],
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
          {
            "datasource": {
              "type": "prometheus"
            },
            "expr": "\
rate(node_vmstat_pgpgin{instance=~\"$host\"}[$interval]) * 1024 \n\
or \n\
rate(node_vmstat_pgpgin_total{instance=~\"$host\"}[$interval]) * 1024 \n\
or \n\
irate(node_vmstat_pgpgin{instance=~\"$host\"}[5m]) * 1024 \n\
or \n\
irate(node_vmstat_pgpgin_total{instance=~\"$host\"}[5m]) * 1024 \n\
",
            "format": "time_series",
            "interval": "$interval",
            "intervalFactor": 1,
            "legendFormat": "Disk Reads (Page In)",
            "refId": "A"
          },
          {
            "datasource": {
              "type": "prometheus"
            },
            "expr": "\
rate(node_vmstat_pgpgout{instance=~\"$host\"}[$interval]) * 1024 \n\
or \n\
rate(node_vmstat_pgpgout_total{instance=~\"$host\"}[$interval]) * 1024 \n\
or \n\
irate(node_vmstat_pgpgout{instance=~\"$host\"}[5m]) * 1024 \n\
or \n\
irate(node_vmstat_pgpgout_total{instance=~\"$host\"}[5m]) * 1024 \n\
",
            "format": "time_series",
            "interval": "$interval",
            "intervalFactor": 1,
            "legendFormat": "Disk Writes (Page Out)",
            "refId": "B"
          },
          {
            "datasource": {
              "type": "prometheus"
            },
            "expr": "\
( \n\
  rate(node_vmstat_pgpgin{instance=~\"$host\"}[$interval]) * 1024 \n\
  or \n\
  rate(node_vmstat_pgpgin_total{instance=~\"$host\"}[$interval]) * 1024 \n\
  or \n\
  irate(node_vmstat_pgpgin{instance=~\"$host\"}[5m]) * 1024 \n\
  or \n\
  irate(node_vmstat_pgpgin_total{instance=~\"$host\"}[5m]) * 1024 \n\
) + ( \n\
  rate(node_vmstat_pgpgout{instance=~\"$host\"}[$interval]) * 1024 \n\
  or \n\
  rate(node_vmstat_pgpgout_total{instance=~\"$host\"}[$interval]) * 1024 \n\
  or \n\
  irate(node_vmstat_pgpgout{instance=~\"$host\"}[5m]) * 1024 \n\
  or \n\
  irate(node_vmstat_pgpgout_total{instance=~\"$host\"}[5m]) * 1024 \n\
) \n\
",
            "format": "time_series",
            "interval": "$interval",
            "intervalFactor": 1,
            "legendFormat": "Total",
            "refId": "C"
          },
          {
            "datasource": {
              "type": "prometheus"
            },
            "expr": "\
rate(node_vmstat_pswpin{instance=~\"$host\"}[$interval]) * 4096 \n\
or \n\
rate(node_vmstat_pswpin_total{instance=~\"$host\"}[$interval]) * 4096 \n\
or \n\
irate(node_vmstat_pswpin{instance=~\"$host\"}[5m]) * 4096 \n\
or \n\
irate(node_vmstat_pswpin_total{instance=~\"$host\"}[5m]) * 4096 \n\
",
            "format": "time_series",
            "interval": "$interval",
            "intervalFactor": 1,
            "legendFormat": "Swap In (Reads)",
            "refId": "D"
          },
          {
            "datasource": {
              "type": "prometheus"
            },
            "expr": "\
rate(node_vmstat_pswpout{instance=~\"$host\"}[$interval]) * 4096 \n\
or \n\
rate(node_vmstat_pswpout_total{instance=~\"$host\"}[$interval]) * 4096 \n\
or \n\
irate(node_vmstat_pswpout{instance=~\"$host\"}[5m]) * 4096 \n\
or \n\
irate(node_vmstat_pswpout_total{instance=~\"$host\"}[5m]) * 4096 \n\
",
            "format": "time_series",
            "interval": "$interval",
            "intervalFactor": 1,
            "legendFormat": "Swap Out (Writes)",
            "refId": "E"
          }
        ],
        "thresholds": [],
        "timeRegions": [],
        "title": "Disk I/O and Swap Activity",
        "tooltip": {
          "shared": true,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "mode": "time",
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "format": "Bps",
            "label": "Page Out (-) / Page In (+)",
            "logBase": 1,
            "show": true
          },
          {
            "format": "short",
            "logBase": 1,
            "show": false
          }
        ],
        "yaxis": {
          "align": false
        }
      },
      {
        "aliasColors": {},
        "bars": false,
        "dashLength": 10,
        "dashes": false,
        "datasource": {
          "type": "prometheus"
        },
        "decimals": 2,
        "fill": 2,
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 12,
          "y": 37
        },
        "id": 96,
        "legend": {
          "alignAsTable": true,
          "avg": true,
          "current": false,
          "max": true,
          "min": true,
          "show": true,
          "total": false,
          "values": true
        },
        "lines": true,
        "linewidth": 2,
        "links": [],
        "nullPointMode": "null",
        "percentage": false,
        "pointradius": 5,
        "points": false,
        "renderer": "flot",
        "seriesOverrides": [
          {
            "alias": "Outbound",
            "transform": "negative-Y"
          }
        ],
        "spaceLength": 10,
        "stack": false,
        "steppedLine": false,
        "targets": [
          {
            "datasource": {
              "type": "prometheus"
            },
            "expr": "\
sum( \n\
  rate(node_network_receive_bytes{instance=~\"$host\", device!=\"lo\"}[$interval]) \n\
  or \n\
  rate(node_network_receive_bytes_total{instance=~\"$host\", device!=\"lo\"}[$interval]) \n\
) \n\
or \n\
sum( \n\
  irate(node_network_receive_bytes{instance=~\"$host\", device!=\"lo\"}[5m]) \n\
  or \n\
  irate(node_network_receive_bytes_total{instance=~\"$host\", device!=\"lo\"}[5m]) \n\
) \n\
or \n\
sum( \n\
  max_over_time(rdsosmetrics_network_rx{instance=~\"$host\"}[$interval]) \n\
) \n\
or \n\
sum( \n\
  max_over_time(rdsosmetrics_network_rx{instance=~\"$host\"}[5m]) \n\
) \n\
",
            "format": "time_series",
            "interval": "$interval",
            "intervalFactor": 1,
            "legendFormat": "Inbound",
            "refId": "A"
          },
          {
            "datasource": {
              "type": "prometheus"
            },
            "expr": "\
sum( \n\
  rate(node_network_transmit_bytes{instance=~\"$host\", device!=\"lo\"}[$interval]) \n\
  or \n\
  rate(node_network_transmit_bytes_total{instance=~\"$host\", device!=\"lo\"}[$interval]) \n\
) \n\
or \n\
sum( \n\
  irate(node_network_transmit_bytes{instance=~\"$host\", device!=\"lo\"}[5m]) \n\
  or \n\
  irate(node_network_transmit_bytes_total{instance=~\"$host\", device!=\"lo\"}[5m]) \n\
) \n\
or \n\
sum( \n\
  max_over_time(rdsosmetrics_network_tx{instance=~\"$host\"}[$interval]) \n\
) \n\
or \n\
sum( \n\
  max_over_time(rdsosmetrics_network_tx{instance=~\"$host\"}[5m]) \n\
) \n\
",
            "format": "time_series",
            "interval": "$interval",
            "intervalFactor": 1,
            "legendFormat": "Outbound",
            "refId": "B"
          }
        ],
        "thresholds": [],
        "timeRegions": [],
        "title": "Network Traffic",
        "tooltip": {
          "shared": true,
          "sort": 0,
          "value_type": "individual"
        },
        "type": "graph",
        "xaxis": {
          "mode": "time",
          "show": true,
          "values": []
        },
        "yaxes": [
          {
            "format": "Bps",
            "label": "Outbound (-) / Inbound (+)",
            "logBase": 1,
            "show": true
          },
          {
            "format": "short",
            "logBase": 1,
            "show": false
          }
        ],
        "yaxis": {
          "align": false
        }
      }
    ],
    "refresh": "1m",
    "schemaVersion": 38,
    "style": "dark",
    "tags": [
      "Percona",
      "PostgreSQL"
    ],
    "templating": {
      "list": [
        {
          "auto": true,
          "auto_count": 200,
          "auto_min": "1s",
          "current": {
            "selected": false,
            "text": "auto",
            "value": "$__auto_interval_interval"
          },
          "hide": 0,
          "label": "Interval",
          "name": "interval",
          "options": [
            {
              "selected": true,
              "text": "auto",
              "value": "$__auto_interval_interval"
            },
            {
              "selected": false,
              "text": "1s",
              "value": "1s"
            },
            {
              "selected": false,
              "text": "5s",
              "value": "5s"
            },
            {
              "selected": false,
              "text": "1m",
              "value": "1m"
            },
            {
              "selected": false,
              "text": "5m",
              "value": "5m"
            },
            {
              "selected": false,
              "text": "1h",
              "value": "1h"
            },
            {
              "selected": false,
              "text": "6h",
              "value": "6h"
            },
            {
              "selected": false,
              "text": "1d",
              "value": "1d"
            }
          ],
          "query": "1s,5s,1m,5m,1h,6h,1d",
          "refresh": 2,
          "skipUrlSync": false,
          "type": "interval"
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 0,
          "includeAll": false,
          "label": "Host",
          "multi": false,
          "name": "host",
          "options": [],
          "query": "label_values(pg_up,instance)",
          "refresh": 2,
          "regex": "",
          "skipUrlSync": false,
          "sort": 1,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "allValue": ".*",
          "current": {
            "selected": false,
            "text": "All",
            "value": "$__all"
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 0,
          "includeAll": true,
          "label": "DB",
          "multi": false,
          "name": "db",
          "options": [],
          "query": "label_values(pg_stat_database_tup_fetched{instance=~\"$host\",datname!~\"template.*|postgres\"} or pg_stat_database_tup_fetched_total{instance=~\"$host\",datname!~\"template.*|postgres\"},datname)",
          "refresh": 2,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "version",
          "options": [],
          "query": "label_values(pg_static{instance=~\"$host\"},version)",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 2,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "max_connections",
          "options": [],
          "query": "query_result(pg_settings_max_connections{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "shared_buffers",
          "options": [],
          "query": "query_result(pg_settings_shared_buffers_bytes{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "work_mem",
          "options": [],
          "query": "query_result(pg_settings_work_mem_bytes{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "wal_buffers",
          "options": [],
          "query": "query_result(pg_settings_wal_buffers_bytes{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "wal_segment_size",
          "options": [],
          "query": "query_result(pg_settings_wal_segment_size_bytes{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "maintenance_work_mem",
          "options": [],
          "query": "query_result(pg_settings_maintenance_work_mem_bytes{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "block_size",
          "options": [],
          "query": "query_result(pg_settings_block_size{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "checkpoint_segments",
          "options": [],
          "query": "query_result(pg_settings_checkpoint_segments{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "checkpoint_timeout",
          "options": [],
          "query": "query_result(pg_settings_checkpoint_timeout_seconds{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "default_statistics_target",
          "options": [],
          "query": "query_result(pg_settings_default_statistics_target{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "seq_page_cost",
          "options": [],
          "query": "query_result(pg_settings_seq_page_cost{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "random_page_cost",
          "options": [],
          "query": "query_result(pg_settings_random_page_cost{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "effective_cache_size",
          "options": [],
          "query": "query_result(pg_settings_effective_cache_size_bytes{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "effective_io_concurrency",
          "options": [],
          "query": "query_result(pg_settings_effective_io_concurrency{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "fsync",
          "options": [],
          "query": "query_result(pg_settings_fsync{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "autovacuum",
          "options": [],
          "query": "query_result(pg_settings_autovacuum{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "autovacuum_analyze_scale_factor",
          "options": [],
          "query": "query_result(pg_settings_autovacuum_analyze_scale_factor{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "autovacuum_analyze_threshold",
          "options": [],
          "query": "query_result(pg_settings_autovacuum_analyze_threshold{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "autovacuum_vacuum_scale_factor",
          "options": [],
          "query": "query_result(pg_settings_autovacuum_vacuum_scale_factor{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "autovacuum_vacuum_threshold",
          "options": [],
          "query": "query_result(pg_settings_autovacuum_vacuum_threshold{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "autovacuum_vacuum_cost_limit",
          "options": [],
          "query": "query_result(pg_settings_autovacuum_vacuum_cost_limit{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "autovacuum_vacuum_cost_delay",
          "options": [],
          "query": "query_result(pg_settings_autovacuum_vacuum_cost_delay_seconds{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "autovacuum_max_workers",
          "options": [],
          "query": "query_result(pg_settings_autovacuum_max_workers{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "autovacuum_naptime",
          "options": [],
          "query": "query_result(pg_settings_autovacuum_naptime_seconds{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "autovacuum_freeze_max_age",
          "options": [],
          "query": "query_result(pg_settings_autovacuum_freeze_max_age{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "logging_collector",
          "options": [],
          "query": "query_result(pg_settings_logging_collector{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "log_min_duration_statement",
          "options": [],
          "query": "query_result(pg_settings_log_min_duration_statement_seconds{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "log_duration",
          "options": [],
          "query": "query_result(pg_settings_log_duration{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "log_lock_waits",
          "options": [],
          "query": "query_result(pg_settings_log_lock_waits{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "max_wal_senders",
          "options": [],
          "query": "query_result(pg_settings_max_wal_senders{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "max_wal_size",
          "options": [],
          "query": "query_result(pg_settings_max_wal_size_bytes{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "min_wal_size",
          "options": [],
          "query": "query_result(pg_settings_min_wal_size_bytes{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "wal_compression",
          "options": [],
          "query": "query_result(pg_settings_wal_compression{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "max_worker_processes",
          "options": [],
          "query": "query_result(pg_settings_max_worker_processes{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "max_parallel_workers_per_gather",
          "options": [],
          "query": "query_result(pg_settings_max_parallel_workers_per_gather{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "max_parallel_workers",
          "options": [],
          "query": "query_result(pg_settings_max_parallel_workers_per_gather{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "autovacuum_work_mem",
          "options": [],
          "query": "query_result(pg_settings_autovacuum_work_mem_bytes{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        },
        {
          "current": {
            "isNone": true,
            "selected": false,
            "text": "None",
            "value": ""
          },
          "datasource": {
            "type": "prometheus"
          },
          "definition": "",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "autovacuum_multixact_freeze_max_age",
          "options": [],
          "query": "query_result(pg_settings_autovacuum_multixact_freeze_max_age{instance=~\"$host\",job=\"postgresql\"})",
          "refresh": 2,
          "regex": "/ ([0-9\\.]+)/",
          "skipUrlSync": false,
          "sort": 0,
          "tagValuesQuery": "",
          "tagsQuery": "",
          "type": "query",
          "useTags": false
        }
      ]
    },
    "time": {
      "from": "now-12h",
      "to": "now"
    },
    "timepicker": {
      "hidden": false,
      "refresh_intervals": [
        "5s",
        "10s",
        "30s",
        "1m",
        "5m",
        "15m",
        "30m",
        "1h",
        "2h",
        "1d"
      ],
      "time_options": [
        "5m",
        "15m",
        "1h",
        "6h",
        "12h",
        "24h",
        "2d",
        "7d",
        "30d"
      ]
    },
    "timezone": "browser",
    "title": "PostgreSQL Overview",
    "uid": "ssm-postgresql-overview",
    "version": 1,
    "weekStart": ""
  }